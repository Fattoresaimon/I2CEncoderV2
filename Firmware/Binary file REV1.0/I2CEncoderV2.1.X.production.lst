

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 21 21:20:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Pro license) build 20181220022703 Og9f 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	swtext4,local,class=CONST,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text42,local,class=CODE,merge=1,delta=2
    20                           	psect	text45,local,class=CODE,merge=1,delta=2
    21                           	psect	text46,local,class=CODE,merge=1,delta=2
    22                           	psect	text47,local,class=CODE,merge=1,delta=2
    23                           	psect	swtext5,local,class=CONST,delta=2
    24                           	psect	swtext6,local,class=CONST,delta=2
    25                           	psect	text50,local,class=CODE,merge=1,delta=2
    26                           	psect	text51,local,class=CODE,merge=1,delta=2
    27                           	psect	text52,local,class=CODE,merge=1,delta=2
    28                           	psect	text56,local,class=CODE,merge=1,delta=2
    29                           	psect	text57,local,class=CODE,merge=1,delta=2
    30                           	psect	text58,local,class=CODE,merge=1,delta=2
    31                           	psect	text59,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext7,local,class=CONST,delta=2
    33                           	psect	swtext8,local,class=CONST,delta=2
    34                           	psect	swtext9,local,class=CONST,delta=2
    35                           	psect	text71,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext10,local,class=CONST,delta=2
    37                           	psect	text76,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F18345 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0097                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  018E                     	;# 
   138  0197                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021D                     	;# 
   189  021E                     	;# 
   190  021F                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0297                     	;# 
   203  0298                     	;# 
   204  029F                     	;# 
   205  030C                     	;# 
   206  030D                     	;# 
   207  030E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0314                     	;# 
   213  0315                     	;# 
   214  0315                     	;# 
   215  0316                     	;# 
   216  0317                     	;# 
   217  0318                     	;# 
   218  038C                     	;# 
   219  038D                     	;# 
   220  038E                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  0394                     	;# 
   225  0395                     	;# 
   226  0396                     	;# 
   227  0397                     	;# 
   228  0398                     	;# 
   229  0399                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0411                     	;# 
   236  0411                     	;# 
   237  0412                     	;# 
   238  0413                     	;# 
   239  0414                     	;# 
   240  0415                     	;# 
   241  0416                     	;# 
   242  0417                     	;# 
   243  0418                     	;# 
   244  0418                     	;# 
   245  0419                     	;# 
   246  041A                     	;# 
   247  041B                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  041F                     	;# 
   252  0498                     	;# 
   253  0498                     	;# 
   254  0499                     	;# 
   255  049A                     	;# 
   256  049B                     	;# 
   257  049B                     	;# 
   258  049C                     	;# 
   259  049D                     	;# 
   260  049E                     	;# 
   261  049F                     	;# 
   262  0617                     	;# 
   263  0618                     	;# 
   264  0619                     	;# 
   265  0619                     	;# 
   266  061A                     	;# 
   267  061B                     	;# 
   268  061C                     	;# 
   269  061C                     	;# 
   270  061F                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0696                     	;# 
   277  0697                     	;# 
   278  0698                     	;# 
   279  0699                     	;# 
   280  0711                     	;# 
   281  0712                     	;# 
   282  0713                     	;# 
   283  0714                     	;# 
   284  0715                     	;# 
   285  0716                     	;# 
   286  0717                     	;# 
   287  0718                     	;# 
   288  0719                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0892                     	;# 
   296  0892                     	;# 
   297  0892                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0894                     	;# 
   305  0894                     	;# 
   306  0894                     	;# 
   307  0895                     	;# 
   308  0895                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0896                     	;# 
   312  0896                     	;# 
   313  089B                     	;# 
   314  0911                     	;# 
   315  0912                     	;# 
   316  0913                     	;# 
   317  0914                     	;# 
   318  0915                     	;# 
   319  0916                     	;# 
   320  0918                     	;# 
   321  0919                     	;# 
   322  091A                     	;# 
   323  091B                     	;# 
   324  091C                     	;# 
   325  091D                     	;# 
   326  091E                     	;# 
   327  091F                     	;# 
   328  0E0F                     	;# 
   329  0E10                     	;# 
   330  0E11                     	;# 
   331  0E12                     	;# 
   332  0E13                     	;# 
   333  0E14                     	;# 
   334  0E15                     	;# 
   335  0E16                     	;# 
   336  0E17                     	;# 
   337  0E18                     	;# 
   338  0E19                     	;# 
   339  0E1A                     	;# 
   340  0E1B                     	;# 
   341  0E1C                     	;# 
   342  0E1D                     	;# 
   343  0E1E                     	;# 
   344  0E1F                     	;# 
   345  0E20                     	;# 
   346  0E21                     	;# 
   347  0E22                     	;# 
   348  0E24                     	;# 
   349  0E25                     	;# 
   350  0E28                     	;# 
   351  0E29                     	;# 
   352  0E2A                     	;# 
   353  0E2B                     	;# 
   354  0E2C                     	;# 
   355  0E2D                     	;# 
   356  0E2E                     	;# 
   357  0E2F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E94                     	;# 
   362  0E95                     	;# 
   363  0E9C                     	;# 
   364  0E9D                     	;# 
   365  0E9E                     	;# 
   366  0E9F                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0EA6                     	;# 
   374  0EA7                     	;# 
   375  0F0F                     	;# 
   376  0F10                     	;# 
   377  0F11                     	;# 
   378  0F12                     	;# 
   379  0F13                     	;# 
   380  0F14                     	;# 
   381  0F15                     	;# 
   382  0F16                     	;# 
   383  0F17                     	;# 
   384  0F18                     	;# 
   385  0F19                     	;# 
   386  0F1A                     	;# 
   387  0F1B                     	;# 
   388  0F1C                     	;# 
   389  0F1D                     	;# 
   390  0F1E                     	;# 
   391  0F1F                     	;# 
   392  0F20                     	;# 
   393  0F21                     	;# 
   394  0F22                     	;# 
   395  0F23                     	;# 
   396  0F24                     	;# 
   397  0F25                     	;# 
   398  0F26                     	;# 
   399  0F27                     	;# 
   400  0F28                     	;# 
   401  0F29                     	;# 
   402  0F2A                     	;# 
   403  0F2B                     	;# 
   404  0F2C                     	;# 
   405  0F2D                     	;# 
   406  0F2E                     	;# 
   407  0F2F                     	;# 
   408  0F30                     	;# 
   409  0F31                     	;# 
   410  0F32                     	;# 
   411  0F33                     	;# 
   412  0F34                     	;# 
   413  0F35                     	;# 
   414  0F36                     	;# 
   415  0F37                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0097                     	;# 
   470  009B                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018E                     	;# 
   491  0197                     	;# 
   492  0199                     	;# 
   493  0199                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019A                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019D                     	;# 
   507  019D                     	;# 
   508  019D                     	;# 
   509  019E                     	;# 
   510  019E                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  019F                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  020C                     	;# 
   518  020D                     	;# 
   519  020E                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0216                     	;# 
   534  0217                     	;# 
   535  0217                     	;# 
   536  0219                     	;# 
   537  021A                     	;# 
   538  021B                     	;# 
   539  021C                     	;# 
   540  021D                     	;# 
   541  021D                     	;# 
   542  021E                     	;# 
   543  021F                     	;# 
   544  028C                     	;# 
   545  028D                     	;# 
   546  028E                     	;# 
   547  0291                     	;# 
   548  0291                     	;# 
   549  0292                     	;# 
   550  0293                     	;# 
   551  0294                     	;# 
   552  0295                     	;# 
   553  0295                     	;# 
   554  0296                     	;# 
   555  0297                     	;# 
   556  0298                     	;# 
   557  029F                     	;# 
   558  030C                     	;# 
   559  030D                     	;# 
   560  030E                     	;# 
   561  0311                     	;# 
   562  0311                     	;# 
   563  0312                     	;# 
   564  0313                     	;# 
   565  0314                     	;# 
   566  0315                     	;# 
   567  0315                     	;# 
   568  0316                     	;# 
   569  0317                     	;# 
   570  0318                     	;# 
   571  038C                     	;# 
   572  038D                     	;# 
   573  038E                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  0394                     	;# 
   578  0395                     	;# 
   579  0396                     	;# 
   580  0397                     	;# 
   581  0398                     	;# 
   582  0399                     	;# 
   583  039A                     	;# 
   584  039C                     	;# 
   585  039D                     	;# 
   586  039E                     	;# 
   587  039F                     	;# 
   588  0411                     	;# 
   589  0411                     	;# 
   590  0412                     	;# 
   591  0413                     	;# 
   592  0414                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  0418                     	;# 
   597  0418                     	;# 
   598  0419                     	;# 
   599  041A                     	;# 
   600  041B                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  041F                     	;# 
   605  0498                     	;# 
   606  0498                     	;# 
   607  0499                     	;# 
   608  049A                     	;# 
   609  049B                     	;# 
   610  049B                     	;# 
   611  049C                     	;# 
   612  049D                     	;# 
   613  049E                     	;# 
   614  049F                     	;# 
   615  0617                     	;# 
   616  0618                     	;# 
   617  0619                     	;# 
   618  0619                     	;# 
   619  061A                     	;# 
   620  061B                     	;# 
   621  061C                     	;# 
   622  061C                     	;# 
   623  061F                     	;# 
   624  0691                     	;# 
   625  0692                     	;# 
   626  0693                     	;# 
   627  0694                     	;# 
   628  0695                     	;# 
   629  0696                     	;# 
   630  0697                     	;# 
   631  0698                     	;# 
   632  0699                     	;# 
   633  0711                     	;# 
   634  0712                     	;# 
   635  0713                     	;# 
   636  0714                     	;# 
   637  0715                     	;# 
   638  0716                     	;# 
   639  0717                     	;# 
   640  0718                     	;# 
   641  0719                     	;# 
   642  0891                     	;# 
   643  0891                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0892                     	;# 
   649  0892                     	;# 
   650  0892                     	;# 
   651  0893                     	;# 
   652  0893                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0894                     	;# 
   658  0894                     	;# 
   659  0894                     	;# 
   660  0895                     	;# 
   661  0895                     	;# 
   662  0895                     	;# 
   663  0896                     	;# 
   664  0896                     	;# 
   665  0896                     	;# 
   666  089B                     	;# 
   667  0911                     	;# 
   668  0912                     	;# 
   669  0913                     	;# 
   670  0914                     	;# 
   671  0915                     	;# 
   672  0916                     	;# 
   673  0918                     	;# 
   674  0919                     	;# 
   675  091A                     	;# 
   676  091B                     	;# 
   677  091C                     	;# 
   678  091D                     	;# 
   679  091E                     	;# 
   680  091F                     	;# 
   681  0E0F                     	;# 
   682  0E10                     	;# 
   683  0E11                     	;# 
   684  0E12                     	;# 
   685  0E13                     	;# 
   686  0E14                     	;# 
   687  0E15                     	;# 
   688  0E16                     	;# 
   689  0E17                     	;# 
   690  0E18                     	;# 
   691  0E19                     	;# 
   692  0E1A                     	;# 
   693  0E1B                     	;# 
   694  0E1C                     	;# 
   695  0E1D                     	;# 
   696  0E1E                     	;# 
   697  0E1F                     	;# 
   698  0E20                     	;# 
   699  0E21                     	;# 
   700  0E22                     	;# 
   701  0E24                     	;# 
   702  0E25                     	;# 
   703  0E28                     	;# 
   704  0E29                     	;# 
   705  0E2A                     	;# 
   706  0E2B                     	;# 
   707  0E2C                     	;# 
   708  0E2D                     	;# 
   709  0E2E                     	;# 
   710  0E2F                     	;# 
   711  0E90                     	;# 
   712  0E91                     	;# 
   713  0E92                     	;# 
   714  0E94                     	;# 
   715  0E95                     	;# 
   716  0E9C                     	;# 
   717  0E9D                     	;# 
   718  0E9E                     	;# 
   719  0E9F                     	;# 
   720  0EA0                     	;# 
   721  0EA1                     	;# 
   722  0EA2                     	;# 
   723  0EA3                     	;# 
   724  0EA4                     	;# 
   725  0EA5                     	;# 
   726  0EA6                     	;# 
   727  0EA7                     	;# 
   728  0F0F                     	;# 
   729  0F10                     	;# 
   730  0F11                     	;# 
   731  0F12                     	;# 
   732  0F13                     	;# 
   733  0F14                     	;# 
   734  0F15                     	;# 
   735  0F16                     	;# 
   736  0F17                     	;# 
   737  0F18                     	;# 
   738  0F19                     	;# 
   739  0F1A                     	;# 
   740  0F1B                     	;# 
   741  0F1C                     	;# 
   742  0F1D                     	;# 
   743  0F1E                     	;# 
   744  0F1F                     	;# 
   745  0F20                     	;# 
   746  0F21                     	;# 
   747  0F22                     	;# 
   748  0F23                     	;# 
   749  0F24                     	;# 
   750  0F25                     	;# 
   751  0F26                     	;# 
   752  0F27                     	;# 
   753  0F28                     	;# 
   754  0F29                     	;# 
   755  0F2A                     	;# 
   756  0F2B                     	;# 
   757  0F2C                     	;# 
   758  0F2D                     	;# 
   759  0F2E                     	;# 
   760  0F2F                     	;# 
   761  0F30                     	;# 
   762  0F31                     	;# 
   763  0F32                     	;# 
   764  0F33                     	;# 
   765  0F34                     	;# 
   766  0F35                     	;# 
   767  0F36                     	;# 
   768  0F37                     	;# 
   769  0FE4                     	;# 
   770  0FE5                     	;# 
   771  0FE6                     	;# 
   772  0FE7                     	;# 
   773  0FE8                     	;# 
   774  0FE9                     	;# 
   775  0FEA                     	;# 
   776  0FEB                     	;# 
   777  0FED                     	;# 
   778  0FEE                     	;# 
   779  0FEF                     	;# 
   780  0000                     	;# 
   781  0001                     	;# 
   782  0002                     	;# 
   783  0003                     	;# 
   784  0004                     	;# 
   785  0005                     	;# 
   786  0006                     	;# 
   787  0007                     	;# 
   788  0008                     	;# 
   789  0009                     	;# 
   790  000A                     	;# 
   791  000B                     	;# 
   792  000C                     	;# 
   793  000D                     	;# 
   794  000E                     	;# 
   795  0010                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0013                     	;# 
   799  0014                     	;# 
   800  0015                     	;# 
   801  0015                     	;# 
   802  0016                     	;# 
   803  0016                     	;# 
   804  0017                     	;# 
   805  0018                     	;# 
   806  0019                     	;# 
   807  0019                     	;# 
   808  001A                     	;# 
   809  001B                     	;# 
   810  001C                     	;# 
   811  001D                     	;# 
   812  001E                     	;# 
   813  001F                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  0090                     	;# 
   818  0091                     	;# 
   819  0092                     	;# 
   820  0093                     	;# 
   821  0094                     	;# 
   822  0097                     	;# 
   823  009B                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  009F                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843  018E                     	;# 
   844  0197                     	;# 
   845  0199                     	;# 
   846  0199                     	;# 
   847  0199                     	;# 
   848  019A                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019C                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019D                     	;# 
   860  019D                     	;# 
   861  019D                     	;# 
   862  019E                     	;# 
   863  019E                     	;# 
   864  019E                     	;# 
   865  019F                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  020C                     	;# 
   871  020D                     	;# 
   872  020E                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0216                     	;# 
   886  0216                     	;# 
   887  0217                     	;# 
   888  0217                     	;# 
   889  0219                     	;# 
   890  021A                     	;# 
   891  021B                     	;# 
   892  021C                     	;# 
   893  021D                     	;# 
   894  021D                     	;# 
   895  021E                     	;# 
   896  021F                     	;# 
   897  028C                     	;# 
   898  028D                     	;# 
   899  028E                     	;# 
   900  0291                     	;# 
   901  0291                     	;# 
   902  0292                     	;# 
   903  0293                     	;# 
   904  0294                     	;# 
   905  0295                     	;# 
   906  0295                     	;# 
   907  0296                     	;# 
   908  0297                     	;# 
   909  0298                     	;# 
   910  029F                     	;# 
   911  030C                     	;# 
   912  030D                     	;# 
   913  030E                     	;# 
   914  0311                     	;# 
   915  0311                     	;# 
   916  0312                     	;# 
   917  0313                     	;# 
   918  0314                     	;# 
   919  0315                     	;# 
   920  0315                     	;# 
   921  0316                     	;# 
   922  0317                     	;# 
   923  0318                     	;# 
   924  038C                     	;# 
   925  038D                     	;# 
   926  038E                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  0393                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  0397                     	;# 
   934  0398                     	;# 
   935  0399                     	;# 
   936  039A                     	;# 
   937  039C                     	;# 
   938  039D                     	;# 
   939  039E                     	;# 
   940  039F                     	;# 
   941  0411                     	;# 
   942  0411                     	;# 
   943  0412                     	;# 
   944  0413                     	;# 
   945  0414                     	;# 
   946  0415                     	;# 
   947  0416                     	;# 
   948  0417                     	;# 
   949  0418                     	;# 
   950  0418                     	;# 
   951  0419                     	;# 
   952  041A                     	;# 
   953  041B                     	;# 
   954  041C                     	;# 
   955  041D                     	;# 
   956  041E                     	;# 
   957  041F                     	;# 
   958  0498                     	;# 
   959  0498                     	;# 
   960  0499                     	;# 
   961  049A                     	;# 
   962  049B                     	;# 
   963  049B                     	;# 
   964  049C                     	;# 
   965  049D                     	;# 
   966  049E                     	;# 
   967  049F                     	;# 
   968  0617                     	;# 
   969  0618                     	;# 
   970  0619                     	;# 
   971  0619                     	;# 
   972  061A                     	;# 
   973  061B                     	;# 
   974  061C                     	;# 
   975  061C                     	;# 
   976  061F                     	;# 
   977  0691                     	;# 
   978  0692                     	;# 
   979  0693                     	;# 
   980  0694                     	;# 
   981  0695                     	;# 
   982  0696                     	;# 
   983  0697                     	;# 
   984  0698                     	;# 
   985  0699                     	;# 
   986  0711                     	;# 
   987  0712                     	;# 
   988  0713                     	;# 
   989  0714                     	;# 
   990  0715                     	;# 
   991  0716                     	;# 
   992  0717                     	;# 
   993  0718                     	;# 
   994  0719                     	;# 
   995  0891                     	;# 
   996  0891                     	;# 
   997  0891                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0892                     	;# 
  1002  0892                     	;# 
  1003  0892                     	;# 
  1004  0893                     	;# 
  1005  0893                     	;# 
  1006  0893                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0894                     	;# 
  1011  0894                     	;# 
  1012  0894                     	;# 
  1013  0895                     	;# 
  1014  0895                     	;# 
  1015  0895                     	;# 
  1016  0896                     	;# 
  1017  0896                     	;# 
  1018  0896                     	;# 
  1019  089B                     	;# 
  1020  0911                     	;# 
  1021  0912                     	;# 
  1022  0913                     	;# 
  1023  0914                     	;# 
  1024  0915                     	;# 
  1025  0916                     	;# 
  1026  0918                     	;# 
  1027  0919                     	;# 
  1028  091A                     	;# 
  1029  091B                     	;# 
  1030  091C                     	;# 
  1031  091D                     	;# 
  1032  091E                     	;# 
  1033  091F                     	;# 
  1034  0E0F                     	;# 
  1035  0E10                     	;# 
  1036  0E11                     	;# 
  1037  0E12                     	;# 
  1038  0E13                     	;# 
  1039  0E14                     	;# 
  1040  0E15                     	;# 
  1041  0E16                     	;# 
  1042  0E17                     	;# 
  1043  0E18                     	;# 
  1044  0E19                     	;# 
  1045  0E1A                     	;# 
  1046  0E1B                     	;# 
  1047  0E1C                     	;# 
  1048  0E1D                     	;# 
  1049  0E1E                     	;# 
  1050  0E1F                     	;# 
  1051  0E20                     	;# 
  1052  0E21                     	;# 
  1053  0E22                     	;# 
  1054  0E24                     	;# 
  1055  0E25                     	;# 
  1056  0E28                     	;# 
  1057  0E29                     	;# 
  1058  0E2A                     	;# 
  1059  0E2B                     	;# 
  1060  0E2C                     	;# 
  1061  0E2D                     	;# 
  1062  0E2E                     	;# 
  1063  0E2F                     	;# 
  1064  0E90                     	;# 
  1065  0E91                     	;# 
  1066  0E92                     	;# 
  1067  0E94                     	;# 
  1068  0E95                     	;# 
  1069  0E9C                     	;# 
  1070  0E9D                     	;# 
  1071  0E9E                     	;# 
  1072  0E9F                     	;# 
  1073  0EA0                     	;# 
  1074  0EA1                     	;# 
  1075  0EA2                     	;# 
  1076  0EA3                     	;# 
  1077  0EA4                     	;# 
  1078  0EA5                     	;# 
  1079  0EA6                     	;# 
  1080  0EA7                     	;# 
  1081  0F0F                     	;# 
  1082  0F10                     	;# 
  1083  0F11                     	;# 
  1084  0F12                     	;# 
  1085  0F13                     	;# 
  1086  0F14                     	;# 
  1087  0F15                     	;# 
  1088  0F16                     	;# 
  1089  0F17                     	;# 
  1090  0F18                     	;# 
  1091  0F19                     	;# 
  1092  0F1A                     	;# 
  1093  0F1B                     	;# 
  1094  0F1C                     	;# 
  1095  0F1D                     	;# 
  1096  0F1E                     	;# 
  1097  0F1F                     	;# 
  1098  0F20                     	;# 
  1099  0F21                     	;# 
  1100  0F22                     	;# 
  1101  0F23                     	;# 
  1102  0F24                     	;# 
  1103  0F25                     	;# 
  1104  0F26                     	;# 
  1105  0F27                     	;# 
  1106  0F28                     	;# 
  1107  0F29                     	;# 
  1108  0F2A                     	;# 
  1109  0F2B                     	;# 
  1110  0F2C                     	;# 
  1111  0F2D                     	;# 
  1112  0F2E                     	;# 
  1113  0F2F                     	;# 
  1114  0F30                     	;# 
  1115  0F31                     	;# 
  1116  0F32                     	;# 
  1117  0F33                     	;# 
  1118  0F34                     	;# 
  1119  0F35                     	;# 
  1120  0F36                     	;# 
  1121  0F37                     	;# 
  1122  0FE4                     	;# 
  1123  0FE5                     	;# 
  1124  0FE6                     	;# 
  1125  0FE7                     	;# 
  1126  0FE8                     	;# 
  1127  0FE9                     	;# 
  1128  0FEA                     	;# 
  1129  0FEB                     	;# 
  1130  0FED                     	;# 
  1131  0FEE                     	;# 
  1132  0FEF                     	;# 
  1133  0000                     	;# 
  1134  0001                     	;# 
  1135  0002                     	;# 
  1136  0003                     	;# 
  1137  0004                     	;# 
  1138  0005                     	;# 
  1139  0006                     	;# 
  1140  0007                     	;# 
  1141  0008                     	;# 
  1142  0009                     	;# 
  1143  000A                     	;# 
  1144  000B                     	;# 
  1145  000C                     	;# 
  1146  000D                     	;# 
  1147  000E                     	;# 
  1148  0010                     	;# 
  1149  0011                     	;# 
  1150  0012                     	;# 
  1151  0013                     	;# 
  1152  0014                     	;# 
  1153  0015                     	;# 
  1154  0015                     	;# 
  1155  0016                     	;# 
  1156  0016                     	;# 
  1157  0017                     	;# 
  1158  0018                     	;# 
  1159  0019                     	;# 
  1160  0019                     	;# 
  1161  001A                     	;# 
  1162  001B                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008D                     	;# 
  1169  008E                     	;# 
  1170  0090                     	;# 
  1171  0091                     	;# 
  1172  0092                     	;# 
  1173  0093                     	;# 
  1174  0094                     	;# 
  1175  0097                     	;# 
  1176  009B                     	;# 
  1177  009B                     	;# 
  1178  009C                     	;# 
  1179  009D                     	;# 
  1180  009E                     	;# 
  1181  009F                     	;# 
  1182  010C                     	;# 
  1183  010D                     	;# 
  1184  010E                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0113                     	;# 
  1188  0114                     	;# 
  1189  0115                     	;# 
  1190  0116                     	;# 
  1191  0117                     	;# 
  1192  0118                     	;# 
  1193  0119                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196  018E                     	;# 
  1197  0197                     	;# 
  1198  0199                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  019A                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019D                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019E                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  020C                     	;# 
  1224  020D                     	;# 
  1225  020E                     	;# 
  1226  0211                     	;# 
  1227  0211                     	;# 
  1228  0212                     	;# 
  1229  0212                     	;# 
  1230  0213                     	;# 
  1231  0213                     	;# 
  1232  0214                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0216                     	;# 
  1239  0216                     	;# 
  1240  0217                     	;# 
  1241  0217                     	;# 
  1242  0219                     	;# 
  1243  021A                     	;# 
  1244  021B                     	;# 
  1245  021C                     	;# 
  1246  021D                     	;# 
  1247  021D                     	;# 
  1248  021E                     	;# 
  1249  021F                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028E                     	;# 
  1253  0291                     	;# 
  1254  0291                     	;# 
  1255  0292                     	;# 
  1256  0293                     	;# 
  1257  0294                     	;# 
  1258  0295                     	;# 
  1259  0295                     	;# 
  1260  0296                     	;# 
  1261  0297                     	;# 
  1262  0298                     	;# 
  1263  029F                     	;# 
  1264  030C                     	;# 
  1265  030D                     	;# 
  1266  030E                     	;# 
  1267  0311                     	;# 
  1268  0311                     	;# 
  1269  0312                     	;# 
  1270  0313                     	;# 
  1271  0314                     	;# 
  1272  0315                     	;# 
  1273  0315                     	;# 
  1274  0316                     	;# 
  1275  0317                     	;# 
  1276  0318                     	;# 
  1277  038C                     	;# 
  1278  038D                     	;# 
  1279  038E                     	;# 
  1280  0391                     	;# 
  1281  0392                     	;# 
  1282  0393                     	;# 
  1283  0394                     	;# 
  1284  0395                     	;# 
  1285  0396                     	;# 
  1286  0397                     	;# 
  1287  0398                     	;# 
  1288  0399                     	;# 
  1289  039A                     	;# 
  1290  039C                     	;# 
  1291  039D                     	;# 
  1292  039E                     	;# 
  1293  039F                     	;# 
  1294  0411                     	;# 
  1295  0411                     	;# 
  1296  0412                     	;# 
  1297  0413                     	;# 
  1298  0414                     	;# 
  1299  0415                     	;# 
  1300  0416                     	;# 
  1301  0417                     	;# 
  1302  0418                     	;# 
  1303  0418                     	;# 
  1304  0419                     	;# 
  1305  041A                     	;# 
  1306  041B                     	;# 
  1307  041C                     	;# 
  1308  041D                     	;# 
  1309  041E                     	;# 
  1310  041F                     	;# 
  1311  0498                     	;# 
  1312  0498                     	;# 
  1313  0499                     	;# 
  1314  049A                     	;# 
  1315  049B                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  049E                     	;# 
  1320  049F                     	;# 
  1321  0617                     	;# 
  1322  0618                     	;# 
  1323  0619                     	;# 
  1324  0619                     	;# 
  1325  061A                     	;# 
  1326  061B                     	;# 
  1327  061C                     	;# 
  1328  061C                     	;# 
  1329  061F                     	;# 
  1330  0691                     	;# 
  1331  0692                     	;# 
  1332  0693                     	;# 
  1333  0694                     	;# 
  1334  0695                     	;# 
  1335  0696                     	;# 
  1336  0697                     	;# 
  1337  0698                     	;# 
  1338  0699                     	;# 
  1339  0711                     	;# 
  1340  0712                     	;# 
  1341  0713                     	;# 
  1342  0714                     	;# 
  1343  0715                     	;# 
  1344  0716                     	;# 
  1345  0717                     	;# 
  1346  0718                     	;# 
  1347  0719                     	;# 
  1348  0891                     	;# 
  1349  0891                     	;# 
  1350  0891                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0892                     	;# 
  1355  0892                     	;# 
  1356  0892                     	;# 
  1357  0893                     	;# 
  1358  0893                     	;# 
  1359  0893                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0894                     	;# 
  1364  0894                     	;# 
  1365  0894                     	;# 
  1366  0895                     	;# 
  1367  0895                     	;# 
  1368  0895                     	;# 
  1369  0896                     	;# 
  1370  0896                     	;# 
  1371  0896                     	;# 
  1372  089B                     	;# 
  1373  0911                     	;# 
  1374  0912                     	;# 
  1375  0913                     	;# 
  1376  0914                     	;# 
  1377  0915                     	;# 
  1378  0916                     	;# 
  1379  0918                     	;# 
  1380  0919                     	;# 
  1381  091A                     	;# 
  1382  091B                     	;# 
  1383  091C                     	;# 
  1384  091D                     	;# 
  1385  091E                     	;# 
  1386  091F                     	;# 
  1387  0E0F                     	;# 
  1388  0E10                     	;# 
  1389  0E11                     	;# 
  1390  0E12                     	;# 
  1391  0E13                     	;# 
  1392  0E14                     	;# 
  1393  0E15                     	;# 
  1394  0E16                     	;# 
  1395  0E17                     	;# 
  1396  0E18                     	;# 
  1397  0E19                     	;# 
  1398  0E1A                     	;# 
  1399  0E1B                     	;# 
  1400  0E1C                     	;# 
  1401  0E1D                     	;# 
  1402  0E1E                     	;# 
  1403  0E1F                     	;# 
  1404  0E20                     	;# 
  1405  0E21                     	;# 
  1406  0E22                     	;# 
  1407  0E24                     	;# 
  1408  0E25                     	;# 
  1409  0E28                     	;# 
  1410  0E29                     	;# 
  1411  0E2A                     	;# 
  1412  0E2B                     	;# 
  1413  0E2C                     	;# 
  1414  0E2D                     	;# 
  1415  0E2E                     	;# 
  1416  0E2F                     	;# 
  1417  0E90                     	;# 
  1418  0E91                     	;# 
  1419  0E92                     	;# 
  1420  0E94                     	;# 
  1421  0E95                     	;# 
  1422  0E9C                     	;# 
  1423  0E9D                     	;# 
  1424  0E9E                     	;# 
  1425  0E9F                     	;# 
  1426  0EA0                     	;# 
  1427  0EA1                     	;# 
  1428  0EA2                     	;# 
  1429  0EA3                     	;# 
  1430  0EA4                     	;# 
  1431  0EA5                     	;# 
  1432  0EA6                     	;# 
  1433  0EA7                     	;# 
  1434  0F0F                     	;# 
  1435  0F10                     	;# 
  1436  0F11                     	;# 
  1437  0F12                     	;# 
  1438  0F13                     	;# 
  1439  0F14                     	;# 
  1440  0F15                     	;# 
  1441  0F16                     	;# 
  1442  0F17                     	;# 
  1443  0F18                     	;# 
  1444  0F19                     	;# 
  1445  0F1A                     	;# 
  1446  0F1B                     	;# 
  1447  0F1C                     	;# 
  1448  0F1D                     	;# 
  1449  0F1E                     	;# 
  1450  0F1F                     	;# 
  1451  0F20                     	;# 
  1452  0F21                     	;# 
  1453  0F22                     	;# 
  1454  0F23                     	;# 
  1455  0F24                     	;# 
  1456  0F25                     	;# 
  1457  0F26                     	;# 
  1458  0F27                     	;# 
  1459  0F28                     	;# 
  1460  0F29                     	;# 
  1461  0F2A                     	;# 
  1462  0F2B                     	;# 
  1463  0F2C                     	;# 
  1464  0F2D                     	;# 
  1465  0F2E                     	;# 
  1466  0F2F                     	;# 
  1467  0F30                     	;# 
  1468  0F31                     	;# 
  1469  0F32                     	;# 
  1470  0F33                     	;# 
  1471  0F34                     	;# 
  1472  0F35                     	;# 
  1473  0F36                     	;# 
  1474  0F37                     	;# 
  1475  0FE4                     	;# 
  1476  0FE5                     	;# 
  1477  0FE6                     	;# 
  1478  0FE7                     	;# 
  1479  0FE8                     	;# 
  1480  0FE9                     	;# 
  1481  0FEA                     	;# 
  1482  0FEB                     	;# 
  1483  0FED                     	;# 
  1484  0FEE                     	;# 
  1485  0FEF                     	;# 
  1486  0000                     	;# 
  1487  0001                     	;# 
  1488  0002                     	;# 
  1489  0003                     	;# 
  1490  0004                     	;# 
  1491  0005                     	;# 
  1492  0006                     	;# 
  1493  0007                     	;# 
  1494  0008                     	;# 
  1495  0009                     	;# 
  1496  000A                     	;# 
  1497  000B                     	;# 
  1498  000C                     	;# 
  1499  000D                     	;# 
  1500  000E                     	;# 
  1501  0010                     	;# 
  1502  0011                     	;# 
  1503  0012                     	;# 
  1504  0013                     	;# 
  1505  0014                     	;# 
  1506  0015                     	;# 
  1507  0015                     	;# 
  1508  0016                     	;# 
  1509  0016                     	;# 
  1510  0017                     	;# 
  1511  0018                     	;# 
  1512  0019                     	;# 
  1513  0019                     	;# 
  1514  001A                     	;# 
  1515  001B                     	;# 
  1516  001C                     	;# 
  1517  001D                     	;# 
  1518  001E                     	;# 
  1519  001F                     	;# 
  1520  008C                     	;# 
  1521  008D                     	;# 
  1522  008E                     	;# 
  1523  0090                     	;# 
  1524  0091                     	;# 
  1525  0092                     	;# 
  1526  0093                     	;# 
  1527  0094                     	;# 
  1528  0097                     	;# 
  1529  009B                     	;# 
  1530  009B                     	;# 
  1531  009C                     	;# 
  1532  009D                     	;# 
  1533  009E                     	;# 
  1534  009F                     	;# 
  1535  010C                     	;# 
  1536  010D                     	;# 
  1537  010E                     	;# 
  1538  0111                     	;# 
  1539  0112                     	;# 
  1540  0113                     	;# 
  1541  0114                     	;# 
  1542  0115                     	;# 
  1543  0116                     	;# 
  1544  0117                     	;# 
  1545  0118                     	;# 
  1546  0119                     	;# 
  1547  018C                     	;# 
  1548  018D                     	;# 
  1549  018E                     	;# 
  1550  0197                     	;# 
  1551  0199                     	;# 
  1552  0199                     	;# 
  1553  0199                     	;# 
  1554  019A                     	;# 
  1555  019A                     	;# 
  1556  019A                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019C                     	;# 
  1563  019C                     	;# 
  1564  019C                     	;# 
  1565  019D                     	;# 
  1566  019D                     	;# 
  1567  019D                     	;# 
  1568  019E                     	;# 
  1569  019E                     	;# 
  1570  019E                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  020C                     	;# 
  1577  020D                     	;# 
  1578  020E                     	;# 
  1579  0211                     	;# 
  1580  0211                     	;# 
  1581  0212                     	;# 
  1582  0212                     	;# 
  1583  0213                     	;# 
  1584  0213                     	;# 
  1585  0214                     	;# 
  1586  0214                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0216                     	;# 
  1592  0216                     	;# 
  1593  0217                     	;# 
  1594  0217                     	;# 
  1595  0219                     	;# 
  1596  021A                     	;# 
  1597  021B                     	;# 
  1598  021C                     	;# 
  1599  021D                     	;# 
  1600  021D                     	;# 
  1601  021E                     	;# 
  1602  021F                     	;# 
  1603  028C                     	;# 
  1604  028D                     	;# 
  1605  028E                     	;# 
  1606  0291                     	;# 
  1607  0291                     	;# 
  1608  0292                     	;# 
  1609  0293                     	;# 
  1610  0294                     	;# 
  1611  0295                     	;# 
  1612  0295                     	;# 
  1613  0296                     	;# 
  1614  0297                     	;# 
  1615  0298                     	;# 
  1616  029F                     	;# 
  1617  030C                     	;# 
  1618  030D                     	;# 
  1619  030E                     	;# 
  1620  0311                     	;# 
  1621  0311                     	;# 
  1622  0312                     	;# 
  1623  0313                     	;# 
  1624  0314                     	;# 
  1625  0315                     	;# 
  1626  0315                     	;# 
  1627  0316                     	;# 
  1628  0317                     	;# 
  1629  0318                     	;# 
  1630  038C                     	;# 
  1631  038D                     	;# 
  1632  038E                     	;# 
  1633  0391                     	;# 
  1634  0392                     	;# 
  1635  0393                     	;# 
  1636  0394                     	;# 
  1637  0395                     	;# 
  1638  0396                     	;# 
  1639  0397                     	;# 
  1640  0398                     	;# 
  1641  0399                     	;# 
  1642  039A                     	;# 
  1643  039C                     	;# 
  1644  039D                     	;# 
  1645  039E                     	;# 
  1646  039F                     	;# 
  1647  0411                     	;# 
  1648  0411                     	;# 
  1649  0412                     	;# 
  1650  0413                     	;# 
  1651  0414                     	;# 
  1652  0415                     	;# 
  1653  0416                     	;# 
  1654  0417                     	;# 
  1655  0418                     	;# 
  1656  0418                     	;# 
  1657  0419                     	;# 
  1658  041A                     	;# 
  1659  041B                     	;# 
  1660  041C                     	;# 
  1661  041D                     	;# 
  1662  041E                     	;# 
  1663  041F                     	;# 
  1664  0498                     	;# 
  1665  0498                     	;# 
  1666  0499                     	;# 
  1667  049A                     	;# 
  1668  049B                     	;# 
  1669  049B                     	;# 
  1670  049C                     	;# 
  1671  049D                     	;# 
  1672  049E                     	;# 
  1673  049F                     	;# 
  1674  0617                     	;# 
  1675  0618                     	;# 
  1676  0619                     	;# 
  1677  0619                     	;# 
  1678  061A                     	;# 
  1679  061B                     	;# 
  1680  061C                     	;# 
  1681  061C                     	;# 
  1682  061F                     	;# 
  1683  0691                     	;# 
  1684  0692                     	;# 
  1685  0693                     	;# 
  1686  0694                     	;# 
  1687  0695                     	;# 
  1688  0696                     	;# 
  1689  0697                     	;# 
  1690  0698                     	;# 
  1691  0699                     	;# 
  1692  0711                     	;# 
  1693  0712                     	;# 
  1694  0713                     	;# 
  1695  0714                     	;# 
  1696  0715                     	;# 
  1697  0716                     	;# 
  1698  0717                     	;# 
  1699  0718                     	;# 
  1700  0719                     	;# 
  1701  0891                     	;# 
  1702  0891                     	;# 
  1703  0891                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0892                     	;# 
  1708  0892                     	;# 
  1709  0892                     	;# 
  1710  0893                     	;# 
  1711  0893                     	;# 
  1712  0893                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0894                     	;# 
  1717  0894                     	;# 
  1718  0894                     	;# 
  1719  0895                     	;# 
  1720  0895                     	;# 
  1721  0895                     	;# 
  1722  0896                     	;# 
  1723  0896                     	;# 
  1724  0896                     	;# 
  1725  089B                     	;# 
  1726  0911                     	;# 
  1727  0912                     	;# 
  1728  0913                     	;# 
  1729  0914                     	;# 
  1730  0915                     	;# 
  1731  0916                     	;# 
  1732  0918                     	;# 
  1733  0919                     	;# 
  1734  091A                     	;# 
  1735  091B                     	;# 
  1736  091C                     	;# 
  1737  091D                     	;# 
  1738  091E                     	;# 
  1739  091F                     	;# 
  1740  0E0F                     	;# 
  1741  0E10                     	;# 
  1742  0E11                     	;# 
  1743  0E12                     	;# 
  1744  0E13                     	;# 
  1745  0E14                     	;# 
  1746  0E15                     	;# 
  1747  0E16                     	;# 
  1748  0E17                     	;# 
  1749  0E18                     	;# 
  1750  0E19                     	;# 
  1751  0E1A                     	;# 
  1752  0E1B                     	;# 
  1753  0E1C                     	;# 
  1754  0E1D                     	;# 
  1755  0E1E                     	;# 
  1756  0E1F                     	;# 
  1757  0E20                     	;# 
  1758  0E21                     	;# 
  1759  0E22                     	;# 
  1760  0E24                     	;# 
  1761  0E25                     	;# 
  1762  0E28                     	;# 
  1763  0E29                     	;# 
  1764  0E2A                     	;# 
  1765  0E2B                     	;# 
  1766  0E2C                     	;# 
  1767  0E2D                     	;# 
  1768  0E2E                     	;# 
  1769  0E2F                     	;# 
  1770  0E90                     	;# 
  1771  0E91                     	;# 
  1772  0E92                     	;# 
  1773  0E94                     	;# 
  1774  0E95                     	;# 
  1775  0E9C                     	;# 
  1776  0E9D                     	;# 
  1777  0E9E                     	;# 
  1778  0E9F                     	;# 
  1779  0EA0                     	;# 
  1780  0EA1                     	;# 
  1781  0EA2                     	;# 
  1782  0EA3                     	;# 
  1783  0EA4                     	;# 
  1784  0EA5                     	;# 
  1785  0EA6                     	;# 
  1786  0EA7                     	;# 
  1787  0F0F                     	;# 
  1788  0F10                     	;# 
  1789  0F11                     	;# 
  1790  0F12                     	;# 
  1791  0F13                     	;# 
  1792  0F14                     	;# 
  1793  0F15                     	;# 
  1794  0F16                     	;# 
  1795  0F17                     	;# 
  1796  0F18                     	;# 
  1797  0F19                     	;# 
  1798  0F1A                     	;# 
  1799  0F1B                     	;# 
  1800  0F1C                     	;# 
  1801  0F1D                     	;# 
  1802  0F1E                     	;# 
  1803  0F1F                     	;# 
  1804  0F20                     	;# 
  1805  0F21                     	;# 
  1806  0F22                     	;# 
  1807  0F23                     	;# 
  1808  0F24                     	;# 
  1809  0F25                     	;# 
  1810  0F26                     	;# 
  1811  0F27                     	;# 
  1812  0F28                     	;# 
  1813  0F29                     	;# 
  1814  0F2A                     	;# 
  1815  0F2B                     	;# 
  1816  0F2C                     	;# 
  1817  0F2D                     	;# 
  1818  0F2E                     	;# 
  1819  0F2F                     	;# 
  1820  0F30                     	;# 
  1821  0F31                     	;# 
  1822  0F32                     	;# 
  1823  0F33                     	;# 
  1824  0F34                     	;# 
  1825  0F35                     	;# 
  1826  0F36                     	;# 
  1827  0F37                     	;# 
  1828  0FE4                     	;# 
  1829  0FE5                     	;# 
  1830  0FE6                     	;# 
  1831  0FE7                     	;# 
  1832  0FE8                     	;# 
  1833  0FE9                     	;# 
  1834  0FEA                     	;# 
  1835  0FEB                     	;# 
  1836  0FED                     	;# 
  1837  0FEE                     	;# 
  1838  0FEF                     	;# 
  1839  0000                     	;# 
  1840  0001                     	;# 
  1841  0002                     	;# 
  1842  0003                     	;# 
  1843  0004                     	;# 
  1844  0005                     	;# 
  1845  0006                     	;# 
  1846  0007                     	;# 
  1847  0008                     	;# 
  1848  0009                     	;# 
  1849  000A                     	;# 
  1850  000B                     	;# 
  1851  000C                     	;# 
  1852  000D                     	;# 
  1853  000E                     	;# 
  1854  0010                     	;# 
  1855  0011                     	;# 
  1856  0012                     	;# 
  1857  0013                     	;# 
  1858  0014                     	;# 
  1859  0015                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  0019                     	;# 
  1867  001A                     	;# 
  1868  001B                     	;# 
  1869  001C                     	;# 
  1870  001D                     	;# 
  1871  001E                     	;# 
  1872  001F                     	;# 
  1873  008C                     	;# 
  1874  008D                     	;# 
  1875  008E                     	;# 
  1876  0090                     	;# 
  1877  0091                     	;# 
  1878  0092                     	;# 
  1879  0093                     	;# 
  1880  0094                     	;# 
  1881  0097                     	;# 
  1882  009B                     	;# 
  1883  009B                     	;# 
  1884  009C                     	;# 
  1885  009D                     	;# 
  1886  009E                     	;# 
  1887  009F                     	;# 
  1888  010C                     	;# 
  1889  010D                     	;# 
  1890  010E                     	;# 
  1891  0111                     	;# 
  1892  0112                     	;# 
  1893  0113                     	;# 
  1894  0114                     	;# 
  1895  0115                     	;# 
  1896  0116                     	;# 
  1897  0117                     	;# 
  1898  0118                     	;# 
  1899  0119                     	;# 
  1900  018C                     	;# 
  1901  018D                     	;# 
  1902  018E                     	;# 
  1903  0197                     	;# 
  1904  0199                     	;# 
  1905  0199                     	;# 
  1906  0199                     	;# 
  1907  019A                     	;# 
  1908  019A                     	;# 
  1909  019A                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019D                     	;# 
  1919  019D                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019E                     	;# 
  1923  019E                     	;# 
  1924  019F                     	;# 
  1925  019F                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  020C                     	;# 
  1930  020D                     	;# 
  1931  020E                     	;# 
  1932  0211                     	;# 
  1933  0211                     	;# 
  1934  0212                     	;# 
  1935  0212                     	;# 
  1936  0213                     	;# 
  1937  0213                     	;# 
  1938  0214                     	;# 
  1939  0214                     	;# 
  1940  0215                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0216                     	;# 
  1945  0216                     	;# 
  1946  0217                     	;# 
  1947  0217                     	;# 
  1948  0219                     	;# 
  1949  021A                     	;# 
  1950  021B                     	;# 
  1951  021C                     	;# 
  1952  021D                     	;# 
  1953  021D                     	;# 
  1954  021E                     	;# 
  1955  021F                     	;# 
  1956  028C                     	;# 
  1957  028D                     	;# 
  1958  028E                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  029F                     	;# 
  1970  030C                     	;# 
  1971  030D                     	;# 
  1972  030E                     	;# 
  1973  0311                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0315                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  0391                     	;# 
  1987  0392                     	;# 
  1988  0393                     	;# 
  1989  0394                     	;# 
  1990  0395                     	;# 
  1991  0396                     	;# 
  1992  0397                     	;# 
  1993  0398                     	;# 
  1994  0399                     	;# 
  1995  039A                     	;# 
  1996  039C                     	;# 
  1997  039D                     	;# 
  1998  039E                     	;# 
  1999  039F                     	;# 
  2000  0411                     	;# 
  2001  0411                     	;# 
  2002  0412                     	;# 
  2003  0413                     	;# 
  2004  0414                     	;# 
  2005  0415                     	;# 
  2006  0416                     	;# 
  2007  0417                     	;# 
  2008  0418                     	;# 
  2009  0418                     	;# 
  2010  0419                     	;# 
  2011  041A                     	;# 
  2012  041B                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  041F                     	;# 
  2017  0498                     	;# 
  2018  0498                     	;# 
  2019  0499                     	;# 
  2020  049A                     	;# 
  2021  049B                     	;# 
  2022  049B                     	;# 
  2023  049C                     	;# 
  2024  049D                     	;# 
  2025  049E                     	;# 
  2026  049F                     	;# 
  2027  0617                     	;# 
  2028  0618                     	;# 
  2029  0619                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061C                     	;# 
  2035  061F                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  0695                     	;# 
  2041  0696                     	;# 
  2042  0697                     	;# 
  2043  0698                     	;# 
  2044  0699                     	;# 
  2045  0711                     	;# 
  2046  0712                     	;# 
  2047  0713                     	;# 
  2048  0714                     	;# 
  2049  0715                     	;# 
  2050  0716                     	;# 
  2051  0717                     	;# 
  2052  0718                     	;# 
  2053  0719                     	;# 
  2054  0891                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0892                     	;# 
  2062  0892                     	;# 
  2063  0893                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0894                     	;# 
  2070  0894                     	;# 
  2071  0894                     	;# 
  2072  0895                     	;# 
  2073  0895                     	;# 
  2074  0895                     	;# 
  2075  0896                     	;# 
  2076  0896                     	;# 
  2077  0896                     	;# 
  2078  089B                     	;# 
  2079  0911                     	;# 
  2080  0912                     	;# 
  2081  0913                     	;# 
  2082  0914                     	;# 
  2083  0915                     	;# 
  2084  0916                     	;# 
  2085  0918                     	;# 
  2086  0919                     	;# 
  2087  091A                     	;# 
  2088  091B                     	;# 
  2089  091C                     	;# 
  2090  091D                     	;# 
  2091  091E                     	;# 
  2092  091F                     	;# 
  2093  0E0F                     	;# 
  2094  0E10                     	;# 
  2095  0E11                     	;# 
  2096  0E12                     	;# 
  2097  0E13                     	;# 
  2098  0E14                     	;# 
  2099  0E15                     	;# 
  2100  0E16                     	;# 
  2101  0E17                     	;# 
  2102  0E18                     	;# 
  2103  0E19                     	;# 
  2104  0E1A                     	;# 
  2105  0E1B                     	;# 
  2106  0E1C                     	;# 
  2107  0E1D                     	;# 
  2108  0E1E                     	;# 
  2109  0E1F                     	;# 
  2110  0E20                     	;# 
  2111  0E21                     	;# 
  2112  0E22                     	;# 
  2113  0E24                     	;# 
  2114  0E25                     	;# 
  2115  0E28                     	;# 
  2116  0E29                     	;# 
  2117  0E2A                     	;# 
  2118  0E2B                     	;# 
  2119  0E2C                     	;# 
  2120  0E2D                     	;# 
  2121  0E2E                     	;# 
  2122  0E2F                     	;# 
  2123  0E90                     	;# 
  2124  0E91                     	;# 
  2125  0E92                     	;# 
  2126  0E94                     	;# 
  2127  0E95                     	;# 
  2128  0E9C                     	;# 
  2129  0E9D                     	;# 
  2130  0E9E                     	;# 
  2131  0E9F                     	;# 
  2132  0EA0                     	;# 
  2133  0EA1                     	;# 
  2134  0EA2                     	;# 
  2135  0EA3                     	;# 
  2136  0EA4                     	;# 
  2137  0EA5                     	;# 
  2138  0EA6                     	;# 
  2139  0EA7                     	;# 
  2140  0F0F                     	;# 
  2141  0F10                     	;# 
  2142  0F11                     	;# 
  2143  0F12                     	;# 
  2144  0F13                     	;# 
  2145  0F14                     	;# 
  2146  0F15                     	;# 
  2147  0F16                     	;# 
  2148  0F17                     	;# 
  2149  0F18                     	;# 
  2150  0F19                     	;# 
  2151  0F1A                     	;# 
  2152  0F1B                     	;# 
  2153  0F1C                     	;# 
  2154  0F1D                     	;# 
  2155  0F1E                     	;# 
  2156  0F1F                     	;# 
  2157  0F20                     	;# 
  2158  0F21                     	;# 
  2159  0F22                     	;# 
  2160  0F23                     	;# 
  2161  0F24                     	;# 
  2162  0F25                     	;# 
  2163  0F26                     	;# 
  2164  0F27                     	;# 
  2165  0F28                     	;# 
  2166  0F29                     	;# 
  2167  0F2A                     	;# 
  2168  0F2B                     	;# 
  2169  0F2C                     	;# 
  2170  0F2D                     	;# 
  2171  0F2E                     	;# 
  2172  0F2F                     	;# 
  2173  0F30                     	;# 
  2174  0F31                     	;# 
  2175  0F32                     	;# 
  2176  0F33                     	;# 
  2177  0F34                     	;# 
  2178  0F35                     	;# 
  2179  0F36                     	;# 
  2180  0F37                     	;# 
  2181  0FE4                     	;# 
  2182  0FE5                     	;# 
  2183  0FE6                     	;# 
  2184  0FE7                     	;# 
  2185  0FE8                     	;# 
  2186  0FE9                     	;# 
  2187  0FEA                     	;# 
  2188  0FEB                     	;# 
  2189  0FED                     	;# 
  2190  0FEE                     	;# 
  2191  0FEF                     	;# 
  2192  0000                     	;# 
  2193  0001                     	;# 
  2194  0002                     	;# 
  2195  0003                     	;# 
  2196  0004                     	;# 
  2197  0005                     	;# 
  2198  0006                     	;# 
  2199  0007                     	;# 
  2200  0008                     	;# 
  2201  0009                     	;# 
  2202  000A                     	;# 
  2203  000B                     	;# 
  2204  000C                     	;# 
  2205  000D                     	;# 
  2206  000E                     	;# 
  2207  0010                     	;# 
  2208  0011                     	;# 
  2209  0012                     	;# 
  2210  0013                     	;# 
  2211  0014                     	;# 
  2212  0015                     	;# 
  2213  0015                     	;# 
  2214  0016                     	;# 
  2215  0016                     	;# 
  2216  0017                     	;# 
  2217  0018                     	;# 
  2218  0019                     	;# 
  2219  0019                     	;# 
  2220  001A                     	;# 
  2221  001B                     	;# 
  2222  001C                     	;# 
  2223  001D                     	;# 
  2224  001E                     	;# 
  2225  001F                     	;# 
  2226  008C                     	;# 
  2227  008D                     	;# 
  2228  008E                     	;# 
  2229  0090                     	;# 
  2230  0091                     	;# 
  2231  0092                     	;# 
  2232  0093                     	;# 
  2233  0094                     	;# 
  2234  0097                     	;# 
  2235  009B                     	;# 
  2236  009B                     	;# 
  2237  009C                     	;# 
  2238  009D                     	;# 
  2239  009E                     	;# 
  2240  009F                     	;# 
  2241  010C                     	;# 
  2242  010D                     	;# 
  2243  010E                     	;# 
  2244  0111                     	;# 
  2245  0112                     	;# 
  2246  0113                     	;# 
  2247  0114                     	;# 
  2248  0115                     	;# 
  2249  0116                     	;# 
  2250  0117                     	;# 
  2251  0118                     	;# 
  2252  0119                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  0197                     	;# 
  2257  0199                     	;# 
  2258  0199                     	;# 
  2259  0199                     	;# 
  2260  019A                     	;# 
  2261  019A                     	;# 
  2262  019A                     	;# 
  2263  019B                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019C                     	;# 
  2269  019C                     	;# 
  2270  019C                     	;# 
  2271  019D                     	;# 
  2272  019D                     	;# 
  2273  019D                     	;# 
  2274  019E                     	;# 
  2275  019E                     	;# 
  2276  019E                     	;# 
  2277  019F                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0213                     	;# 
  2291  0214                     	;# 
  2292  0214                     	;# 
  2293  0215                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0219                     	;# 
  2302  021A                     	;# 
  2303  021B                     	;# 
  2304  021C                     	;# 
  2305  021D                     	;# 
  2306  021D                     	;# 
  2307  021E                     	;# 
  2308  021F                     	;# 
  2309  028C                     	;# 
  2310  028D                     	;# 
  2311  028E                     	;# 
  2312  0291                     	;# 
  2313  0291                     	;# 
  2314  0292                     	;# 
  2315  0293                     	;# 
  2316  0294                     	;# 
  2317  0295                     	;# 
  2318  0295                     	;# 
  2319  0296                     	;# 
  2320  0297                     	;# 
  2321  0298                     	;# 
  2322  029F                     	;# 
  2323  030C                     	;# 
  2324  030D                     	;# 
  2325  030E                     	;# 
  2326  0311                     	;# 
  2327  0311                     	;# 
  2328  0312                     	;# 
  2329  0313                     	;# 
  2330  0314                     	;# 
  2331  0315                     	;# 
  2332  0315                     	;# 
  2333  0316                     	;# 
  2334  0317                     	;# 
  2335  0318                     	;# 
  2336  038C                     	;# 
  2337  038D                     	;# 
  2338  038E                     	;# 
  2339  0391                     	;# 
  2340  0392                     	;# 
  2341  0393                     	;# 
  2342  0394                     	;# 
  2343  0395                     	;# 
  2344  0396                     	;# 
  2345  0397                     	;# 
  2346  0398                     	;# 
  2347  0399                     	;# 
  2348  039A                     	;# 
  2349  039C                     	;# 
  2350  039D                     	;# 
  2351  039E                     	;# 
  2352  039F                     	;# 
  2353  0411                     	;# 
  2354  0411                     	;# 
  2355  0412                     	;# 
  2356  0413                     	;# 
  2357  0414                     	;# 
  2358  0415                     	;# 
  2359  0416                     	;# 
  2360  0417                     	;# 
  2361  0418                     	;# 
  2362  0418                     	;# 
  2363  0419                     	;# 
  2364  041A                     	;# 
  2365  041B                     	;# 
  2366  041C                     	;# 
  2367  041D                     	;# 
  2368  041E                     	;# 
  2369  041F                     	;# 
  2370  0498                     	;# 
  2371  0498                     	;# 
  2372  0499                     	;# 
  2373  049A                     	;# 
  2374  049B                     	;# 
  2375  049B                     	;# 
  2376  049C                     	;# 
  2377  049D                     	;# 
  2378  049E                     	;# 
  2379  049F                     	;# 
  2380  0617                     	;# 
  2381  0618                     	;# 
  2382  0619                     	;# 
  2383  0619                     	;# 
  2384  061A                     	;# 
  2385  061B                     	;# 
  2386  061C                     	;# 
  2387  061C                     	;# 
  2388  061F                     	;# 
  2389  0691                     	;# 
  2390  0692                     	;# 
  2391  0693                     	;# 
  2392  0694                     	;# 
  2393  0695                     	;# 
  2394  0696                     	;# 
  2395  0697                     	;# 
  2396  0698                     	;# 
  2397  0699                     	;# 
  2398  0711                     	;# 
  2399  0712                     	;# 
  2400  0713                     	;# 
  2401  0714                     	;# 
  2402  0715                     	;# 
  2403  0716                     	;# 
  2404  0717                     	;# 
  2405  0718                     	;# 
  2406  0719                     	;# 
  2407  0891                     	;# 
  2408  0891                     	;# 
  2409  0891                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0892                     	;# 
  2414  0892                     	;# 
  2415  0892                     	;# 
  2416  0893                     	;# 
  2417  0893                     	;# 
  2418  0893                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0894                     	;# 
  2423  0894                     	;# 
  2424  0894                     	;# 
  2425  0895                     	;# 
  2426  0895                     	;# 
  2427  0895                     	;# 
  2428  0896                     	;# 
  2429  0896                     	;# 
  2430  0896                     	;# 
  2431  089B                     	;# 
  2432  0911                     	;# 
  2433  0912                     	;# 
  2434  0913                     	;# 
  2435  0914                     	;# 
  2436  0915                     	;# 
  2437  0916                     	;# 
  2438  0918                     	;# 
  2439  0919                     	;# 
  2440  091A                     	;# 
  2441  091B                     	;# 
  2442  091C                     	;# 
  2443  091D                     	;# 
  2444  091E                     	;# 
  2445  091F                     	;# 
  2446  0E0F                     	;# 
  2447  0E10                     	;# 
  2448  0E11                     	;# 
  2449  0E12                     	;# 
  2450  0E13                     	;# 
  2451  0E14                     	;# 
  2452  0E15                     	;# 
  2453  0E16                     	;# 
  2454  0E17                     	;# 
  2455  0E18                     	;# 
  2456  0E19                     	;# 
  2457  0E1A                     	;# 
  2458  0E1B                     	;# 
  2459  0E1C                     	;# 
  2460  0E1D                     	;# 
  2461  0E1E                     	;# 
  2462  0E1F                     	;# 
  2463  0E20                     	;# 
  2464  0E21                     	;# 
  2465  0E22                     	;# 
  2466  0E24                     	;# 
  2467  0E25                     	;# 
  2468  0E28                     	;# 
  2469  0E29                     	;# 
  2470  0E2A                     	;# 
  2471  0E2B                     	;# 
  2472  0E2C                     	;# 
  2473  0E2D                     	;# 
  2474  0E2E                     	;# 
  2475  0E2F                     	;# 
  2476  0E90                     	;# 
  2477  0E91                     	;# 
  2478  0E92                     	;# 
  2479  0E94                     	;# 
  2480  0E95                     	;# 
  2481  0E9C                     	;# 
  2482  0E9D                     	;# 
  2483  0E9E                     	;# 
  2484  0E9F                     	;# 
  2485  0EA0                     	;# 
  2486  0EA1                     	;# 
  2487  0EA2                     	;# 
  2488  0EA3                     	;# 
  2489  0EA4                     	;# 
  2490  0EA5                     	;# 
  2491  0EA6                     	;# 
  2492  0EA7                     	;# 
  2493  0F0F                     	;# 
  2494  0F10                     	;# 
  2495  0F11                     	;# 
  2496  0F12                     	;# 
  2497  0F13                     	;# 
  2498  0F14                     	;# 
  2499  0F15                     	;# 
  2500  0F16                     	;# 
  2501  0F17                     	;# 
  2502  0F18                     	;# 
  2503  0F19                     	;# 
  2504  0F1A                     	;# 
  2505  0F1B                     	;# 
  2506  0F1C                     	;# 
  2507  0F1D                     	;# 
  2508  0F1E                     	;# 
  2509  0F1F                     	;# 
  2510  0F20                     	;# 
  2511  0F21                     	;# 
  2512  0F22                     	;# 
  2513  0F23                     	;# 
  2514  0F24                     	;# 
  2515  0F25                     	;# 
  2516  0F26                     	;# 
  2517  0F27                     	;# 
  2518  0F28                     	;# 
  2519  0F29                     	;# 
  2520  0F2A                     	;# 
  2521  0F2B                     	;# 
  2522  0F2C                     	;# 
  2523  0F2D                     	;# 
  2524  0F2E                     	;# 
  2525  0F2F                     	;# 
  2526  0F30                     	;# 
  2527  0F31                     	;# 
  2528  0F32                     	;# 
  2529  0F33                     	;# 
  2530  0F34                     	;# 
  2531  0F35                     	;# 
  2532  0F36                     	;# 
  2533  0F37                     	;# 
  2534  0FE4                     	;# 
  2535  0FE5                     	;# 
  2536  0FE6                     	;# 
  2537  0FE7                     	;# 
  2538  0FE8                     	;# 
  2539  0FE9                     	;# 
  2540  0FEA                     	;# 
  2541  0FEB                     	;# 
  2542  0FED                     	;# 
  2543  0FEE                     	;# 
  2544  0FEF                     	;# 
  2545  0000                     	;# 
  2546  0001                     	;# 
  2547  0002                     	;# 
  2548  0003                     	;# 
  2549  0004                     	;# 
  2550  0005                     	;# 
  2551  0006                     	;# 
  2552  0007                     	;# 
  2553  0008                     	;# 
  2554  0009                     	;# 
  2555  000A                     	;# 
  2556  000B                     	;# 
  2557  000C                     	;# 
  2558  000D                     	;# 
  2559  000E                     	;# 
  2560  0010                     	;# 
  2561  0011                     	;# 
  2562  0012                     	;# 
  2563  0013                     	;# 
  2564  0014                     	;# 
  2565  0015                     	;# 
  2566  0015                     	;# 
  2567  0016                     	;# 
  2568  0016                     	;# 
  2569  0017                     	;# 
  2570  0018                     	;# 
  2571  0019                     	;# 
  2572  0019                     	;# 
  2573  001A                     	;# 
  2574  001B                     	;# 
  2575  001C                     	;# 
  2576  001D                     	;# 
  2577  001E                     	;# 
  2578  001F                     	;# 
  2579  008C                     	;# 
  2580  008D                     	;# 
  2581  008E                     	;# 
  2582  0090                     	;# 
  2583  0091                     	;# 
  2584  0092                     	;# 
  2585  0093                     	;# 
  2586  0094                     	;# 
  2587  0097                     	;# 
  2588  009B                     	;# 
  2589  009B                     	;# 
  2590  009C                     	;# 
  2591  009D                     	;# 
  2592  009E                     	;# 
  2593  009F                     	;# 
  2594  010C                     	;# 
  2595  010D                     	;# 
  2596  010E                     	;# 
  2597  0111                     	;# 
  2598  0112                     	;# 
  2599  0113                     	;# 
  2600  0114                     	;# 
  2601  0115                     	;# 
  2602  0116                     	;# 
  2603  0117                     	;# 
  2604  0118                     	;# 
  2605  0119                     	;# 
  2606  018C                     	;# 
  2607  018D                     	;# 
  2608  018E                     	;# 
  2609  0197                     	;# 
  2610  0199                     	;# 
  2611  0199                     	;# 
  2612  0199                     	;# 
  2613  019A                     	;# 
  2614  019A                     	;# 
  2615  019A                     	;# 
  2616  019B                     	;# 
  2617  019B                     	;# 
  2618  019B                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019C                     	;# 
  2622  019C                     	;# 
  2623  019C                     	;# 
  2624  019D                     	;# 
  2625  019D                     	;# 
  2626  019D                     	;# 
  2627  019E                     	;# 
  2628  019E                     	;# 
  2629  019E                     	;# 
  2630  019F                     	;# 
  2631  019F                     	;# 
  2632  019F                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  020C                     	;# 
  2636  020D                     	;# 
  2637  020E                     	;# 
  2638  0211                     	;# 
  2639  0211                     	;# 
  2640  0212                     	;# 
  2641  0212                     	;# 
  2642  0213                     	;# 
  2643  0213                     	;# 
  2644  0214                     	;# 
  2645  0214                     	;# 
  2646  0215                     	;# 
  2647  0215                     	;# 
  2648  0215                     	;# 
  2649  0215                     	;# 
  2650  0216                     	;# 
  2651  0216                     	;# 
  2652  0217                     	;# 
  2653  0217                     	;# 
  2654  0219                     	;# 
  2655  021A                     	;# 
  2656  021B                     	;# 
  2657  021C                     	;# 
  2658  021D                     	;# 
  2659  021D                     	;# 
  2660  021E                     	;# 
  2661  021F                     	;# 
  2662  028C                     	;# 
  2663  028D                     	;# 
  2664  028E                     	;# 
  2665  0291                     	;# 
  2666  0291                     	;# 
  2667  0292                     	;# 
  2668  0293                     	;# 
  2669  0294                     	;# 
  2670  0295                     	;# 
  2671  0295                     	;# 
  2672  0296                     	;# 
  2673  0297                     	;# 
  2674  0298                     	;# 
  2675  029F                     	;# 
  2676  030C                     	;# 
  2677  030D                     	;# 
  2678  030E                     	;# 
  2679  0311                     	;# 
  2680  0311                     	;# 
  2681  0312                     	;# 
  2682  0313                     	;# 
  2683  0314                     	;# 
  2684  0315                     	;# 
  2685  0315                     	;# 
  2686  0316                     	;# 
  2687  0317                     	;# 
  2688  0318                     	;# 
  2689  038C                     	;# 
  2690  038D                     	;# 
  2691  038E                     	;# 
  2692  0391                     	;# 
  2693  0392                     	;# 
  2694  0393                     	;# 
  2695  0394                     	;# 
  2696  0395                     	;# 
  2697  0396                     	;# 
  2698  0397                     	;# 
  2699  0398                     	;# 
  2700  0399                     	;# 
  2701  039A                     	;# 
  2702  039C                     	;# 
  2703  039D                     	;# 
  2704  039E                     	;# 
  2705  039F                     	;# 
  2706  0411                     	;# 
  2707  0411                     	;# 
  2708  0412                     	;# 
  2709  0413                     	;# 
  2710  0414                     	;# 
  2711  0415                     	;# 
  2712  0416                     	;# 
  2713  0417                     	;# 
  2714  0418                     	;# 
  2715  0418                     	;# 
  2716  0419                     	;# 
  2717  041A                     	;# 
  2718  041B                     	;# 
  2719  041C                     	;# 
  2720  041D                     	;# 
  2721  041E                     	;# 
  2722  041F                     	;# 
  2723  0498                     	;# 
  2724  0498                     	;# 
  2725  0499                     	;# 
  2726  049A                     	;# 
  2727  049B                     	;# 
  2728  049B                     	;# 
  2729  049C                     	;# 
  2730  049D                     	;# 
  2731  049E                     	;# 
  2732  049F                     	;# 
  2733  0617                     	;# 
  2734  0618                     	;# 
  2735  0619                     	;# 
  2736  0619                     	;# 
  2737  061A                     	;# 
  2738  061B                     	;# 
  2739  061C                     	;# 
  2740  061C                     	;# 
  2741  061F                     	;# 
  2742  0691                     	;# 
  2743  0692                     	;# 
  2744  0693                     	;# 
  2745  0694                     	;# 
  2746  0695                     	;# 
  2747  0696                     	;# 
  2748  0697                     	;# 
  2749  0698                     	;# 
  2750  0699                     	;# 
  2751  0711                     	;# 
  2752  0712                     	;# 
  2753  0713                     	;# 
  2754  0714                     	;# 
  2755  0715                     	;# 
  2756  0716                     	;# 
  2757  0717                     	;# 
  2758  0718                     	;# 
  2759  0719                     	;# 
  2760  0891                     	;# 
  2761  0891                     	;# 
  2762  0891                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0892                     	;# 
  2767  0892                     	;# 
  2768  0892                     	;# 
  2769  0893                     	;# 
  2770  0893                     	;# 
  2771  0893                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0894                     	;# 
  2776  0894                     	;# 
  2777  0894                     	;# 
  2778  0895                     	;# 
  2779  0895                     	;# 
  2780  0895                     	;# 
  2781  0896                     	;# 
  2782  0896                     	;# 
  2783  0896                     	;# 
  2784  089B                     	;# 
  2785  0911                     	;# 
  2786  0912                     	;# 
  2787  0913                     	;# 
  2788  0914                     	;# 
  2789  0915                     	;# 
  2790  0916                     	;# 
  2791  0918                     	;# 
  2792  0919                     	;# 
  2793  091A                     	;# 
  2794  091B                     	;# 
  2795  091C                     	;# 
  2796  091D                     	;# 
  2797  091E                     	;# 
  2798  091F                     	;# 
  2799  0E0F                     	;# 
  2800  0E10                     	;# 
  2801  0E11                     	;# 
  2802  0E12                     	;# 
  2803  0E13                     	;# 
  2804  0E14                     	;# 
  2805  0E15                     	;# 
  2806  0E16                     	;# 
  2807  0E17                     	;# 
  2808  0E18                     	;# 
  2809  0E19                     	;# 
  2810  0E1A                     	;# 
  2811  0E1B                     	;# 
  2812  0E1C                     	;# 
  2813  0E1D                     	;# 
  2814  0E1E                     	;# 
  2815  0E1F                     	;# 
  2816  0E20                     	;# 
  2817  0E21                     	;# 
  2818  0E22                     	;# 
  2819  0E24                     	;# 
  2820  0E25                     	;# 
  2821  0E28                     	;# 
  2822  0E29                     	;# 
  2823  0E2A                     	;# 
  2824  0E2B                     	;# 
  2825  0E2C                     	;# 
  2826  0E2D                     	;# 
  2827  0E2E                     	;# 
  2828  0E2F                     	;# 
  2829  0E90                     	;# 
  2830  0E91                     	;# 
  2831  0E92                     	;# 
  2832  0E94                     	;# 
  2833  0E95                     	;# 
  2834  0E9C                     	;# 
  2835  0E9D                     	;# 
  2836  0E9E                     	;# 
  2837  0E9F                     	;# 
  2838  0EA0                     	;# 
  2839  0EA1                     	;# 
  2840  0EA2                     	;# 
  2841  0EA3                     	;# 
  2842  0EA4                     	;# 
  2843  0EA5                     	;# 
  2844  0EA6                     	;# 
  2845  0EA7                     	;# 
  2846  0F0F                     	;# 
  2847  0F10                     	;# 
  2848  0F11                     	;# 
  2849  0F12                     	;# 
  2850  0F13                     	;# 
  2851  0F14                     	;# 
  2852  0F15                     	;# 
  2853  0F16                     	;# 
  2854  0F17                     	;# 
  2855  0F18                     	;# 
  2856  0F19                     	;# 
  2857  0F1A                     	;# 
  2858  0F1B                     	;# 
  2859  0F1C                     	;# 
  2860  0F1D                     	;# 
  2861  0F1E                     	;# 
  2862  0F1F                     	;# 
  2863  0F20                     	;# 
  2864  0F21                     	;# 
  2865  0F22                     	;# 
  2866  0F23                     	;# 
  2867  0F24                     	;# 
  2868  0F25                     	;# 
  2869  0F26                     	;# 
  2870  0F27                     	;# 
  2871  0F28                     	;# 
  2872  0F29                     	;# 
  2873  0F2A                     	;# 
  2874  0F2B                     	;# 
  2875  0F2C                     	;# 
  2876  0F2D                     	;# 
  2877  0F2E                     	;# 
  2878  0F2F                     	;# 
  2879  0F30                     	;# 
  2880  0F31                     	;# 
  2881  0F32                     	;# 
  2882  0F33                     	;# 
  2883  0F34                     	;# 
  2884  0F35                     	;# 
  2885  0F36                     	;# 
  2886  0F37                     	;# 
  2887  0FE4                     	;# 
  2888  0FE5                     	;# 
  2889  0FE6                     	;# 
  2890  0FE7                     	;# 
  2891  0FE8                     	;# 
  2892  0FE9                     	;# 
  2893  0FEA                     	;# 
  2894  0FEB                     	;# 
  2895  0FED                     	;# 
  2896  0FEE                     	;# 
  2897  0FEF                     	;# 
  2898  0000                     	;# 
  2899  0001                     	;# 
  2900  0002                     	;# 
  2901  0003                     	;# 
  2902  0004                     	;# 
  2903  0005                     	;# 
  2904  0006                     	;# 
  2905  0007                     	;# 
  2906  0008                     	;# 
  2907  0009                     	;# 
  2908  000A                     	;# 
  2909  000B                     	;# 
  2910  000C                     	;# 
  2911  000D                     	;# 
  2912  000E                     	;# 
  2913  0010                     	;# 
  2914  0011                     	;# 
  2915  0012                     	;# 
  2916  0013                     	;# 
  2917  0014                     	;# 
  2918  0015                     	;# 
  2919  0015                     	;# 
  2920  0016                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001B                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008D                     	;# 
  2934  008E                     	;# 
  2935  0090                     	;# 
  2936  0091                     	;# 
  2937  0092                     	;# 
  2938  0093                     	;# 
  2939  0094                     	;# 
  2940  0097                     	;# 
  2941  009B                     	;# 
  2942  009B                     	;# 
  2943  009C                     	;# 
  2944  009D                     	;# 
  2945  009E                     	;# 
  2946  009F                     	;# 
  2947  010C                     	;# 
  2948  010D                     	;# 
  2949  010E                     	;# 
  2950  0111                     	;# 
  2951  0112                     	;# 
  2952  0113                     	;# 
  2953  0114                     	;# 
  2954  0115                     	;# 
  2955  0116                     	;# 
  2956  0117                     	;# 
  2957  0118                     	;# 
  2958  0119                     	;# 
  2959  018C                     	;# 
  2960  018D                     	;# 
  2961  018E                     	;# 
  2962  0197                     	;# 
  2963  0199                     	;# 
  2964  0199                     	;# 
  2965  0199                     	;# 
  2966  019A                     	;# 
  2967  019A                     	;# 
  2968  019A                     	;# 
  2969  019B                     	;# 
  2970  019B                     	;# 
  2971  019B                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019C                     	;# 
  2975  019C                     	;# 
  2976  019C                     	;# 
  2977  019D                     	;# 
  2978  019D                     	;# 
  2979  019D                     	;# 
  2980  019E                     	;# 
  2981  019E                     	;# 
  2982  019E                     	;# 
  2983  019F                     	;# 
  2984  019F                     	;# 
  2985  019F                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  020C                     	;# 
  2989  020D                     	;# 
  2990  020E                     	;# 
  2991  0211                     	;# 
  2992  0211                     	;# 
  2993  0212                     	;# 
  2994  0212                     	;# 
  2995  0213                     	;# 
  2996  0213                     	;# 
  2997  0214                     	;# 
  2998  0214                     	;# 
  2999  0215                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0215                     	;# 
  3003  0216                     	;# 
  3004  0216                     	;# 
  3005  0217                     	;# 
  3006  0217                     	;# 
  3007  0219                     	;# 
  3008  021A                     	;# 
  3009  021B                     	;# 
  3010  021C                     	;# 
  3011  021D                     	;# 
  3012  021D                     	;# 
  3013  021E                     	;# 
  3014  021F                     	;# 
  3015  028C                     	;# 
  3016  028D                     	;# 
  3017  028E                     	;# 
  3018  0291                     	;# 
  3019  0291                     	;# 
  3020  0292                     	;# 
  3021  0293                     	;# 
  3022  0294                     	;# 
  3023  0295                     	;# 
  3024  0295                     	;# 
  3025  0296                     	;# 
  3026  0297                     	;# 
  3027  0298                     	;# 
  3028  029F                     	;# 
  3029  030C                     	;# 
  3030  030D                     	;# 
  3031  030E                     	;# 
  3032  0311                     	;# 
  3033  0311                     	;# 
  3034  0312                     	;# 
  3035  0313                     	;# 
  3036  0314                     	;# 
  3037  0315                     	;# 
  3038  0315                     	;# 
  3039  0316                     	;# 
  3040  0317                     	;# 
  3041  0318                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0391                     	;# 
  3046  0392                     	;# 
  3047  0393                     	;# 
  3048  0394                     	;# 
  3049  0395                     	;# 
  3050  0396                     	;# 
  3051  0397                     	;# 
  3052  0398                     	;# 
  3053  0399                     	;# 
  3054  039A                     	;# 
  3055  039C                     	;# 
  3056  039D                     	;# 
  3057  039E                     	;# 
  3058  039F                     	;# 
  3059  0411                     	;# 
  3060  0411                     	;# 
  3061  0412                     	;# 
  3062  0413                     	;# 
  3063  0414                     	;# 
  3064  0415                     	;# 
  3065  0416                     	;# 
  3066  0417                     	;# 
  3067  0418                     	;# 
  3068  0418                     	;# 
  3069  0419                     	;# 
  3070  041A                     	;# 
  3071  041B                     	;# 
  3072  041C                     	;# 
  3073  041D                     	;# 
  3074  041E                     	;# 
  3075  041F                     	;# 
  3076  0498                     	;# 
  3077  0498                     	;# 
  3078  0499                     	;# 
  3079  049A                     	;# 
  3080  049B                     	;# 
  3081  049B                     	;# 
  3082  049C                     	;# 
  3083  049D                     	;# 
  3084  049E                     	;# 
  3085  049F                     	;# 
  3086  0617                     	;# 
  3087  0618                     	;# 
  3088  0619                     	;# 
  3089  0619                     	;# 
  3090  061A                     	;# 
  3091  061B                     	;# 
  3092  061C                     	;# 
  3093  061C                     	;# 
  3094  061F                     	;# 
  3095  0691                     	;# 
  3096  0692                     	;# 
  3097  0693                     	;# 
  3098  0694                     	;# 
  3099  0695                     	;# 
  3100  0696                     	;# 
  3101  0697                     	;# 
  3102  0698                     	;# 
  3103  0699                     	;# 
  3104  0711                     	;# 
  3105  0712                     	;# 
  3106  0713                     	;# 
  3107  0714                     	;# 
  3108  0715                     	;# 
  3109  0716                     	;# 
  3110  0717                     	;# 
  3111  0718                     	;# 
  3112  0719                     	;# 
  3113  0891                     	;# 
  3114  0891                     	;# 
  3115  0891                     	;# 
  3116  0891                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0892                     	;# 
  3120  0892                     	;# 
  3121  0892                     	;# 
  3122  0893                     	;# 
  3123  0893                     	;# 
  3124  0893                     	;# 
  3125  0893                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0894                     	;# 
  3129  0894                     	;# 
  3130  0894                     	;# 
  3131  0895                     	;# 
  3132  0895                     	;# 
  3133  0895                     	;# 
  3134  0896                     	;# 
  3135  0896                     	;# 
  3136  0896                     	;# 
  3137  089B                     	;# 
  3138  0911                     	;# 
  3139  0912                     	;# 
  3140  0913                     	;# 
  3141  0914                     	;# 
  3142  0915                     	;# 
  3143  0916                     	;# 
  3144  0918                     	;# 
  3145  0919                     	;# 
  3146  091A                     	;# 
  3147  091B                     	;# 
  3148  091C                     	;# 
  3149  091D                     	;# 
  3150  091E                     	;# 
  3151  091F                     	;# 
  3152  0E0F                     	;# 
  3153  0E10                     	;# 
  3154  0E11                     	;# 
  3155  0E12                     	;# 
  3156  0E13                     	;# 
  3157  0E14                     	;# 
  3158  0E15                     	;# 
  3159  0E16                     	;# 
  3160  0E17                     	;# 
  3161  0E18                     	;# 
  3162  0E19                     	;# 
  3163  0E1A                     	;# 
  3164  0E1B                     	;# 
  3165  0E1C                     	;# 
  3166  0E1D                     	;# 
  3167  0E1E                     	;# 
  3168  0E1F                     	;# 
  3169  0E20                     	;# 
  3170  0E21                     	;# 
  3171  0E22                     	;# 
  3172  0E24                     	;# 
  3173  0E25                     	;# 
  3174  0E28                     	;# 
  3175  0E29                     	;# 
  3176  0E2A                     	;# 
  3177  0E2B                     	;# 
  3178  0E2C                     	;# 
  3179  0E2D                     	;# 
  3180  0E2E                     	;# 
  3181  0E2F                     	;# 
  3182  0E90                     	;# 
  3183  0E91                     	;# 
  3184  0E92                     	;# 
  3185  0E94                     	;# 
  3186  0E95                     	;# 
  3187  0E9C                     	;# 
  3188  0E9D                     	;# 
  3189  0E9E                     	;# 
  3190  0E9F                     	;# 
  3191  0EA0                     	;# 
  3192  0EA1                     	;# 
  3193  0EA2                     	;# 
  3194  0EA3                     	;# 
  3195  0EA4                     	;# 
  3196  0EA5                     	;# 
  3197  0EA6                     	;# 
  3198  0EA7                     	;# 
  3199  0F0F                     	;# 
  3200  0F10                     	;# 
  3201  0F11                     	;# 
  3202  0F12                     	;# 
  3203  0F13                     	;# 
  3204  0F14                     	;# 
  3205  0F15                     	;# 
  3206  0F16                     	;# 
  3207  0F17                     	;# 
  3208  0F18                     	;# 
  3209  0F19                     	;# 
  3210  0F1A                     	;# 
  3211  0F1B                     	;# 
  3212  0F1C                     	;# 
  3213  0F1D                     	;# 
  3214  0F1E                     	;# 
  3215  0F1F                     	;# 
  3216  0F20                     	;# 
  3217  0F21                     	;# 
  3218  0F22                     	;# 
  3219  0F23                     	;# 
  3220  0F24                     	;# 
  3221  0F25                     	;# 
  3222  0F26                     	;# 
  3223  0F27                     	;# 
  3224  0F28                     	;# 
  3225  0F29                     	;# 
  3226  0F2A                     	;# 
  3227  0F2B                     	;# 
  3228  0F2C                     	;# 
  3229  0F2D                     	;# 
  3230  0F2E                     	;# 
  3231  0F2F                     	;# 
  3232  0F30                     	;# 
  3233  0F31                     	;# 
  3234  0F32                     	;# 
  3235  0F33                     	;# 
  3236  0F34                     	;# 
  3237  0F35                     	;# 
  3238  0F36                     	;# 
  3239  0F37                     	;# 
  3240  0FE4                     	;# 
  3241  0FE5                     	;# 
  3242  0FE6                     	;# 
  3243  0FE7                     	;# 
  3244  0FE8                     	;# 
  3245  0FE9                     	;# 
  3246  0FEA                     	;# 
  3247  0FEB                     	;# 
  3248  0FED                     	;# 
  3249  0FEE                     	;# 
  3250  0FEF                     	;# 
  3251  0000                     	;# 
  3252  0001                     	;# 
  3253  0002                     	;# 
  3254  0003                     	;# 
  3255  0004                     	;# 
  3256  0005                     	;# 
  3257  0006                     	;# 
  3258  0007                     	;# 
  3259  0008                     	;# 
  3260  0009                     	;# 
  3261  000A                     	;# 
  3262  000B                     	;# 
  3263  000C                     	;# 
  3264  000D                     	;# 
  3265  000E                     	;# 
  3266  0010                     	;# 
  3267  0011                     	;# 
  3268  0012                     	;# 
  3269  0013                     	;# 
  3270  0014                     	;# 
  3271  0015                     	;# 
  3272  0015                     	;# 
  3273  0016                     	;# 
  3274  0016                     	;# 
  3275  0017                     	;# 
  3276  0018                     	;# 
  3277  0019                     	;# 
  3278  0019                     	;# 
  3279  001A                     	;# 
  3280  001B                     	;# 
  3281  001C                     	;# 
  3282  001D                     	;# 
  3283  001E                     	;# 
  3284  001F                     	;# 
  3285  008C                     	;# 
  3286  008D                     	;# 
  3287  008E                     	;# 
  3288  0090                     	;# 
  3289  0091                     	;# 
  3290  0092                     	;# 
  3291  0093                     	;# 
  3292  0094                     	;# 
  3293  0097                     	;# 
  3294  009B                     	;# 
  3295  009B                     	;# 
  3296  009C                     	;# 
  3297  009D                     	;# 
  3298  009E                     	;# 
  3299  009F                     	;# 
  3300  010C                     	;# 
  3301  010D                     	;# 
  3302  010E                     	;# 
  3303  0111                     	;# 
  3304  0112                     	;# 
  3305  0113                     	;# 
  3306  0114                     	;# 
  3307  0115                     	;# 
  3308  0116                     	;# 
  3309  0117                     	;# 
  3310  0118                     	;# 
  3311  0119                     	;# 
  3312  018C                     	;# 
  3313  018D                     	;# 
  3314  018E                     	;# 
  3315  0197                     	;# 
  3316  0199                     	;# 
  3317  0199                     	;# 
  3318  0199                     	;# 
  3319  019A                     	;# 
  3320  019A                     	;# 
  3321  019A                     	;# 
  3322  019B                     	;# 
  3323  019B                     	;# 
  3324  019B                     	;# 
  3325  019B                     	;# 
  3326  019B                     	;# 
  3327  019C                     	;# 
  3328  019C                     	;# 
  3329  019C                     	;# 
  3330  019D                     	;# 
  3331  019D                     	;# 
  3332  019D                     	;# 
  3333  019E                     	;# 
  3334  019E                     	;# 
  3335  019E                     	;# 
  3336  019F                     	;# 
  3337  019F                     	;# 
  3338  019F                     	;# 
  3339  019F                     	;# 
  3340  019F                     	;# 
  3341  020C                     	;# 
  3342  020D                     	;# 
  3343  020E                     	;# 
  3344  0211                     	;# 
  3345  0211                     	;# 
  3346  0212                     	;# 
  3347  0212                     	;# 
  3348  0213                     	;# 
  3349  0213                     	;# 
  3350  0214                     	;# 
  3351  0214                     	;# 
  3352  0215                     	;# 
  3353  0215                     	;# 
  3354  0215                     	;# 
  3355  0215                     	;# 
  3356  0216                     	;# 
  3357  0216                     	;# 
  3358  0217                     	;# 
  3359  0217                     	;# 
  3360  0219                     	;# 
  3361  021A                     	;# 
  3362  021B                     	;# 
  3363  021C                     	;# 
  3364  021D                     	;# 
  3365  021D                     	;# 
  3366  021E                     	;# 
  3367  021F                     	;# 
  3368  028C                     	;# 
  3369  028D                     	;# 
  3370  028E                     	;# 
  3371  0291                     	;# 
  3372  0291                     	;# 
  3373  0292                     	;# 
  3374  0293                     	;# 
  3375  0294                     	;# 
  3376  0295                     	;# 
  3377  0295                     	;# 
  3378  0296                     	;# 
  3379  0297                     	;# 
  3380  0298                     	;# 
  3381  029F                     	;# 
  3382  030C                     	;# 
  3383  030D                     	;# 
  3384  030E                     	;# 
  3385  0311                     	;# 
  3386  0311                     	;# 
  3387  0312                     	;# 
  3388  0313                     	;# 
  3389  0314                     	;# 
  3390  0315                     	;# 
  3391  0315                     	;# 
  3392  0316                     	;# 
  3393  0317                     	;# 
  3394  0318                     	;# 
  3395  038C                     	;# 
  3396  038D                     	;# 
  3397  038E                     	;# 
  3398  0391                     	;# 
  3399  0392                     	;# 
  3400  0393                     	;# 
  3401  0394                     	;# 
  3402  0395                     	;# 
  3403  0396                     	;# 
  3404  0397                     	;# 
  3405  0398                     	;# 
  3406  0399                     	;# 
  3407  039A                     	;# 
  3408  039C                     	;# 
  3409  039D                     	;# 
  3410  039E                     	;# 
  3411  039F                     	;# 
  3412  0411                     	;# 
  3413  0411                     	;# 
  3414  0412                     	;# 
  3415  0413                     	;# 
  3416  0414                     	;# 
  3417  0415                     	;# 
  3418  0416                     	;# 
  3419  0417                     	;# 
  3420  0418                     	;# 
  3421  0418                     	;# 
  3422  0419                     	;# 
  3423  041A                     	;# 
  3424  041B                     	;# 
  3425  041C                     	;# 
  3426  041D                     	;# 
  3427  041E                     	;# 
  3428  041F                     	;# 
  3429  0498                     	;# 
  3430  0498                     	;# 
  3431  0499                     	;# 
  3432  049A                     	;# 
  3433  049B                     	;# 
  3434  049B                     	;# 
  3435  049C                     	;# 
  3436  049D                     	;# 
  3437  049E                     	;# 
  3438  049F                     	;# 
  3439  0617                     	;# 
  3440  0618                     	;# 
  3441  0619                     	;# 
  3442  0619                     	;# 
  3443  061A                     	;# 
  3444  061B                     	;# 
  3445  061C                     	;# 
  3446  061C                     	;# 
  3447  061F                     	;# 
  3448  0691                     	;# 
  3449  0692                     	;# 
  3450  0693                     	;# 
  3451  0694                     	;# 
  3452  0695                     	;# 
  3453  0696                     	;# 
  3454  0697                     	;# 
  3455  0698                     	;# 
  3456  0699                     	;# 
  3457  0711                     	;# 
  3458  0712                     	;# 
  3459  0713                     	;# 
  3460  0714                     	;# 
  3461  0715                     	;# 
  3462  0716                     	;# 
  3463  0717                     	;# 
  3464  0718                     	;# 
  3465  0719                     	;# 
  3466  0891                     	;# 
  3467  0891                     	;# 
  3468  0891                     	;# 
  3469  0891                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0892                     	;# 
  3474  0892                     	;# 
  3475  0893                     	;# 
  3476  0893                     	;# 
  3477  0893                     	;# 
  3478  0893                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0894                     	;# 
  3482  0894                     	;# 
  3483  0894                     	;# 
  3484  0895                     	;# 
  3485  0895                     	;# 
  3486  0895                     	;# 
  3487  0896                     	;# 
  3488  0896                     	;# 
  3489  0896                     	;# 
  3490  089B                     	;# 
  3491  0911                     	;# 
  3492  0912                     	;# 
  3493  0913                     	;# 
  3494  0914                     	;# 
  3495  0915                     	;# 
  3496  0916                     	;# 
  3497  0918                     	;# 
  3498  0919                     	;# 
  3499  091A                     	;# 
  3500  091B                     	;# 
  3501  091C                     	;# 
  3502  091D                     	;# 
  3503  091E                     	;# 
  3504  091F                     	;# 
  3505  0E0F                     	;# 
  3506  0E10                     	;# 
  3507  0E11                     	;# 
  3508  0E12                     	;# 
  3509  0E13                     	;# 
  3510  0E14                     	;# 
  3511  0E15                     	;# 
  3512  0E16                     	;# 
  3513  0E17                     	;# 
  3514  0E18                     	;# 
  3515  0E19                     	;# 
  3516  0E1A                     	;# 
  3517  0E1B                     	;# 
  3518  0E1C                     	;# 
  3519  0E1D                     	;# 
  3520  0E1E                     	;# 
  3521  0E1F                     	;# 
  3522  0E20                     	;# 
  3523  0E21                     	;# 
  3524  0E22                     	;# 
  3525  0E24                     	;# 
  3526  0E25                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E90                     	;# 
  3536  0E91                     	;# 
  3537  0E92                     	;# 
  3538  0E94                     	;# 
  3539  0E95                     	;# 
  3540  0E9C                     	;# 
  3541  0E9D                     	;# 
  3542  0E9E                     	;# 
  3543  0E9F                     	;# 
  3544  0EA0                     	;# 
  3545  0EA1                     	;# 
  3546  0EA2                     	;# 
  3547  0EA3                     	;# 
  3548  0EA4                     	;# 
  3549  0EA5                     	;# 
  3550  0EA6                     	;# 
  3551  0EA7                     	;# 
  3552  0F0F                     	;# 
  3553  0F10                     	;# 
  3554  0F11                     	;# 
  3555  0F12                     	;# 
  3556  0F13                     	;# 
  3557  0F14                     	;# 
  3558  0F15                     	;# 
  3559  0F16                     	;# 
  3560  0F17                     	;# 
  3561  0F18                     	;# 
  3562  0F19                     	;# 
  3563  0F1A                     	;# 
  3564  0F1B                     	;# 
  3565  0F1C                     	;# 
  3566  0F1D                     	;# 
  3567  0F1E                     	;# 
  3568  0F1F                     	;# 
  3569  0F20                     	;# 
  3570  0F21                     	;# 
  3571  0F22                     	;# 
  3572  0F23                     	;# 
  3573  0F24                     	;# 
  3574  0F25                     	;# 
  3575  0F26                     	;# 
  3576  0F27                     	;# 
  3577  0F28                     	;# 
  3578  0F29                     	;# 
  3579  0F2A                     	;# 
  3580  0F2B                     	;# 
  3581  0F2C                     	;# 
  3582  0F2D                     	;# 
  3583  0F2E                     	;# 
  3584  0F2F                     	;# 
  3585  0F30                     	;# 
  3586  0F31                     	;# 
  3587  0F32                     	;# 
  3588  0F33                     	;# 
  3589  0F34                     	;# 
  3590  0F35                     	;# 
  3591  0F36                     	;# 
  3592  0F37                     	;# 
  3593  0FE4                     	;# 
  3594  0FE5                     	;# 
  3595  0FE6                     	;# 
  3596  0FE7                     	;# 
  3597  0FE8                     	;# 
  3598  0FE9                     	;# 
  3599  0FEA                     	;# 
  3600  0FEB                     	;# 
  3601  0FED                     	;# 
  3602  0FEE                     	;# 
  3603  0FEF                     	;# 
  3604  0000                     	;# 
  3605  0001                     	;# 
  3606  0002                     	;# 
  3607  0003                     	;# 
  3608  0004                     	;# 
  3609  0005                     	;# 
  3610  0006                     	;# 
  3611  0007                     	;# 
  3612  0008                     	;# 
  3613  0009                     	;# 
  3614  000A                     	;# 
  3615  000B                     	;# 
  3616  000C                     	;# 
  3617  000D                     	;# 
  3618  000E                     	;# 
  3619  0010                     	;# 
  3620  0011                     	;# 
  3621  0012                     	;# 
  3622  0013                     	;# 
  3623  0014                     	;# 
  3624  0015                     	;# 
  3625  0015                     	;# 
  3626  0016                     	;# 
  3627  0016                     	;# 
  3628  0017                     	;# 
  3629  0018                     	;# 
  3630  0019                     	;# 
  3631  0019                     	;# 
  3632  001A                     	;# 
  3633  001B                     	;# 
  3634  001C                     	;# 
  3635  001D                     	;# 
  3636  001E                     	;# 
  3637  001F                     	;# 
  3638  008C                     	;# 
  3639  008D                     	;# 
  3640  008E                     	;# 
  3641  0090                     	;# 
  3642  0091                     	;# 
  3643  0092                     	;# 
  3644  0093                     	;# 
  3645  0094                     	;# 
  3646  0097                     	;# 
  3647  009B                     	;# 
  3648  009B                     	;# 
  3649  009C                     	;# 
  3650  009D                     	;# 
  3651  009E                     	;# 
  3652  009F                     	;# 
  3653  010C                     	;# 
  3654  010D                     	;# 
  3655  010E                     	;# 
  3656  0111                     	;# 
  3657  0112                     	;# 
  3658  0113                     	;# 
  3659  0114                     	;# 
  3660  0115                     	;# 
  3661  0116                     	;# 
  3662  0117                     	;# 
  3663  0118                     	;# 
  3664  0119                     	;# 
  3665  018C                     	;# 
  3666  018D                     	;# 
  3667  018E                     	;# 
  3668  0197                     	;# 
  3669  0199                     	;# 
  3670  0199                     	;# 
  3671  0199                     	;# 
  3672  019A                     	;# 
  3673  019A                     	;# 
  3674  019A                     	;# 
  3675  019B                     	;# 
  3676  019B                     	;# 
  3677  019B                     	;# 
  3678  019B                     	;# 
  3679  019B                     	;# 
  3680  019C                     	;# 
  3681  019C                     	;# 
  3682  019C                     	;# 
  3683  019D                     	;# 
  3684  019D                     	;# 
  3685  019D                     	;# 
  3686  019E                     	;# 
  3687  019E                     	;# 
  3688  019E                     	;# 
  3689  019F                     	;# 
  3690  019F                     	;# 
  3691  019F                     	;# 
  3692  019F                     	;# 
  3693  019F                     	;# 
  3694  020C                     	;# 
  3695  020D                     	;# 
  3696  020E                     	;# 
  3697  0211                     	;# 
  3698  0211                     	;# 
  3699  0212                     	;# 
  3700  0212                     	;# 
  3701  0213                     	;# 
  3702  0213                     	;# 
  3703  0214                     	;# 
  3704  0214                     	;# 
  3705  0215                     	;# 
  3706  0215                     	;# 
  3707  0215                     	;# 
  3708  0215                     	;# 
  3709  0216                     	;# 
  3710  0216                     	;# 
  3711  0217                     	;# 
  3712  0217                     	;# 
  3713  0219                     	;# 
  3714  021A                     	;# 
  3715  021B                     	;# 
  3716  021C                     	;# 
  3717  021D                     	;# 
  3718  021D                     	;# 
  3719  021E                     	;# 
  3720  021F                     	;# 
  3721  028C                     	;# 
  3722  028D                     	;# 
  3723  028E                     	;# 
  3724  0291                     	;# 
  3725  0291                     	;# 
  3726  0292                     	;# 
  3727  0293                     	;# 
  3728  0294                     	;# 
  3729  0295                     	;# 
  3730  0295                     	;# 
  3731  0296                     	;# 
  3732  0297                     	;# 
  3733  0298                     	;# 
  3734  029F                     	;# 
  3735  030C                     	;# 
  3736  030D                     	;# 
  3737  030E                     	;# 
  3738  0311                     	;# 
  3739  0311                     	;# 
  3740  0312                     	;# 
  3741  0313                     	;# 
  3742  0314                     	;# 
  3743  0315                     	;# 
  3744  0315                     	;# 
  3745  0316                     	;# 
  3746  0317                     	;# 
  3747  0318                     	;# 
  3748  038C                     	;# 
  3749  038D                     	;# 
  3750  038E                     	;# 
  3751  0391                     	;# 
  3752  0392                     	;# 
  3753  0393                     	;# 
  3754  0394                     	;# 
  3755  0395                     	;# 
  3756  0396                     	;# 
  3757  0397                     	;# 
  3758  0398                     	;# 
  3759  0399                     	;# 
  3760  039A                     	;# 
  3761  039C                     	;# 
  3762  039D                     	;# 
  3763  039E                     	;# 
  3764  039F                     	;# 
  3765  0411                     	;# 
  3766  0411                     	;# 
  3767  0412                     	;# 
  3768  0413                     	;# 
  3769  0414                     	;# 
  3770  0415                     	;# 
  3771  0416                     	;# 
  3772  0417                     	;# 
  3773  0418                     	;# 
  3774  0418                     	;# 
  3775  0419                     	;# 
  3776  041A                     	;# 
  3777  041B                     	;# 
  3778  041C                     	;# 
  3779  041D                     	;# 
  3780  041E                     	;# 
  3781  041F                     	;# 
  3782  0498                     	;# 
  3783  0498                     	;# 
  3784  0499                     	;# 
  3785  049A                     	;# 
  3786  049B                     	;# 
  3787  049B                     	;# 
  3788  049C                     	;# 
  3789  049D                     	;# 
  3790  049E                     	;# 
  3791  049F                     	;# 
  3792  0617                     	;# 
  3793  0618                     	;# 
  3794  0619                     	;# 
  3795  0619                     	;# 
  3796  061A                     	;# 
  3797  061B                     	;# 
  3798  061C                     	;# 
  3799  061C                     	;# 
  3800  061F                     	;# 
  3801  0691                     	;# 
  3802  0692                     	;# 
  3803  0693                     	;# 
  3804  0694                     	;# 
  3805  0695                     	;# 
  3806  0696                     	;# 
  3807  0697                     	;# 
  3808  0698                     	;# 
  3809  0699                     	;# 
  3810  0711                     	;# 
  3811  0712                     	;# 
  3812  0713                     	;# 
  3813  0714                     	;# 
  3814  0715                     	;# 
  3815  0716                     	;# 
  3816  0717                     	;# 
  3817  0718                     	;# 
  3818  0719                     	;# 
  3819  0891                     	;# 
  3820  0891                     	;# 
  3821  0891                     	;# 
  3822  0891                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0892                     	;# 
  3826  0892                     	;# 
  3827  0892                     	;# 
  3828  0893                     	;# 
  3829  0893                     	;# 
  3830  0893                     	;# 
  3831  0893                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0894                     	;# 
  3835  0894                     	;# 
  3836  0894                     	;# 
  3837  0895                     	;# 
  3838  0895                     	;# 
  3839  0895                     	;# 
  3840  0896                     	;# 
  3841  0896                     	;# 
  3842  0896                     	;# 
  3843  089B                     	;# 
  3844  0911                     	;# 
  3845  0912                     	;# 
  3846  0913                     	;# 
  3847  0914                     	;# 
  3848  0915                     	;# 
  3849  0916                     	;# 
  3850  0918                     	;# 
  3851  0919                     	;# 
  3852  091A                     	;# 
  3853  091B                     	;# 
  3854  091C                     	;# 
  3855  091D                     	;# 
  3856  091E                     	;# 
  3857  091F                     	;# 
  3858  0E0F                     	;# 
  3859  0E10                     	;# 
  3860  0E11                     	;# 
  3861  0E12                     	;# 
  3862  0E13                     	;# 
  3863  0E14                     	;# 
  3864  0E15                     	;# 
  3865  0E16                     	;# 
  3866  0E17                     	;# 
  3867  0E18                     	;# 
  3868  0E19                     	;# 
  3869  0E1A                     	;# 
  3870  0E1B                     	;# 
  3871  0E1C                     	;# 
  3872  0E1D                     	;# 
  3873  0E1E                     	;# 
  3874  0E1F                     	;# 
  3875  0E20                     	;# 
  3876  0E21                     	;# 
  3877  0E22                     	;# 
  3878  0E24                     	;# 
  3879  0E25                     	;# 
  3880  0E28                     	;# 
  3881  0E29                     	;# 
  3882  0E2A                     	;# 
  3883  0E2B                     	;# 
  3884  0E2C                     	;# 
  3885  0E2D                     	;# 
  3886  0E2E                     	;# 
  3887  0E2F                     	;# 
  3888  0E90                     	;# 
  3889  0E91                     	;# 
  3890  0E92                     	;# 
  3891  0E94                     	;# 
  3892  0E95                     	;# 
  3893  0E9C                     	;# 
  3894  0E9D                     	;# 
  3895  0E9E                     	;# 
  3896  0E9F                     	;# 
  3897  0EA0                     	;# 
  3898  0EA1                     	;# 
  3899  0EA2                     	;# 
  3900  0EA3                     	;# 
  3901  0EA4                     	;# 
  3902  0EA5                     	;# 
  3903  0EA6                     	;# 
  3904  0EA7                     	;# 
  3905  0F0F                     	;# 
  3906  0F10                     	;# 
  3907  0F11                     	;# 
  3908  0F12                     	;# 
  3909  0F13                     	;# 
  3910  0F14                     	;# 
  3911  0F15                     	;# 
  3912  0F16                     	;# 
  3913  0F17                     	;# 
  3914  0F18                     	;# 
  3915  0F19                     	;# 
  3916  0F1A                     	;# 
  3917  0F1B                     	;# 
  3918  0F1C                     	;# 
  3919  0F1D                     	;# 
  3920  0F1E                     	;# 
  3921  0F1F                     	;# 
  3922  0F20                     	;# 
  3923  0F21                     	;# 
  3924  0F22                     	;# 
  3925  0F23                     	;# 
  3926  0F24                     	;# 
  3927  0F25                     	;# 
  3928  0F26                     	;# 
  3929  0F27                     	;# 
  3930  0F28                     	;# 
  3931  0F29                     	;# 
  3932  0F2A                     	;# 
  3933  0F2B                     	;# 
  3934  0F2C                     	;# 
  3935  0F2D                     	;# 
  3936  0F2E                     	;# 
  3937  0F2F                     	;# 
  3938  0F30                     	;# 
  3939  0F31                     	;# 
  3940  0F32                     	;# 
  3941  0F33                     	;# 
  3942  0F34                     	;# 
  3943  0F35                     	;# 
  3944  0F36                     	;# 
  3945  0F37                     	;# 
  3946  0FE4                     	;# 
  3947  0FE5                     	;# 
  3948  0FE6                     	;# 
  3949  0FE7                     	;# 
  3950  0FE8                     	;# 
  3951  0FE9                     	;# 
  3952  0FEA                     	;# 
  3953  0FEB                     	;# 
  3954  0FED                     	;# 
  3955  0FEE                     	;# 
  3956  0FEF                     	;# 
  3957  0000                     	;# 
  3958  0001                     	;# 
  3959  0002                     	;# 
  3960  0003                     	;# 
  3961  0004                     	;# 
  3962  0005                     	;# 
  3963  0006                     	;# 
  3964  0007                     	;# 
  3965  0008                     	;# 
  3966  0009                     	;# 
  3967  000A                     	;# 
  3968  000B                     	;# 
  3969  000C                     	;# 
  3970  000D                     	;# 
  3971  000E                     	;# 
  3972  0010                     	;# 
  3973  0011                     	;# 
  3974  0012                     	;# 
  3975  0013                     	;# 
  3976  0014                     	;# 
  3977  0015                     	;# 
  3978  0015                     	;# 
  3979  0016                     	;# 
  3980  0016                     	;# 
  3981  0017                     	;# 
  3982  0018                     	;# 
  3983  0019                     	;# 
  3984  0019                     	;# 
  3985  001A                     	;# 
  3986  001B                     	;# 
  3987  001C                     	;# 
  3988  001D                     	;# 
  3989  001E                     	;# 
  3990  001F                     	;# 
  3991  008C                     	;# 
  3992  008D                     	;# 
  3993  008E                     	;# 
  3994  0090                     	;# 
  3995  0091                     	;# 
  3996  0092                     	;# 
  3997  0093                     	;# 
  3998  0094                     	;# 
  3999  0097                     	;# 
  4000  009B                     	;# 
  4001  009B                     	;# 
  4002  009C                     	;# 
  4003  009D                     	;# 
  4004  009E                     	;# 
  4005  009F                     	;# 
  4006  010C                     	;# 
  4007  010D                     	;# 
  4008  010E                     	;# 
  4009  0111                     	;# 
  4010  0112                     	;# 
  4011  0113                     	;# 
  4012  0114                     	;# 
  4013  0115                     	;# 
  4014  0116                     	;# 
  4015  0117                     	;# 
  4016  0118                     	;# 
  4017  0119                     	;# 
  4018  018C                     	;# 
  4019  018D                     	;# 
  4020  018E                     	;# 
  4021  0197                     	;# 
  4022  0199                     	;# 
  4023  0199                     	;# 
  4024  0199                     	;# 
  4025  019A                     	;# 
  4026  019A                     	;# 
  4027  019A                     	;# 
  4028  019B                     	;# 
  4029  019B                     	;# 
  4030  019B                     	;# 
  4031  019B                     	;# 
  4032  019B                     	;# 
  4033  019C                     	;# 
  4034  019C                     	;# 
  4035  019C                     	;# 
  4036  019D                     	;# 
  4037  019D                     	;# 
  4038  019D                     	;# 
  4039  019E                     	;# 
  4040  019E                     	;# 
  4041  019E                     	;# 
  4042  019F                     	;# 
  4043  019F                     	;# 
  4044  019F                     	;# 
  4045  019F                     	;# 
  4046  019F                     	;# 
  4047  020C                     	;# 
  4048  020D                     	;# 
  4049  020E                     	;# 
  4050  0211                     	;# 
  4051  0211                     	;# 
  4052  0212                     	;# 
  4053  0212                     	;# 
  4054  0213                     	;# 
  4055  0213                     	;# 
  4056  0214                     	;# 
  4057  0214                     	;# 
  4058  0215                     	;# 
  4059  0215                     	;# 
  4060  0215                     	;# 
  4061  0215                     	;# 
  4062  0216                     	;# 
  4063  0216                     	;# 
  4064  0217                     	;# 
  4065  0217                     	;# 
  4066  0219                     	;# 
  4067  021A                     	;# 
  4068  021B                     	;# 
  4069  021C                     	;# 
  4070  021D                     	;# 
  4071  021D                     	;# 
  4072  021E                     	;# 
  4073  021F                     	;# 
  4074  028C                     	;# 
  4075  028D                     	;# 
  4076  028E                     	;# 
  4077  0291                     	;# 
  4078  0291                     	;# 
  4079  0292                     	;# 
  4080  0293                     	;# 
  4081  0294                     	;# 
  4082  0295                     	;# 
  4083  0295                     	;# 
  4084  0296                     	;# 
  4085  0297                     	;# 
  4086  0298                     	;# 
  4087  029F                     	;# 
  4088  030C                     	;# 
  4089  030D                     	;# 
  4090  030E                     	;# 
  4091  0311                     	;# 
  4092  0311                     	;# 
  4093  0312                     	;# 
  4094  0313                     	;# 
  4095  0314                     	;# 
  4096  0315                     	;# 
  4097  0315                     	;# 
  4098  0316                     	;# 
  4099  0317                     	;# 
  4100  0318                     	;# 
  4101  038C                     	;# 
  4102  038D                     	;# 
  4103  038E                     	;# 
  4104  0391                     	;# 
  4105  0392                     	;# 
  4106  0393                     	;# 
  4107  0394                     	;# 
  4108  0395                     	;# 
  4109  0396                     	;# 
  4110  0397                     	;# 
  4111  0398                     	;# 
  4112  0399                     	;# 
  4113  039A                     	;# 
  4114  039C                     	;# 
  4115  039D                     	;# 
  4116  039E                     	;# 
  4117  039F                     	;# 
  4118  0411                     	;# 
  4119  0411                     	;# 
  4120  0412                     	;# 
  4121  0413                     	;# 
  4122  0414                     	;# 
  4123  0415                     	;# 
  4124  0416                     	;# 
  4125  0417                     	;# 
  4126  0418                     	;# 
  4127  0418                     	;# 
  4128  0419                     	;# 
  4129  041A                     	;# 
  4130  041B                     	;# 
  4131  041C                     	;# 
  4132  041D                     	;# 
  4133  041E                     	;# 
  4134  041F                     	;# 
  4135  0498                     	;# 
  4136  0498                     	;# 
  4137  0499                     	;# 
  4138  049A                     	;# 
  4139  049B                     	;# 
  4140  049B                     	;# 
  4141  049C                     	;# 
  4142  049D                     	;# 
  4143  049E                     	;# 
  4144  049F                     	;# 
  4145  0617                     	;# 
  4146  0618                     	;# 
  4147  0619                     	;# 
  4148  0619                     	;# 
  4149  061A                     	;# 
  4150  061B                     	;# 
  4151  061C                     	;# 
  4152  061C                     	;# 
  4153  061F                     	;# 
  4154  0691                     	;# 
  4155  0692                     	;# 
  4156  0693                     	;# 
  4157  0694                     	;# 
  4158  0695                     	;# 
  4159  0696                     	;# 
  4160  0697                     	;# 
  4161  0698                     	;# 
  4162  0699                     	;# 
  4163  0711                     	;# 
  4164  0712                     	;# 
  4165  0713                     	;# 
  4166  0714                     	;# 
  4167  0715                     	;# 
  4168  0716                     	;# 
  4169  0717                     	;# 
  4170  0718                     	;# 
  4171  0719                     	;# 
  4172  0891                     	;# 
  4173  0891                     	;# 
  4174  0891                     	;# 
  4175  0891                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0892                     	;# 
  4179  0892                     	;# 
  4180  0892                     	;# 
  4181  0893                     	;# 
  4182  0893                     	;# 
  4183  0893                     	;# 
  4184  0893                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0894                     	;# 
  4188  0894                     	;# 
  4189  0894                     	;# 
  4190  0895                     	;# 
  4191  0895                     	;# 
  4192  0895                     	;# 
  4193  0896                     	;# 
  4194  0896                     	;# 
  4195  0896                     	;# 
  4196  089B                     	;# 
  4197  0911                     	;# 
  4198  0912                     	;# 
  4199  0913                     	;# 
  4200  0914                     	;# 
  4201  0915                     	;# 
  4202  0916                     	;# 
  4203  0918                     	;# 
  4204  0919                     	;# 
  4205  091A                     	;# 
  4206  091B                     	;# 
  4207  091C                     	;# 
  4208  091D                     	;# 
  4209  091E                     	;# 
  4210  091F                     	;# 
  4211  0E0F                     	;# 
  4212  0E10                     	;# 
  4213  0E11                     	;# 
  4214  0E12                     	;# 
  4215  0E13                     	;# 
  4216  0E14                     	;# 
  4217  0E15                     	;# 
  4218  0E16                     	;# 
  4219  0E17                     	;# 
  4220  0E18                     	;# 
  4221  0E19                     	;# 
  4222  0E1A                     	;# 
  4223  0E1B                     	;# 
  4224  0E1C                     	;# 
  4225  0E1D                     	;# 
  4226  0E1E                     	;# 
  4227  0E1F                     	;# 
  4228  0E20                     	;# 
  4229  0E21                     	;# 
  4230  0E22                     	;# 
  4231  0E24                     	;# 
  4232  0E25                     	;# 
  4233  0E28                     	;# 
  4234  0E29                     	;# 
  4235  0E2A                     	;# 
  4236  0E2B                     	;# 
  4237  0E2C                     	;# 
  4238  0E2D                     	;# 
  4239  0E2E                     	;# 
  4240  0E2F                     	;# 
  4241  0E90                     	;# 
  4242  0E91                     	;# 
  4243  0E92                     	;# 
  4244  0E94                     	;# 
  4245  0E95                     	;# 
  4246  0E9C                     	;# 
  4247  0E9D                     	;# 
  4248  0E9E                     	;# 
  4249  0E9F                     	;# 
  4250  0EA0                     	;# 
  4251  0EA1                     	;# 
  4252  0EA2                     	;# 
  4253  0EA3                     	;# 
  4254  0EA4                     	;# 
  4255  0EA5                     	;# 
  4256  0EA6                     	;# 
  4257  0EA7                     	;# 
  4258  0F0F                     	;# 
  4259  0F10                     	;# 
  4260  0F11                     	;# 
  4261  0F12                     	;# 
  4262  0F13                     	;# 
  4263  0F14                     	;# 
  4264  0F15                     	;# 
  4265  0F16                     	;# 
  4266  0F17                     	;# 
  4267  0F18                     	;# 
  4268  0F19                     	;# 
  4269  0F1A                     	;# 
  4270  0F1B                     	;# 
  4271  0F1C                     	;# 
  4272  0F1D                     	;# 
  4273  0F1E                     	;# 
  4274  0F1F                     	;# 
  4275  0F20                     	;# 
  4276  0F21                     	;# 
  4277  0F22                     	;# 
  4278  0F23                     	;# 
  4279  0F24                     	;# 
  4280  0F25                     	;# 
  4281  0F26                     	;# 
  4282  0F27                     	;# 
  4283  0F28                     	;# 
  4284  0F29                     	;# 
  4285  0F2A                     	;# 
  4286  0F2B                     	;# 
  4287  0F2C                     	;# 
  4288  0F2D                     	;# 
  4289  0F2E                     	;# 
  4290  0F2F                     	;# 
  4291  0F30                     	;# 
  4292  0F31                     	;# 
  4293  0F32                     	;# 
  4294  0F33                     	;# 
  4295  0F34                     	;# 
  4296  0F35                     	;# 
  4297  0F36                     	;# 
  4298  0F37                     	;# 
  4299  0FE4                     	;# 
  4300  0FE5                     	;# 
  4301  0FE6                     	;# 
  4302  0FE7                     	;# 
  4303  0FE8                     	;# 
  4304  0FE9                     	;# 
  4305  0FEA                     	;# 
  4306  0FEB                     	;# 
  4307  0FED                     	;# 
  4308  0FEE                     	;# 
  4309  0FEF                     	;# 
  4310  0000                     	;# 
  4311  0001                     	;# 
  4312  0002                     	;# 
  4313  0003                     	;# 
  4314  0004                     	;# 
  4315  0005                     	;# 
  4316  0006                     	;# 
  4317  0007                     	;# 
  4318  0008                     	;# 
  4319  0009                     	;# 
  4320  000A                     	;# 
  4321  000B                     	;# 
  4322  000C                     	;# 
  4323  000D                     	;# 
  4324  000E                     	;# 
  4325  0010                     	;# 
  4326  0011                     	;# 
  4327  0012                     	;# 
  4328  0013                     	;# 
  4329  0014                     	;# 
  4330  0015                     	;# 
  4331  0015                     	;# 
  4332  0016                     	;# 
  4333  0016                     	;# 
  4334  0017                     	;# 
  4335  0018                     	;# 
  4336  0019                     	;# 
  4337  0019                     	;# 
  4338  001A                     	;# 
  4339  001B                     	;# 
  4340  001C                     	;# 
  4341  001D                     	;# 
  4342  001E                     	;# 
  4343  001F                     	;# 
  4344  008C                     	;# 
  4345  008D                     	;# 
  4346  008E                     	;# 
  4347  0090                     	;# 
  4348  0091                     	;# 
  4349  0092                     	;# 
  4350  0093                     	;# 
  4351  0094                     	;# 
  4352  0097                     	;# 
  4353  009B                     	;# 
  4354  009B                     	;# 
  4355  009C                     	;# 
  4356  009D                     	;# 
  4357  009E                     	;# 
  4358  009F                     	;# 
  4359  010C                     	;# 
  4360  010D                     	;# 
  4361  010E                     	;# 
  4362  0111                     	;# 
  4363  0112                     	;# 
  4364  0113                     	;# 
  4365  0114                     	;# 
  4366  0115                     	;# 
  4367  0116                     	;# 
  4368  0117                     	;# 
  4369  0118                     	;# 
  4370  0119                     	;# 
  4371  018C                     	;# 
  4372  018D                     	;# 
  4373  018E                     	;# 
  4374  0197                     	;# 
  4375  0199                     	;# 
  4376  0199                     	;# 
  4377  0199                     	;# 
  4378  019A                     	;# 
  4379  019A                     	;# 
  4380  019A                     	;# 
  4381  019B                     	;# 
  4382  019B                     	;# 
  4383  019B                     	;# 
  4384  019B                     	;# 
  4385  019B                     	;# 
  4386  019C                     	;# 
  4387  019C                     	;# 
  4388  019C                     	;# 
  4389  019D                     	;# 
  4390  019D                     	;# 
  4391  019D                     	;# 
  4392  019E                     	;# 
  4393  019E                     	;# 
  4394  019E                     	;# 
  4395  019F                     	;# 
  4396  019F                     	;# 
  4397  019F                     	;# 
  4398  019F                     	;# 
  4399  019F                     	;# 
  4400  020C                     	;# 
  4401  020D                     	;# 
  4402  020E                     	;# 
  4403  0211                     	;# 
  4404  0211                     	;# 
  4405  0212                     	;# 
  4406  0212                     	;# 
  4407  0213                     	;# 
  4408  0213                     	;# 
  4409  0214                     	;# 
  4410  0214                     	;# 
  4411  0215                     	;# 
  4412  0215                     	;# 
  4413  0215                     	;# 
  4414  0215                     	;# 
  4415  0216                     	;# 
  4416  0216                     	;# 
  4417  0217                     	;# 
  4418  0217                     	;# 
  4419  0219                     	;# 
  4420  021A                     	;# 
  4421  021B                     	;# 
  4422  021C                     	;# 
  4423  021D                     	;# 
  4424  021D                     	;# 
  4425  021E                     	;# 
  4426  021F                     	;# 
  4427  028C                     	;# 
  4428  028D                     	;# 
  4429  028E                     	;# 
  4430  0291                     	;# 
  4431  0291                     	;# 
  4432  0292                     	;# 
  4433  0293                     	;# 
  4434  0294                     	;# 
  4435  0295                     	;# 
  4436  0295                     	;# 
  4437  0296                     	;# 
  4438  0297                     	;# 
  4439  0298                     	;# 
  4440  029F                     	;# 
  4441  030C                     	;# 
  4442  030D                     	;# 
  4443  030E                     	;# 
  4444  0311                     	;# 
  4445  0311                     	;# 
  4446  0312                     	;# 
  4447  0313                     	;# 
  4448  0314                     	;# 
  4449  0315                     	;# 
  4450  0315                     	;# 
  4451  0316                     	;# 
  4452  0317                     	;# 
  4453  0318                     	;# 
  4454  038C                     	;# 
  4455  038D                     	;# 
  4456  038E                     	;# 
  4457  0391                     	;# 
  4458  0392                     	;# 
  4459  0393                     	;# 
  4460  0394                     	;# 
  4461  0395                     	;# 
  4462  0396                     	;# 
  4463  0397                     	;# 
  4464  0398                     	;# 
  4465  0399                     	;# 
  4466  039A                     	;# 
  4467  039C                     	;# 
  4468  039D                     	;# 
  4469  039E                     	;# 
  4470  039F                     	;# 
  4471  0411                     	;# 
  4472  0411                     	;# 
  4473  0412                     	;# 
  4474  0413                     	;# 
  4475  0414                     	;# 
  4476  0415                     	;# 
  4477  0416                     	;# 
  4478  0417                     	;# 
  4479  0418                     	;# 
  4480  0418                     	;# 
  4481  0419                     	;# 
  4482  041A                     	;# 
  4483  041B                     	;# 
  4484  041C                     	;# 
  4485  041D                     	;# 
  4486  041E                     	;# 
  4487  041F                     	;# 
  4488  0498                     	;# 
  4489  0498                     	;# 
  4490  0499                     	;# 
  4491  049A                     	;# 
  4492  049B                     	;# 
  4493  049B                     	;# 
  4494  049C                     	;# 
  4495  049D                     	;# 
  4496  049E                     	;# 
  4497  049F                     	;# 
  4498  0617                     	;# 
  4499  0618                     	;# 
  4500  0619                     	;# 
  4501  0619                     	;# 
  4502  061A                     	;# 
  4503  061B                     	;# 
  4504  061C                     	;# 
  4505  061C                     	;# 
  4506  061F                     	;# 
  4507  0691                     	;# 
  4508  0692                     	;# 
  4509  0693                     	;# 
  4510  0694                     	;# 
  4511  0695                     	;# 
  4512  0696                     	;# 
  4513  0697                     	;# 
  4514  0698                     	;# 
  4515  0699                     	;# 
  4516  0711                     	;# 
  4517  0712                     	;# 
  4518  0713                     	;# 
  4519  0714                     	;# 
  4520  0715                     	;# 
  4521  0716                     	;# 
  4522  0717                     	;# 
  4523  0718                     	;# 
  4524  0719                     	;# 
  4525  0891                     	;# 
  4526  0891                     	;# 
  4527  0891                     	;# 
  4528  0891                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0892                     	;# 
  4532  0892                     	;# 
  4533  0892                     	;# 
  4534  0893                     	;# 
  4535  0893                     	;# 
  4536  0893                     	;# 
  4537  0893                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0894                     	;# 
  4541  0894                     	;# 
  4542  0894                     	;# 
  4543  0895                     	;# 
  4544  0895                     	;# 
  4545  0895                     	;# 
  4546  0896                     	;# 
  4547  0896                     	;# 
  4548  0896                     	;# 
  4549  089B                     	;# 
  4550  0911                     	;# 
  4551  0912                     	;# 
  4552  0913                     	;# 
  4553  0914                     	;# 
  4554  0915                     	;# 
  4555  0916                     	;# 
  4556  0918                     	;# 
  4557  0919                     	;# 
  4558  091A                     	;# 
  4559  091B                     	;# 
  4560  091C                     	;# 
  4561  091D                     	;# 
  4562  091E                     	;# 
  4563  091F                     	;# 
  4564  0E0F                     	;# 
  4565  0E10                     	;# 
  4566  0E11                     	;# 
  4567  0E12                     	;# 
  4568  0E13                     	;# 
  4569  0E14                     	;# 
  4570  0E15                     	;# 
  4571  0E16                     	;# 
  4572  0E17                     	;# 
  4573  0E18                     	;# 
  4574  0E19                     	;# 
  4575  0E1A                     	;# 
  4576  0E1B                     	;# 
  4577  0E1C                     	;# 
  4578  0E1D                     	;# 
  4579  0E1E                     	;# 
  4580  0E1F                     	;# 
  4581  0E20                     	;# 
  4582  0E21                     	;# 
  4583  0E22                     	;# 
  4584  0E24                     	;# 
  4585  0E25                     	;# 
  4586  0E28                     	;# 
  4587  0E29                     	;# 
  4588  0E2A                     	;# 
  4589  0E2B                     	;# 
  4590  0E2C                     	;# 
  4591  0E2D                     	;# 
  4592  0E2E                     	;# 
  4593  0E2F                     	;# 
  4594  0E90                     	;# 
  4595  0E91                     	;# 
  4596  0E92                     	;# 
  4597  0E94                     	;# 
  4598  0E95                     	;# 
  4599  0E9C                     	;# 
  4600  0E9D                     	;# 
  4601  0E9E                     	;# 
  4602  0E9F                     	;# 
  4603  0EA0                     	;# 
  4604  0EA1                     	;# 
  4605  0EA2                     	;# 
  4606  0EA3                     	;# 
  4607  0EA4                     	;# 
  4608  0EA5                     	;# 
  4609  0EA6                     	;# 
  4610  0EA7                     	;# 
  4611  0F0F                     	;# 
  4612  0F10                     	;# 
  4613  0F11                     	;# 
  4614  0F12                     	;# 
  4615  0F13                     	;# 
  4616  0F14                     	;# 
  4617  0F15                     	;# 
  4618  0F16                     	;# 
  4619  0F17                     	;# 
  4620  0F18                     	;# 
  4621  0F19                     	;# 
  4622  0F1A                     	;# 
  4623  0F1B                     	;# 
  4624  0F1C                     	;# 
  4625  0F1D                     	;# 
  4626  0F1E                     	;# 
  4627  0F1F                     	;# 
  4628  0F20                     	;# 
  4629  0F21                     	;# 
  4630  0F22                     	;# 
  4631  0F23                     	;# 
  4632  0F24                     	;# 
  4633  0F25                     	;# 
  4634  0F26                     	;# 
  4635  0F27                     	;# 
  4636  0F28                     	;# 
  4637  0F29                     	;# 
  4638  0F2A                     	;# 
  4639  0F2B                     	;# 
  4640  0F2C                     	;# 
  4641  0F2D                     	;# 
  4642  0F2E                     	;# 
  4643  0F2F                     	;# 
  4644  0F30                     	;# 
  4645  0F31                     	;# 
  4646  0F32                     	;# 
  4647  0F33                     	;# 
  4648  0F34                     	;# 
  4649  0F35                     	;# 
  4650  0F36                     	;# 
  4651  0F37                     	;# 
  4652  0FE4                     	;# 
  4653  0FE5                     	;# 
  4654  0FE6                     	;# 
  4655  0FE7                     	;# 
  4656  0FE8                     	;# 
  4657  0FE9                     	;# 
  4658  0FEA                     	;# 
  4659  0FEB                     	;# 
  4660  0FED                     	;# 
  4661  0FEE                     	;# 
  4662  0FEF                     	;# 
  4663  0000                     	;# 
  4664  0001                     	;# 
  4665  0002                     	;# 
  4666  0003                     	;# 
  4667  0004                     	;# 
  4668  0005                     	;# 
  4669  0006                     	;# 
  4670  0007                     	;# 
  4671  0008                     	;# 
  4672  0009                     	;# 
  4673  000A                     	;# 
  4674  000B                     	;# 
  4675  000C                     	;# 
  4676  000D                     	;# 
  4677  000E                     	;# 
  4678  0010                     	;# 
  4679  0011                     	;# 
  4680  0012                     	;# 
  4681  0013                     	;# 
  4682  0014                     	;# 
  4683  0015                     	;# 
  4684  0015                     	;# 
  4685  0016                     	;# 
  4686  0016                     	;# 
  4687  0017                     	;# 
  4688  0018                     	;# 
  4689  0019                     	;# 
  4690  0019                     	;# 
  4691  001A                     	;# 
  4692  001B                     	;# 
  4693  001C                     	;# 
  4694  001D                     	;# 
  4695  001E                     	;# 
  4696  001F                     	;# 
  4697  008C                     	;# 
  4698  008D                     	;# 
  4699  008E                     	;# 
  4700  0090                     	;# 
  4701  0091                     	;# 
  4702  0092                     	;# 
  4703  0093                     	;# 
  4704  0094                     	;# 
  4705  0097                     	;# 
  4706  009B                     	;# 
  4707  009B                     	;# 
  4708  009C                     	;# 
  4709  009D                     	;# 
  4710  009E                     	;# 
  4711  009F                     	;# 
  4712  010C                     	;# 
  4713  010D                     	;# 
  4714  010E                     	;# 
  4715  0111                     	;# 
  4716  0112                     	;# 
  4717  0113                     	;# 
  4718  0114                     	;# 
  4719  0115                     	;# 
  4720  0116                     	;# 
  4721  0117                     	;# 
  4722  0118                     	;# 
  4723  0119                     	;# 
  4724  018C                     	;# 
  4725  018D                     	;# 
  4726  018E                     	;# 
  4727  0197                     	;# 
  4728  0199                     	;# 
  4729  0199                     	;# 
  4730  0199                     	;# 
  4731  019A                     	;# 
  4732  019A                     	;# 
  4733  019A                     	;# 
  4734  019B                     	;# 
  4735  019B                     	;# 
  4736  019B                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019C                     	;# 
  4740  019C                     	;# 
  4741  019C                     	;# 
  4742  019D                     	;# 
  4743  019D                     	;# 
  4744  019D                     	;# 
  4745  019E                     	;# 
  4746  019E                     	;# 
  4747  019E                     	;# 
  4748  019F                     	;# 
  4749  019F                     	;# 
  4750  019F                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  020C                     	;# 
  4754  020D                     	;# 
  4755  020E                     	;# 
  4756  0211                     	;# 
  4757  0211                     	;# 
  4758  0212                     	;# 
  4759  0212                     	;# 
  4760  0213                     	;# 
  4761  0213                     	;# 
  4762  0214                     	;# 
  4763  0214                     	;# 
  4764  0215                     	;# 
  4765  0215                     	;# 
  4766  0215                     	;# 
  4767  0215                     	;# 
  4768  0216                     	;# 
  4769  0216                     	;# 
  4770  0217                     	;# 
  4771  0217                     	;# 
  4772  0219                     	;# 
  4773  021A                     	;# 
  4774  021B                     	;# 
  4775  021C                     	;# 
  4776  021D                     	;# 
  4777  021D                     	;# 
  4778  021E                     	;# 
  4779  021F                     	;# 
  4780  028C                     	;# 
  4781  028D                     	;# 
  4782  028E                     	;# 
  4783  0291                     	;# 
  4784  0291                     	;# 
  4785  0292                     	;# 
  4786  0293                     	;# 
  4787  0294                     	;# 
  4788  0295                     	;# 
  4789  0295                     	;# 
  4790  0296                     	;# 
  4791  0297                     	;# 
  4792  0298                     	;# 
  4793  029F                     	;# 
  4794  030C                     	;# 
  4795  030D                     	;# 
  4796  030E                     	;# 
  4797  0311                     	;# 
  4798  0311                     	;# 
  4799  0312                     	;# 
  4800  0313                     	;# 
  4801  0314                     	;# 
  4802  0315                     	;# 
  4803  0315                     	;# 
  4804  0316                     	;# 
  4805  0317                     	;# 
  4806  0318                     	;# 
  4807  038C                     	;# 
  4808  038D                     	;# 
  4809  038E                     	;# 
  4810  0391                     	;# 
  4811  0392                     	;# 
  4812  0393                     	;# 
  4813  0394                     	;# 
  4814  0395                     	;# 
  4815  0396                     	;# 
  4816  0397                     	;# 
  4817  0398                     	;# 
  4818  0399                     	;# 
  4819  039A                     	;# 
  4820  039C                     	;# 
  4821  039D                     	;# 
  4822  039E                     	;# 
  4823  039F                     	;# 
  4824  0411                     	;# 
  4825  0411                     	;# 
  4826  0412                     	;# 
  4827  0413                     	;# 
  4828  0414                     	;# 
  4829  0415                     	;# 
  4830  0416                     	;# 
  4831  0417                     	;# 
  4832  0418                     	;# 
  4833  0418                     	;# 
  4834  0419                     	;# 
  4835  041A                     	;# 
  4836  041B                     	;# 
  4837  041C                     	;# 
  4838  041D                     	;# 
  4839  041E                     	;# 
  4840  041F                     	;# 
  4841  0498                     	;# 
  4842  0498                     	;# 
  4843  0499                     	;# 
  4844  049A                     	;# 
  4845  049B                     	;# 
  4846  049B                     	;# 
  4847  049C                     	;# 
  4848  049D                     	;# 
  4849  049E                     	;# 
  4850  049F                     	;# 
  4851  0617                     	;# 
  4852  0618                     	;# 
  4853  0619                     	;# 
  4854  0619                     	;# 
  4855  061A                     	;# 
  4856  061B                     	;# 
  4857  061C                     	;# 
  4858  061C                     	;# 
  4859  061F                     	;# 
  4860  0691                     	;# 
  4861  0692                     	;# 
  4862  0693                     	;# 
  4863  0694                     	;# 
  4864  0695                     	;# 
  4865  0696                     	;# 
  4866  0697                     	;# 
  4867  0698                     	;# 
  4868  0699                     	;# 
  4869  0711                     	;# 
  4870  0712                     	;# 
  4871  0713                     	;# 
  4872  0714                     	;# 
  4873  0715                     	;# 
  4874  0716                     	;# 
  4875  0717                     	;# 
  4876  0718                     	;# 
  4877  0719                     	;# 
  4878  0891                     	;# 
  4879  0891                     	;# 
  4880  0891                     	;# 
  4881  0891                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0892                     	;# 
  4885  0892                     	;# 
  4886  0892                     	;# 
  4887  0893                     	;# 
  4888  0893                     	;# 
  4889  0893                     	;# 
  4890  0893                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0894                     	;# 
  4894  0894                     	;# 
  4895  0894                     	;# 
  4896  0895                     	;# 
  4897  0895                     	;# 
  4898  0895                     	;# 
  4899  0896                     	;# 
  4900  0896                     	;# 
  4901  0896                     	;# 
  4902  089B                     	;# 
  4903  0911                     	;# 
  4904  0912                     	;# 
  4905  0913                     	;# 
  4906  0914                     	;# 
  4907  0915                     	;# 
  4908  0916                     	;# 
  4909  0918                     	;# 
  4910  0919                     	;# 
  4911  091A                     	;# 
  4912  091B                     	;# 
  4913  091C                     	;# 
  4914  091D                     	;# 
  4915  091E                     	;# 
  4916  091F                     	;# 
  4917  0E0F                     	;# 
  4918  0E10                     	;# 
  4919  0E11                     	;# 
  4920  0E12                     	;# 
  4921  0E13                     	;# 
  4922  0E14                     	;# 
  4923  0E15                     	;# 
  4924  0E16                     	;# 
  4925  0E17                     	;# 
  4926  0E18                     	;# 
  4927  0E19                     	;# 
  4928  0E1A                     	;# 
  4929  0E1B                     	;# 
  4930  0E1C                     	;# 
  4931  0E1D                     	;# 
  4932  0E1E                     	;# 
  4933  0E1F                     	;# 
  4934  0E20                     	;# 
  4935  0E21                     	;# 
  4936  0E22                     	;# 
  4937  0E24                     	;# 
  4938  0E25                     	;# 
  4939  0E28                     	;# 
  4940  0E29                     	;# 
  4941  0E2A                     	;# 
  4942  0E2B                     	;# 
  4943  0E2C                     	;# 
  4944  0E2D                     	;# 
  4945  0E2E                     	;# 
  4946  0E2F                     	;# 
  4947  0E90                     	;# 
  4948  0E91                     	;# 
  4949  0E92                     	;# 
  4950  0E94                     	;# 
  4951  0E95                     	;# 
  4952  0E9C                     	;# 
  4953  0E9D                     	;# 
  4954  0E9E                     	;# 
  4955  0E9F                     	;# 
  4956  0EA0                     	;# 
  4957  0EA1                     	;# 
  4958  0EA2                     	;# 
  4959  0EA3                     	;# 
  4960  0EA4                     	;# 
  4961  0EA5                     	;# 
  4962  0EA6                     	;# 
  4963  0EA7                     	;# 
  4964  0F0F                     	;# 
  4965  0F10                     	;# 
  4966  0F11                     	;# 
  4967  0F12                     	;# 
  4968  0F13                     	;# 
  4969  0F14                     	;# 
  4970  0F15                     	;# 
  4971  0F16                     	;# 
  4972  0F17                     	;# 
  4973  0F18                     	;# 
  4974  0F19                     	;# 
  4975  0F1A                     	;# 
  4976  0F1B                     	;# 
  4977  0F1C                     	;# 
  4978  0F1D                     	;# 
  4979  0F1E                     	;# 
  4980  0F1F                     	;# 
  4981  0F20                     	;# 
  4982  0F21                     	;# 
  4983  0F22                     	;# 
  4984  0F23                     	;# 
  4985  0F24                     	;# 
  4986  0F25                     	;# 
  4987  0F26                     	;# 
  4988  0F27                     	;# 
  4989  0F28                     	;# 
  4990  0F29                     	;# 
  4991  0F2A                     	;# 
  4992  0F2B                     	;# 
  4993  0F2C                     	;# 
  4994  0F2D                     	;# 
  4995  0F2E                     	;# 
  4996  0F2F                     	;# 
  4997  0F30                     	;# 
  4998  0F31                     	;# 
  4999  0F32                     	;# 
  5000  0F33                     	;# 
  5001  0F34                     	;# 
  5002  0F35                     	;# 
  5003  0F36                     	;# 
  5004  0F37                     	;# 
  5005  0FE4                     	;# 
  5006  0FE5                     	;# 
  5007  0FE6                     	;# 
  5008  0FE7                     	;# 
  5009  0FE8                     	;# 
  5010  0FE9                     	;# 
  5011  0FEA                     	;# 
  5012  0FEB                     	;# 
  5013  0FED                     	;# 
  5014  0FEE                     	;# 
  5015  0FEF                     	;# 
  5016  0000                     	;# 
  5017  0001                     	;# 
  5018  0002                     	;# 
  5019  0003                     	;# 
  5020  0004                     	;# 
  5021  0005                     	;# 
  5022  0006                     	;# 
  5023  0007                     	;# 
  5024  0008                     	;# 
  5025  0009                     	;# 
  5026  000A                     	;# 
  5027  000B                     	;# 
  5028  000C                     	;# 
  5029  000D                     	;# 
  5030  000E                     	;# 
  5031  0010                     	;# 
  5032  0011                     	;# 
  5033  0012                     	;# 
  5034  0013                     	;# 
  5035  0014                     	;# 
  5036  0015                     	;# 
  5037  0015                     	;# 
  5038  0016                     	;# 
  5039  0016                     	;# 
  5040  0017                     	;# 
  5041  0018                     	;# 
  5042  0019                     	;# 
  5043  0019                     	;# 
  5044  001A                     	;# 
  5045  001B                     	;# 
  5046  001C                     	;# 
  5047  001D                     	;# 
  5048  001E                     	;# 
  5049  001F                     	;# 
  5050  008C                     	;# 
  5051  008D                     	;# 
  5052  008E                     	;# 
  5053  0090                     	;# 
  5054  0091                     	;# 
  5055  0092                     	;# 
  5056  0093                     	;# 
  5057  0094                     	;# 
  5058  0097                     	;# 
  5059  009B                     	;# 
  5060  009B                     	;# 
  5061  009C                     	;# 
  5062  009D                     	;# 
  5063  009E                     	;# 
  5064  009F                     	;# 
  5065  010C                     	;# 
  5066  010D                     	;# 
  5067  010E                     	;# 
  5068  0111                     	;# 
  5069  0112                     	;# 
  5070  0113                     	;# 
  5071  0114                     	;# 
  5072  0115                     	;# 
  5073  0116                     	;# 
  5074  0117                     	;# 
  5075  0118                     	;# 
  5076  0119                     	;# 
  5077  018C                     	;# 
  5078  018D                     	;# 
  5079  018E                     	;# 
  5080  0197                     	;# 
  5081  0199                     	;# 
  5082  0199                     	;# 
  5083  0199                     	;# 
  5084  019A                     	;# 
  5085  019A                     	;# 
  5086  019A                     	;# 
  5087  019B                     	;# 
  5088  019B                     	;# 
  5089  019B                     	;# 
  5090  019B                     	;# 
  5091  019B                     	;# 
  5092  019C                     	;# 
  5093  019C                     	;# 
  5094  019C                     	;# 
  5095  019D                     	;# 
  5096  019D                     	;# 
  5097  019D                     	;# 
  5098  019E                     	;# 
  5099  019E                     	;# 
  5100  019E                     	;# 
  5101  019F                     	;# 
  5102  019F                     	;# 
  5103  019F                     	;# 
  5104  019F                     	;# 
  5105  019F                     	;# 
  5106  020C                     	;# 
  5107  020D                     	;# 
  5108  020E                     	;# 
  5109  0211                     	;# 
  5110  0211                     	;# 
  5111  0212                     	;# 
  5112  0212                     	;# 
  5113  0213                     	;# 
  5114  0213                     	;# 
  5115  0214                     	;# 
  5116  0214                     	;# 
  5117  0215                     	;# 
  5118  0215                     	;# 
  5119  0215                     	;# 
  5120  0215                     	;# 
  5121  0216                     	;# 
  5122  0216                     	;# 
  5123  0217                     	;# 
  5124  0217                     	;# 
  5125  0219                     	;# 
  5126  021A                     	;# 
  5127  021B                     	;# 
  5128  021C                     	;# 
  5129  021D                     	;# 
  5130  021D                     	;# 
  5131  021E                     	;# 
  5132  021F                     	;# 
  5133  028C                     	;# 
  5134  028D                     	;# 
  5135  028E                     	;# 
  5136  0291                     	;# 
  5137  0291                     	;# 
  5138  0292                     	;# 
  5139  0293                     	;# 
  5140  0294                     	;# 
  5141  0295                     	;# 
  5142  0295                     	;# 
  5143  0296                     	;# 
  5144  0297                     	;# 
  5145  0298                     	;# 
  5146  029F                     	;# 
  5147  030C                     	;# 
  5148  030D                     	;# 
  5149  030E                     	;# 
  5150  0311                     	;# 
  5151  0311                     	;# 
  5152  0312                     	;# 
  5153  0313                     	;# 
  5154  0314                     	;# 
  5155  0315                     	;# 
  5156  0315                     	;# 
  5157  0316                     	;# 
  5158  0317                     	;# 
  5159  0318                     	;# 
  5160  038C                     	;# 
  5161  038D                     	;# 
  5162  038E                     	;# 
  5163  0391                     	;# 
  5164  0392                     	;# 
  5165  0393                     	;# 
  5166  0394                     	;# 
  5167  0395                     	;# 
  5168  0396                     	;# 
  5169  0397                     	;# 
  5170  0398                     	;# 
  5171  0399                     	;# 
  5172  039A                     	;# 
  5173  039C                     	;# 
  5174  039D                     	;# 
  5175  039E                     	;# 
  5176  039F                     	;# 
  5177  0411                     	;# 
  5178  0411                     	;# 
  5179  0412                     	;# 
  5180  0413                     	;# 
  5181  0414                     	;# 
  5182  0415                     	;# 
  5183  0416                     	;# 
  5184  0417                     	;# 
  5185  0418                     	;# 
  5186  0418                     	;# 
  5187  0419                     	;# 
  5188  041A                     	;# 
  5189  041B                     	;# 
  5190  041C                     	;# 
  5191  041D                     	;# 
  5192  041E                     	;# 
  5193  041F                     	;# 
  5194  0498                     	;# 
  5195  0498                     	;# 
  5196  0499                     	;# 
  5197  049A                     	;# 
  5198  049B                     	;# 
  5199  049B                     	;# 
  5200  049C                     	;# 
  5201  049D                     	;# 
  5202  049E                     	;# 
  5203  049F                     	;# 
  5204  0617                     	;# 
  5205  0618                     	;# 
  5206  0619                     	;# 
  5207  0619                     	;# 
  5208  061A                     	;# 
  5209  061B                     	;# 
  5210  061C                     	;# 
  5211  061C                     	;# 
  5212  061F                     	;# 
  5213  0691                     	;# 
  5214  0692                     	;# 
  5215  0693                     	;# 
  5216  0694                     	;# 
  5217  0695                     	;# 
  5218  0696                     	;# 
  5219  0697                     	;# 
  5220  0698                     	;# 
  5221  0699                     	;# 
  5222  0711                     	;# 
  5223  0712                     	;# 
  5224  0713                     	;# 
  5225  0714                     	;# 
  5226  0715                     	;# 
  5227  0716                     	;# 
  5228  0717                     	;# 
  5229  0718                     	;# 
  5230  0719                     	;# 
  5231  0891                     	;# 
  5232  0891                     	;# 
  5233  0891                     	;# 
  5234  0891                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0892                     	;# 
  5238  0892                     	;# 
  5239  0892                     	;# 
  5240  0893                     	;# 
  5241  0893                     	;# 
  5242  0893                     	;# 
  5243  0893                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0894                     	;# 
  5247  0894                     	;# 
  5248  0894                     	;# 
  5249  0895                     	;# 
  5250  0895                     	;# 
  5251  0895                     	;# 
  5252  0896                     	;# 
  5253  0896                     	;# 
  5254  0896                     	;# 
  5255  089B                     	;# 
  5256  0911                     	;# 
  5257  0912                     	;# 
  5258  0913                     	;# 
  5259  0914                     	;# 
  5260  0915                     	;# 
  5261  0916                     	;# 
  5262  0918                     	;# 
  5263  0919                     	;# 
  5264  091A                     	;# 
  5265  091B                     	;# 
  5266  091C                     	;# 
  5267  091D                     	;# 
  5268  091E                     	;# 
  5269  091F                     	;# 
  5270  0E0F                     	;# 
  5271  0E10                     	;# 
  5272  0E11                     	;# 
  5273  0E12                     	;# 
  5274  0E13                     	;# 
  5275  0E14                     	;# 
  5276  0E15                     	;# 
  5277  0E16                     	;# 
  5278  0E17                     	;# 
  5279  0E18                     	;# 
  5280  0E19                     	;# 
  5281  0E1A                     	;# 
  5282  0E1B                     	;# 
  5283  0E1C                     	;# 
  5284  0E1D                     	;# 
  5285  0E1E                     	;# 
  5286  0E1F                     	;# 
  5287  0E20                     	;# 
  5288  0E21                     	;# 
  5289  0E22                     	;# 
  5290  0E24                     	;# 
  5291  0E25                     	;# 
  5292  0E28                     	;# 
  5293  0E29                     	;# 
  5294  0E2A                     	;# 
  5295  0E2B                     	;# 
  5296  0E2C                     	;# 
  5297  0E2D                     	;# 
  5298  0E2E                     	;# 
  5299  0E2F                     	;# 
  5300  0E90                     	;# 
  5301  0E91                     	;# 
  5302  0E92                     	;# 
  5303  0E94                     	;# 
  5304  0E95                     	;# 
  5305  0E9C                     	;# 
  5306  0E9D                     	;# 
  5307  0E9E                     	;# 
  5308  0E9F                     	;# 
  5309  0EA0                     	;# 
  5310  0EA1                     	;# 
  5311  0EA2                     	;# 
  5312  0EA3                     	;# 
  5313  0EA4                     	;# 
  5314  0EA5                     	;# 
  5315  0EA6                     	;# 
  5316  0EA7                     	;# 
  5317  0F0F                     	;# 
  5318  0F10                     	;# 
  5319  0F11                     	;# 
  5320  0F12                     	;# 
  5321  0F13                     	;# 
  5322  0F14                     	;# 
  5323  0F15                     	;# 
  5324  0F16                     	;# 
  5325  0F17                     	;# 
  5326  0F18                     	;# 
  5327  0F19                     	;# 
  5328  0F1A                     	;# 
  5329  0F1B                     	;# 
  5330  0F1C                     	;# 
  5331  0F1D                     	;# 
  5332  0F1E                     	;# 
  5333  0F1F                     	;# 
  5334  0F20                     	;# 
  5335  0F21                     	;# 
  5336  0F22                     	;# 
  5337  0F23                     	;# 
  5338  0F24                     	;# 
  5339  0F25                     	;# 
  5340  0F26                     	;# 
  5341  0F27                     	;# 
  5342  0F28                     	;# 
  5343  0F29                     	;# 
  5344  0F2A                     	;# 
  5345  0F2B                     	;# 
  5346  0F2C                     	;# 
  5347  0F2D                     	;# 
  5348  0F2E                     	;# 
  5349  0F2F                     	;# 
  5350  0F30                     	;# 
  5351  0F31                     	;# 
  5352  0F32                     	;# 
  5353  0F33                     	;# 
  5354  0F34                     	;# 
  5355  0F35                     	;# 
  5356  0F36                     	;# 
  5357  0F37                     	;# 
  5358  0FE4                     	;# 
  5359  0FE5                     	;# 
  5360  0FE6                     	;# 
  5361  0FE7                     	;# 
  5362  0FE8                     	;# 
  5363  0FE9                     	;# 
  5364  0FEA                     	;# 
  5365  0FEB                     	;# 
  5366  0FED                     	;# 
  5367  0FEE                     	;# 
  5368  0FEF                     	;# 
  5369  0000                     	;# 
  5370  0001                     	;# 
  5371  0002                     	;# 
  5372  0003                     	;# 
  5373  0004                     	;# 
  5374  0005                     	;# 
  5375  0006                     	;# 
  5376  0007                     	;# 
  5377  0008                     	;# 
  5378  0009                     	;# 
  5379  000A                     	;# 
  5380  000B                     	;# 
  5381  000C                     	;# 
  5382  000D                     	;# 
  5383  000E                     	;# 
  5384  0010                     	;# 
  5385  0011                     	;# 
  5386  0012                     	;# 
  5387  0013                     	;# 
  5388  0014                     	;# 
  5389  0015                     	;# 
  5390  0015                     	;# 
  5391  0016                     	;# 
  5392  0016                     	;# 
  5393  0017                     	;# 
  5394  0018                     	;# 
  5395  0019                     	;# 
  5396  0019                     	;# 
  5397  001A                     	;# 
  5398  001B                     	;# 
  5399  001C                     	;# 
  5400  001D                     	;# 
  5401  001E                     	;# 
  5402  001F                     	;# 
  5403  008C                     	;# 
  5404  008D                     	;# 
  5405  008E                     	;# 
  5406  0090                     	;# 
  5407  0091                     	;# 
  5408  0092                     	;# 
  5409  0093                     	;# 
  5410  0094                     	;# 
  5411  0097                     	;# 
  5412  009B                     	;# 
  5413  009B                     	;# 
  5414  009C                     	;# 
  5415  009D                     	;# 
  5416  009E                     	;# 
  5417  009F                     	;# 
  5418  010C                     	;# 
  5419  010D                     	;# 
  5420  010E                     	;# 
  5421  0111                     	;# 
  5422  0112                     	;# 
  5423  0113                     	;# 
  5424  0114                     	;# 
  5425  0115                     	;# 
  5426  0116                     	;# 
  5427  0117                     	;# 
  5428  0118                     	;# 
  5429  0119                     	;# 
  5430  018C                     	;# 
  5431  018D                     	;# 
  5432  018E                     	;# 
  5433  0197                     	;# 
  5434  0199                     	;# 
  5435  0199                     	;# 
  5436  0199                     	;# 
  5437  019A                     	;# 
  5438  019A                     	;# 
  5439  019A                     	;# 
  5440  019B                     	;# 
  5441  019B                     	;# 
  5442  019B                     	;# 
  5443  019B                     	;# 
  5444  019B                     	;# 
  5445  019C                     	;# 
  5446  019C                     	;# 
  5447  019C                     	;# 
  5448  019D                     	;# 
  5449  019D                     	;# 
  5450  019D                     	;# 
  5451  019E                     	;# 
  5452  019E                     	;# 
  5453  019E                     	;# 
  5454  019F                     	;# 
  5455  019F                     	;# 
  5456  019F                     	;# 
  5457  019F                     	;# 
  5458  019F                     	;# 
  5459  020C                     	;# 
  5460  020D                     	;# 
  5461  020E                     	;# 
  5462  0211                     	;# 
  5463  0211                     	;# 
  5464  0212                     	;# 
  5465  0212                     	;# 
  5466  0213                     	;# 
  5467  0213                     	;# 
  5468  0214                     	;# 
  5469  0214                     	;# 
  5470  0215                     	;# 
  5471  0215                     	;# 
  5472  0215                     	;# 
  5473  0215                     	;# 
  5474  0216                     	;# 
  5475  0216                     	;# 
  5476  0217                     	;# 
  5477  0217                     	;# 
  5478  0219                     	;# 
  5479  021A                     	;# 
  5480  021B                     	;# 
  5481  021C                     	;# 
  5482  021D                     	;# 
  5483  021D                     	;# 
  5484  021E                     	;# 
  5485  021F                     	;# 
  5486  028C                     	;# 
  5487  028D                     	;# 
  5488  028E                     	;# 
  5489  0291                     	;# 
  5490  0291                     	;# 
  5491  0292                     	;# 
  5492  0293                     	;# 
  5493  0294                     	;# 
  5494  0295                     	;# 
  5495  0295                     	;# 
  5496  0296                     	;# 
  5497  0297                     	;# 
  5498  0298                     	;# 
  5499  029F                     	;# 
  5500  030C                     	;# 
  5501  030D                     	;# 
  5502  030E                     	;# 
  5503  0311                     	;# 
  5504  0311                     	;# 
  5505  0312                     	;# 
  5506  0313                     	;# 
  5507  0314                     	;# 
  5508  0315                     	;# 
  5509  0315                     	;# 
  5510  0316                     	;# 
  5511  0317                     	;# 
  5512  0318                     	;# 
  5513  038C                     	;# 
  5514  038D                     	;# 
  5515  038E                     	;# 
  5516  0391                     	;# 
  5517  0392                     	;# 
  5518  0393                     	;# 
  5519  0394                     	;# 
  5520  0395                     	;# 
  5521  0396                     	;# 
  5522  0397                     	;# 
  5523  0398                     	;# 
  5524  0399                     	;# 
  5525  039A                     	;# 
  5526  039C                     	;# 
  5527  039D                     	;# 
  5528  039E                     	;# 
  5529  039F                     	;# 
  5530  0411                     	;# 
  5531  0411                     	;# 
  5532  0412                     	;# 
  5533  0413                     	;# 
  5534  0414                     	;# 
  5535  0415                     	;# 
  5536  0416                     	;# 
  5537  0417                     	;# 
  5538  0418                     	;# 
  5539  0418                     	;# 
  5540  0419                     	;# 
  5541  041A                     	;# 
  5542  041B                     	;# 
  5543  041C                     	;# 
  5544  041D                     	;# 
  5545  041E                     	;# 
  5546  041F                     	;# 
  5547  0498                     	;# 
  5548  0498                     	;# 
  5549  0499                     	;# 
  5550  049A                     	;# 
  5551  049B                     	;# 
  5552  049B                     	;# 
  5553  049C                     	;# 
  5554  049D                     	;# 
  5555  049E                     	;# 
  5556  049F                     	;# 
  5557  0617                     	;# 
  5558  0618                     	;# 
  5559  0619                     	;# 
  5560  0619                     	;# 
  5561  061A                     	;# 
  5562  061B                     	;# 
  5563  061C                     	;# 
  5564  061C                     	;# 
  5565  061F                     	;# 
  5566  0691                     	;# 
  5567  0692                     	;# 
  5568  0693                     	;# 
  5569  0694                     	;# 
  5570  0695                     	;# 
  5571  0696                     	;# 
  5572  0697                     	;# 
  5573  0698                     	;# 
  5574  0699                     	;# 
  5575  0711                     	;# 
  5576  0712                     	;# 
  5577  0713                     	;# 
  5578  0714                     	;# 
  5579  0715                     	;# 
  5580  0716                     	;# 
  5581  0717                     	;# 
  5582  0718                     	;# 
  5583  0719                     	;# 
  5584  0891                     	;# 
  5585  0891                     	;# 
  5586  0891                     	;# 
  5587  0891                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0892                     	;# 
  5591  0892                     	;# 
  5592  0892                     	;# 
  5593  0893                     	;# 
  5594  0893                     	;# 
  5595  0893                     	;# 
  5596  0893                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0894                     	;# 
  5600  0894                     	;# 
  5601  0894                     	;# 
  5602  0895                     	;# 
  5603  0895                     	;# 
  5604  0895                     	;# 
  5605  0896                     	;# 
  5606  0896                     	;# 
  5607  0896                     	;# 
  5608  089B                     	;# 
  5609  0911                     	;# 
  5610  0912                     	;# 
  5611  0913                     	;# 
  5612  0914                     	;# 
  5613  0915                     	;# 
  5614  0916                     	;# 
  5615  0918                     	;# 
  5616  0919                     	;# 
  5617  091A                     	;# 
  5618  091B                     	;# 
  5619  091C                     	;# 
  5620  091D                     	;# 
  5621  091E                     	;# 
  5622  091F                     	;# 
  5623  0E0F                     	;# 
  5624  0E10                     	;# 
  5625  0E11                     	;# 
  5626  0E12                     	;# 
  5627  0E13                     	;# 
  5628  0E14                     	;# 
  5629  0E15                     	;# 
  5630  0E16                     	;# 
  5631  0E17                     	;# 
  5632  0E18                     	;# 
  5633  0E19                     	;# 
  5634  0E1A                     	;# 
  5635  0E1B                     	;# 
  5636  0E1C                     	;# 
  5637  0E1D                     	;# 
  5638  0E1E                     	;# 
  5639  0E1F                     	;# 
  5640  0E20                     	;# 
  5641  0E21                     	;# 
  5642  0E22                     	;# 
  5643  0E24                     	;# 
  5644  0E25                     	;# 
  5645  0E28                     	;# 
  5646  0E29                     	;# 
  5647  0E2A                     	;# 
  5648  0E2B                     	;# 
  5649  0E2C                     	;# 
  5650  0E2D                     	;# 
  5651  0E2E                     	;# 
  5652  0E2F                     	;# 
  5653  0E90                     	;# 
  5654  0E91                     	;# 
  5655  0E92                     	;# 
  5656  0E94                     	;# 
  5657  0E95                     	;# 
  5658  0E9C                     	;# 
  5659  0E9D                     	;# 
  5660  0E9E                     	;# 
  5661  0E9F                     	;# 
  5662  0EA0                     	;# 
  5663  0EA1                     	;# 
  5664  0EA2                     	;# 
  5665  0EA3                     	;# 
  5666  0EA4                     	;# 
  5667  0EA5                     	;# 
  5668  0EA6                     	;# 
  5669  0EA7                     	;# 
  5670  0F0F                     	;# 
  5671  0F10                     	;# 
  5672  0F11                     	;# 
  5673  0F12                     	;# 
  5674  0F13                     	;# 
  5675  0F14                     	;# 
  5676  0F15                     	;# 
  5677  0F16                     	;# 
  5678  0F17                     	;# 
  5679  0F18                     	;# 
  5680  0F19                     	;# 
  5681  0F1A                     	;# 
  5682  0F1B                     	;# 
  5683  0F1C                     	;# 
  5684  0F1D                     	;# 
  5685  0F1E                     	;# 
  5686  0F1F                     	;# 
  5687  0F20                     	;# 
  5688  0F21                     	;# 
  5689  0F22                     	;# 
  5690  0F23                     	;# 
  5691  0F24                     	;# 
  5692  0F25                     	;# 
  5693  0F26                     	;# 
  5694  0F27                     	;# 
  5695  0F28                     	;# 
  5696  0F29                     	;# 
  5697  0F2A                     	;# 
  5698  0F2B                     	;# 
  5699  0F2C                     	;# 
  5700  0F2D                     	;# 
  5701  0F2E                     	;# 
  5702  0F2F                     	;# 
  5703  0F30                     	;# 
  5704  0F31                     	;# 
  5705  0F32                     	;# 
  5706  0F33                     	;# 
  5707  0F34                     	;# 
  5708  0F35                     	;# 
  5709  0F36                     	;# 
  5710  0F37                     	;# 
  5711  0FE4                     	;# 
  5712  0FE5                     	;# 
  5713  0FE6                     	;# 
  5714  0FE7                     	;# 
  5715  0FE8                     	;# 
  5716  0FE9                     	;# 
  5717  0FEA                     	;# 
  5718  0FEB                     	;# 
  5719  0FED                     	;# 
  5720  0FEE                     	;# 
  5721  0FEF                     	;# 
  5722  0000                     	;# 
  5723  0001                     	;# 
  5724  0002                     	;# 
  5725  0003                     	;# 
  5726  0004                     	;# 
  5727  0005                     	;# 
  5728  0006                     	;# 
  5729  0007                     	;# 
  5730  0008                     	;# 
  5731  0009                     	;# 
  5732  000A                     	;# 
  5733  000B                     	;# 
  5734  000C                     	;# 
  5735  000D                     	;# 
  5736  000E                     	;# 
  5737  0010                     	;# 
  5738  0011                     	;# 
  5739  0012                     	;# 
  5740  0013                     	;# 
  5741  0014                     	;# 
  5742  0015                     	;# 
  5743  0015                     	;# 
  5744  0016                     	;# 
  5745  0016                     	;# 
  5746  0017                     	;# 
  5747  0018                     	;# 
  5748  0019                     	;# 
  5749  0019                     	;# 
  5750  001A                     	;# 
  5751  001B                     	;# 
  5752  001C                     	;# 
  5753  001D                     	;# 
  5754  001E                     	;# 
  5755  001F                     	;# 
  5756  008C                     	;# 
  5757  008D                     	;# 
  5758  008E                     	;# 
  5759  0090                     	;# 
  5760  0091                     	;# 
  5761  0092                     	;# 
  5762  0093                     	;# 
  5763  0094                     	;# 
  5764  0097                     	;# 
  5765  009B                     	;# 
  5766  009B                     	;# 
  5767  009C                     	;# 
  5768  009D                     	;# 
  5769  009E                     	;# 
  5770  009F                     	;# 
  5771  010C                     	;# 
  5772  010D                     	;# 
  5773  010E                     	;# 
  5774  0111                     	;# 
  5775  0112                     	;# 
  5776  0113                     	;# 
  5777  0114                     	;# 
  5778  0115                     	;# 
  5779  0116                     	;# 
  5780  0117                     	;# 
  5781  0118                     	;# 
  5782  0119                     	;# 
  5783  018C                     	;# 
  5784  018D                     	;# 
  5785  018E                     	;# 
  5786  0197                     	;# 
  5787  0199                     	;# 
  5788  0199                     	;# 
  5789  0199                     	;# 
  5790  019A                     	;# 
  5791  019A                     	;# 
  5792  019A                     	;# 
  5793  019B                     	;# 
  5794  019B                     	;# 
  5795  019B                     	;# 
  5796  019B                     	;# 
  5797  019B                     	;# 
  5798  019C                     	;# 
  5799  019C                     	;# 
  5800  019C                     	;# 
  5801  019D                     	;# 
  5802  019D                     	;# 
  5803  019D                     	;# 
  5804  019E                     	;# 
  5805  019E                     	;# 
  5806  019E                     	;# 
  5807  019F                     	;# 
  5808  019F                     	;# 
  5809  019F                     	;# 
  5810  019F                     	;# 
  5811  019F                     	;# 
  5812  020C                     	;# 
  5813  020D                     	;# 
  5814  020E                     	;# 
  5815  0211                     	;# 
  5816  0211                     	;# 
  5817  0212                     	;# 
  5818  0212                     	;# 
  5819  0213                     	;# 
  5820  0213                     	;# 
  5821  0214                     	;# 
  5822  0214                     	;# 
  5823  0215                     	;# 
  5824  0215                     	;# 
  5825  0215                     	;# 
  5826  0215                     	;# 
  5827  0216                     	;# 
  5828  0216                     	;# 
  5829  0217                     	;# 
  5830  0217                     	;# 
  5831  0219                     	;# 
  5832  021A                     	;# 
  5833  021B                     	;# 
  5834  021C                     	;# 
  5835  021D                     	;# 
  5836  021D                     	;# 
  5837  021E                     	;# 
  5838  021F                     	;# 
  5839  028C                     	;# 
  5840  028D                     	;# 
  5841  028E                     	;# 
  5842  0291                     	;# 
  5843  0291                     	;# 
  5844  0292                     	;# 
  5845  0293                     	;# 
  5846  0294                     	;# 
  5847  0295                     	;# 
  5848  0295                     	;# 
  5849  0296                     	;# 
  5850  0297                     	;# 
  5851  0298                     	;# 
  5852  029F                     	;# 
  5853  030C                     	;# 
  5854  030D                     	;# 
  5855  030E                     	;# 
  5856  0311                     	;# 
  5857  0311                     	;# 
  5858  0312                     	;# 
  5859  0313                     	;# 
  5860  0314                     	;# 
  5861  0315                     	;# 
  5862  0315                     	;# 
  5863  0316                     	;# 
  5864  0317                     	;# 
  5865  0318                     	;# 
  5866  038C                     	;# 
  5867  038D                     	;# 
  5868  038E                     	;# 
  5869  0391                     	;# 
  5870  0392                     	;# 
  5871  0393                     	;# 
  5872  0394                     	;# 
  5873  0395                     	;# 
  5874  0396                     	;# 
  5875  0397                     	;# 
  5876  0398                     	;# 
  5877  0399                     	;# 
  5878  039A                     	;# 
  5879  039C                     	;# 
  5880  039D                     	;# 
  5881  039E                     	;# 
  5882  039F                     	;# 
  5883  0411                     	;# 
  5884  0411                     	;# 
  5885  0412                     	;# 
  5886  0413                     	;# 
  5887  0414                     	;# 
  5888  0415                     	;# 
  5889  0416                     	;# 
  5890  0417                     	;# 
  5891  0418                     	;# 
  5892  0418                     	;# 
  5893  0419                     	;# 
  5894  041A                     	;# 
  5895  041B                     	;# 
  5896  041C                     	;# 
  5897  041D                     	;# 
  5898  041E                     	;# 
  5899  041F                     	;# 
  5900  0498                     	;# 
  5901  0498                     	;# 
  5902  0499                     	;# 
  5903  049A                     	;# 
  5904  049B                     	;# 
  5905  049B                     	;# 
  5906  049C                     	;# 
  5907  049D                     	;# 
  5908  049E                     	;# 
  5909  049F                     	;# 
  5910  0617                     	;# 
  5911  0618                     	;# 
  5912  0619                     	;# 
  5913  0619                     	;# 
  5914  061A                     	;# 
  5915  061B                     	;# 
  5916  061C                     	;# 
  5917  061C                     	;# 
  5918  061F                     	;# 
  5919  0691                     	;# 
  5920  0692                     	;# 
  5921  0693                     	;# 
  5922  0694                     	;# 
  5923  0695                     	;# 
  5924  0696                     	;# 
  5925  0697                     	;# 
  5926  0698                     	;# 
  5927  0699                     	;# 
  5928  0711                     	;# 
  5929  0712                     	;# 
  5930  0713                     	;# 
  5931  0714                     	;# 
  5932  0715                     	;# 
  5933  0716                     	;# 
  5934  0717                     	;# 
  5935  0718                     	;# 
  5936  0719                     	;# 
  5937  0891                     	;# 
  5938  0891                     	;# 
  5939  0891                     	;# 
  5940  0891                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0892                     	;# 
  5944  0892                     	;# 
  5945  0892                     	;# 
  5946  0893                     	;# 
  5947  0893                     	;# 
  5948  0893                     	;# 
  5949  0893                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0894                     	;# 
  5953  0894                     	;# 
  5954  0894                     	;# 
  5955  0895                     	;# 
  5956  0895                     	;# 
  5957  0895                     	;# 
  5958  0896                     	;# 
  5959  0896                     	;# 
  5960  0896                     	;# 
  5961  089B                     	;# 
  5962  0911                     	;# 
  5963  0912                     	;# 
  5964  0913                     	;# 
  5965  0914                     	;# 
  5966  0915                     	;# 
  5967  0916                     	;# 
  5968  0918                     	;# 
  5969  0919                     	;# 
  5970  091A                     	;# 
  5971  091B                     	;# 
  5972  091C                     	;# 
  5973  091D                     	;# 
  5974  091E                     	;# 
  5975  091F                     	;# 
  5976  0E0F                     	;# 
  5977  0E10                     	;# 
  5978  0E11                     	;# 
  5979  0E12                     	;# 
  5980  0E13                     	;# 
  5981  0E14                     	;# 
  5982  0E15                     	;# 
  5983  0E16                     	;# 
  5984  0E17                     	;# 
  5985  0E18                     	;# 
  5986  0E19                     	;# 
  5987  0E1A                     	;# 
  5988  0E1B                     	;# 
  5989  0E1C                     	;# 
  5990  0E1D                     	;# 
  5991  0E1E                     	;# 
  5992  0E1F                     	;# 
  5993  0E20                     	;# 
  5994  0E21                     	;# 
  5995  0E22                     	;# 
  5996  0E24                     	;# 
  5997  0E25                     	;# 
  5998  0E28                     	;# 
  5999  0E29                     	;# 
  6000  0E2A                     	;# 
  6001  0E2B                     	;# 
  6002  0E2C                     	;# 
  6003  0E2D                     	;# 
  6004  0E2E                     	;# 
  6005  0E2F                     	;# 
  6006  0E90                     	;# 
  6007  0E91                     	;# 
  6008  0E92                     	;# 
  6009  0E94                     	;# 
  6010  0E95                     	;# 
  6011  0E9C                     	;# 
  6012  0E9D                     	;# 
  6013  0E9E                     	;# 
  6014  0E9F                     	;# 
  6015  0EA0                     	;# 
  6016  0EA1                     	;# 
  6017  0EA2                     	;# 
  6018  0EA3                     	;# 
  6019  0EA4                     	;# 
  6020  0EA5                     	;# 
  6021  0EA6                     	;# 
  6022  0EA7                     	;# 
  6023  0F0F                     	;# 
  6024  0F10                     	;# 
  6025  0F11                     	;# 
  6026  0F12                     	;# 
  6027  0F13                     	;# 
  6028  0F14                     	;# 
  6029  0F15                     	;# 
  6030  0F16                     	;# 
  6031  0F17                     	;# 
  6032  0F18                     	;# 
  6033  0F19                     	;# 
  6034  0F1A                     	;# 
  6035  0F1B                     	;# 
  6036  0F1C                     	;# 
  6037  0F1D                     	;# 
  6038  0F1E                     	;# 
  6039  0F1F                     	;# 
  6040  0F20                     	;# 
  6041  0F21                     	;# 
  6042  0F22                     	;# 
  6043  0F23                     	;# 
  6044  0F24                     	;# 
  6045  0F25                     	;# 
  6046  0F26                     	;# 
  6047  0F27                     	;# 
  6048  0F28                     	;# 
  6049  0F29                     	;# 
  6050  0F2A                     	;# 
  6051  0F2B                     	;# 
  6052  0F2C                     	;# 
  6053  0F2D                     	;# 
  6054  0F2E                     	;# 
  6055  0F2F                     	;# 
  6056  0F30                     	;# 
  6057  0F31                     	;# 
  6058  0F32                     	;# 
  6059  0F33                     	;# 
  6060  0F34                     	;# 
  6061  0F35                     	;# 
  6062  0F36                     	;# 
  6063  0F37                     	;# 
  6064  0FE4                     	;# 
  6065  0FE5                     	;# 
  6066  0FE6                     	;# 
  6067  0FE7                     	;# 
  6068  0FE8                     	;# 
  6069  0FE9                     	;# 
  6070  0FEA                     	;# 
  6071  0FEB                     	;# 
  6072  0FED                     	;# 
  6073  0FEE                     	;# 
  6074  0FEF                     	;# 
  6075  0000                     	;# 
  6076  0001                     	;# 
  6077  0002                     	;# 
  6078  0003                     	;# 
  6079  0004                     	;# 
  6080  0005                     	;# 
  6081  0006                     	;# 
  6082  0007                     	;# 
  6083  0008                     	;# 
  6084  0009                     	;# 
  6085  000A                     	;# 
  6086  000B                     	;# 
  6087  000C                     	;# 
  6088  000D                     	;# 
  6089  000E                     	;# 
  6090  0010                     	;# 
  6091  0011                     	;# 
  6092  0012                     	;# 
  6093  0013                     	;# 
  6094  0014                     	;# 
  6095  0015                     	;# 
  6096  0015                     	;# 
  6097  0016                     	;# 
  6098  0016                     	;# 
  6099  0017                     	;# 
  6100  0018                     	;# 
  6101  0019                     	;# 
  6102  0019                     	;# 
  6103  001A                     	;# 
  6104  001B                     	;# 
  6105  001C                     	;# 
  6106  001D                     	;# 
  6107  001E                     	;# 
  6108  001F                     	;# 
  6109  008C                     	;# 
  6110  008D                     	;# 
  6111  008E                     	;# 
  6112  0090                     	;# 
  6113  0091                     	;# 
  6114  0092                     	;# 
  6115  0093                     	;# 
  6116  0094                     	;# 
  6117  0097                     	;# 
  6118  009B                     	;# 
  6119  009B                     	;# 
  6120  009C                     	;# 
  6121  009D                     	;# 
  6122  009E                     	;# 
  6123  009F                     	;# 
  6124  010C                     	;# 
  6125  010D                     	;# 
  6126  010E                     	;# 
  6127  0111                     	;# 
  6128  0112                     	;# 
  6129  0113                     	;# 
  6130  0114                     	;# 
  6131  0115                     	;# 
  6132  0116                     	;# 
  6133  0117                     	;# 
  6134  0118                     	;# 
  6135  0119                     	;# 
  6136  018C                     	;# 
  6137  018D                     	;# 
  6138  018E                     	;# 
  6139  0197                     	;# 
  6140  0199                     	;# 
  6141  0199                     	;# 
  6142  0199                     	;# 
  6143  019A                     	;# 
  6144  019A                     	;# 
  6145  019A                     	;# 
  6146  019B                     	;# 
  6147  019B                     	;# 
  6148  019B                     	;# 
  6149  019B                     	;# 
  6150  019B                     	;# 
  6151  019C                     	;# 
  6152  019C                     	;# 
  6153  019C                     	;# 
  6154  019D                     	;# 
  6155  019D                     	;# 
  6156  019D                     	;# 
  6157  019E                     	;# 
  6158  019E                     	;# 
  6159  019E                     	;# 
  6160  019F                     	;# 
  6161  019F                     	;# 
  6162  019F                     	;# 
  6163  019F                     	;# 
  6164  019F                     	;# 
  6165  020C                     	;# 
  6166  020D                     	;# 
  6167  020E                     	;# 
  6168  0211                     	;# 
  6169  0211                     	;# 
  6170  0212                     	;# 
  6171  0212                     	;# 
  6172  0213                     	;# 
  6173  0213                     	;# 
  6174  0214                     	;# 
  6175  0214                     	;# 
  6176  0215                     	;# 
  6177  0215                     	;# 
  6178  0215                     	;# 
  6179  0215                     	;# 
  6180  0216                     	;# 
  6181  0216                     	;# 
  6182  0217                     	;# 
  6183  0217                     	;# 
  6184  0219                     	;# 
  6185  021A                     	;# 
  6186  021B                     	;# 
  6187  021C                     	;# 
  6188  021D                     	;# 
  6189  021D                     	;# 
  6190  021E                     	;# 
  6191  021F                     	;# 
  6192  028C                     	;# 
  6193  028D                     	;# 
  6194  028E                     	;# 
  6195  0291                     	;# 
  6196  0291                     	;# 
  6197  0292                     	;# 
  6198  0293                     	;# 
  6199  0294                     	;# 
  6200  0295                     	;# 
  6201  0295                     	;# 
  6202  0296                     	;# 
  6203  0297                     	;# 
  6204  0298                     	;# 
  6205  029F                     	;# 
  6206  030C                     	;# 
  6207  030D                     	;# 
  6208  030E                     	;# 
  6209  0311                     	;# 
  6210  0311                     	;# 
  6211  0312                     	;# 
  6212  0313                     	;# 
  6213  0314                     	;# 
  6214  0315                     	;# 
  6215  0315                     	;# 
  6216  0316                     	;# 
  6217  0317                     	;# 
  6218  0318                     	;# 
  6219  038C                     	;# 
  6220  038D                     	;# 
  6221  038E                     	;# 
  6222  0391                     	;# 
  6223  0392                     	;# 
  6224  0393                     	;# 
  6225  0394                     	;# 
  6226  0395                     	;# 
  6227  0396                     	;# 
  6228  0397                     	;# 
  6229  0398                     	;# 
  6230  0399                     	;# 
  6231  039A                     	;# 
  6232  039C                     	;# 
  6233  039D                     	;# 
  6234  039E                     	;# 
  6235  039F                     	;# 
  6236  0411                     	;# 
  6237  0411                     	;# 
  6238  0412                     	;# 
  6239  0413                     	;# 
  6240  0414                     	;# 
  6241  0415                     	;# 
  6242  0416                     	;# 
  6243  0417                     	;# 
  6244  0418                     	;# 
  6245  0418                     	;# 
  6246  0419                     	;# 
  6247  041A                     	;# 
  6248  041B                     	;# 
  6249  041C                     	;# 
  6250  041D                     	;# 
  6251  041E                     	;# 
  6252  041F                     	;# 
  6253  0498                     	;# 
  6254  0498                     	;# 
  6255  0499                     	;# 
  6256  049A                     	;# 
  6257  049B                     	;# 
  6258  049B                     	;# 
  6259  049C                     	;# 
  6260  049D                     	;# 
  6261  049E                     	;# 
  6262  049F                     	;# 
  6263  0617                     	;# 
  6264  0618                     	;# 
  6265  0619                     	;# 
  6266  0619                     	;# 
  6267  061A                     	;# 
  6268  061B                     	;# 
  6269  061C                     	;# 
  6270  061C                     	;# 
  6271  061F                     	;# 
  6272  0691                     	;# 
  6273  0692                     	;# 
  6274  0693                     	;# 
  6275  0694                     	;# 
  6276  0695                     	;# 
  6277  0696                     	;# 
  6278  0697                     	;# 
  6279  0698                     	;# 
  6280  0699                     	;# 
  6281  0711                     	;# 
  6282  0712                     	;# 
  6283  0713                     	;# 
  6284  0714                     	;# 
  6285  0715                     	;# 
  6286  0716                     	;# 
  6287  0717                     	;# 
  6288  0718                     	;# 
  6289  0719                     	;# 
  6290  0891                     	;# 
  6291  0891                     	;# 
  6292  0891                     	;# 
  6293  0891                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0892                     	;# 
  6297  0892                     	;# 
  6298  0892                     	;# 
  6299  0893                     	;# 
  6300  0893                     	;# 
  6301  0893                     	;# 
  6302  0893                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0894                     	;# 
  6306  0894                     	;# 
  6307  0894                     	;# 
  6308  0895                     	;# 
  6309  0895                     	;# 
  6310  0895                     	;# 
  6311  0896                     	;# 
  6312  0896                     	;# 
  6313  0896                     	;# 
  6314  089B                     	;# 
  6315  0911                     	;# 
  6316  0912                     	;# 
  6317  0913                     	;# 
  6318  0914                     	;# 
  6319  0915                     	;# 
  6320  0916                     	;# 
  6321  0918                     	;# 
  6322  0919                     	;# 
  6323  091A                     	;# 
  6324  091B                     	;# 
  6325  091C                     	;# 
  6326  091D                     	;# 
  6327  091E                     	;# 
  6328  091F                     	;# 
  6329  0E0F                     	;# 
  6330  0E10                     	;# 
  6331  0E11                     	;# 
  6332  0E12                     	;# 
  6333  0E13                     	;# 
  6334  0E14                     	;# 
  6335  0E15                     	;# 
  6336  0E16                     	;# 
  6337  0E17                     	;# 
  6338  0E18                     	;# 
  6339  0E19                     	;# 
  6340  0E1A                     	;# 
  6341  0E1B                     	;# 
  6342  0E1C                     	;# 
  6343  0E1D                     	;# 
  6344  0E1E                     	;# 
  6345  0E1F                     	;# 
  6346  0E20                     	;# 
  6347  0E21                     	;# 
  6348  0E22                     	;# 
  6349  0E24                     	;# 
  6350  0E25                     	;# 
  6351  0E28                     	;# 
  6352  0E29                     	;# 
  6353  0E2A                     	;# 
  6354  0E2B                     	;# 
  6355  0E2C                     	;# 
  6356  0E2D                     	;# 
  6357  0E2E                     	;# 
  6358  0E2F                     	;# 
  6359  0E90                     	;# 
  6360  0E91                     	;# 
  6361  0E92                     	;# 
  6362  0E94                     	;# 
  6363  0E95                     	;# 
  6364  0E9C                     	;# 
  6365  0E9D                     	;# 
  6366  0E9E                     	;# 
  6367  0E9F                     	;# 
  6368  0EA0                     	;# 
  6369  0EA1                     	;# 
  6370  0EA2                     	;# 
  6371  0EA3                     	;# 
  6372  0EA4                     	;# 
  6373  0EA5                     	;# 
  6374  0EA6                     	;# 
  6375  0EA7                     	;# 
  6376  0F0F                     	;# 
  6377  0F10                     	;# 
  6378  0F11                     	;# 
  6379  0F12                     	;# 
  6380  0F13                     	;# 
  6381  0F14                     	;# 
  6382  0F15                     	;# 
  6383  0F16                     	;# 
  6384  0F17                     	;# 
  6385  0F18                     	;# 
  6386  0F19                     	;# 
  6387  0F1A                     	;# 
  6388  0F1B                     	;# 
  6389  0F1C                     	;# 
  6390  0F1D                     	;# 
  6391  0F1E                     	;# 
  6392  0F1F                     	;# 
  6393  0F20                     	;# 
  6394  0F21                     	;# 
  6395  0F22                     	;# 
  6396  0F23                     	;# 
  6397  0F24                     	;# 
  6398  0F25                     	;# 
  6399  0F26                     	;# 
  6400  0F27                     	;# 
  6401  0F28                     	;# 
  6402  0F29                     	;# 
  6403  0F2A                     	;# 
  6404  0F2B                     	;# 
  6405  0F2C                     	;# 
  6406  0F2D                     	;# 
  6407  0F2E                     	;# 
  6408  0F2F                     	;# 
  6409  0F30                     	;# 
  6410  0F31                     	;# 
  6411  0F32                     	;# 
  6412  0F33                     	;# 
  6413  0F34                     	;# 
  6414  0F35                     	;# 
  6415  0F36                     	;# 
  6416  0F37                     	;# 
  6417  0FE4                     	;# 
  6418  0FE5                     	;# 
  6419  0FE6                     	;# 
  6420  0FE7                     	;# 
  6421  0FE8                     	;# 
  6422  0FE9                     	;# 
  6423  0FEA                     	;# 
  6424  0FEB                     	;# 
  6425  0FED                     	;# 
  6426  0FEE                     	;# 
  6427  0FEF                     	;# 
  6428  0000                     	;# 
  6429  0001                     	;# 
  6430  0002                     	;# 
  6431  0003                     	;# 
  6432  0004                     	;# 
  6433  0005                     	;# 
  6434  0006                     	;# 
  6435  0007                     	;# 
  6436  0008                     	;# 
  6437  0009                     	;# 
  6438  000A                     	;# 
  6439  000B                     	;# 
  6440  000C                     	;# 
  6441  000D                     	;# 
  6442  000E                     	;# 
  6443  0010                     	;# 
  6444  0011                     	;# 
  6445  0012                     	;# 
  6446  0013                     	;# 
  6447  0014                     	;# 
  6448  0015                     	;# 
  6449  0015                     	;# 
  6450  0016                     	;# 
  6451  0016                     	;# 
  6452  0017                     	;# 
  6453  0018                     	;# 
  6454  0019                     	;# 
  6455  0019                     	;# 
  6456  001A                     	;# 
  6457  001B                     	;# 
  6458  001C                     	;# 
  6459  001D                     	;# 
  6460  001E                     	;# 
  6461  001F                     	;# 
  6462  008C                     	;# 
  6463  008D                     	;# 
  6464  008E                     	;# 
  6465  0090                     	;# 
  6466  0091                     	;# 
  6467  0092                     	;# 
  6468  0093                     	;# 
  6469  0094                     	;# 
  6470  0097                     	;# 
  6471  009B                     	;# 
  6472  009B                     	;# 
  6473  009C                     	;# 
  6474  009D                     	;# 
  6475  009E                     	;# 
  6476  009F                     	;# 
  6477  010C                     	;# 
  6478  010D                     	;# 
  6479  010E                     	;# 
  6480  0111                     	;# 
  6481  0112                     	;# 
  6482  0113                     	;# 
  6483  0114                     	;# 
  6484  0115                     	;# 
  6485  0116                     	;# 
  6486  0117                     	;# 
  6487  0118                     	;# 
  6488  0119                     	;# 
  6489  018C                     	;# 
  6490  018D                     	;# 
  6491  018E                     	;# 
  6492  0197                     	;# 
  6493  0199                     	;# 
  6494  0199                     	;# 
  6495  0199                     	;# 
  6496  019A                     	;# 
  6497  019A                     	;# 
  6498  019A                     	;# 
  6499  019B                     	;# 
  6500  019B                     	;# 
  6501  019B                     	;# 
  6502  019B                     	;# 
  6503  019B                     	;# 
  6504  019C                     	;# 
  6505  019C                     	;# 
  6506  019C                     	;# 
  6507  019D                     	;# 
  6508  019D                     	;# 
  6509  019D                     	;# 
  6510  019E                     	;# 
  6511  019E                     	;# 
  6512  019E                     	;# 
  6513  019F                     	;# 
  6514  019F                     	;# 
  6515  019F                     	;# 
  6516  019F                     	;# 
  6517  019F                     	;# 
  6518  020C                     	;# 
  6519  020D                     	;# 
  6520  020E                     	;# 
  6521  0211                     	;# 
  6522  0211                     	;# 
  6523  0212                     	;# 
  6524  0212                     	;# 
  6525  0213                     	;# 
  6526  0213                     	;# 
  6527  0214                     	;# 
  6528  0214                     	;# 
  6529  0215                     	;# 
  6530  0215                     	;# 
  6531  0215                     	;# 
  6532  0215                     	;# 
  6533  0216                     	;# 
  6534  0216                     	;# 
  6535  0217                     	;# 
  6536  0217                     	;# 
  6537  0219                     	;# 
  6538  021A                     	;# 
  6539  021B                     	;# 
  6540  021C                     	;# 
  6541  021D                     	;# 
  6542  021D                     	;# 
  6543  021E                     	;# 
  6544  021F                     	;# 
  6545  028C                     	;# 
  6546  028D                     	;# 
  6547  028E                     	;# 
  6548  0291                     	;# 
  6549  0291                     	;# 
  6550  0292                     	;# 
  6551  0293                     	;# 
  6552  0294                     	;# 
  6553  0295                     	;# 
  6554  0295                     	;# 
  6555  0296                     	;# 
  6556  0297                     	;# 
  6557  0298                     	;# 
  6558  029F                     	;# 
  6559  030C                     	;# 
  6560  030D                     	;# 
  6561  030E                     	;# 
  6562  0311                     	;# 
  6563  0311                     	;# 
  6564  0312                     	;# 
  6565  0313                     	;# 
  6566  0314                     	;# 
  6567  0315                     	;# 
  6568  0315                     	;# 
  6569  0316                     	;# 
  6570  0317                     	;# 
  6571  0318                     	;# 
  6572  038C                     	;# 
  6573  038D                     	;# 
  6574  038E                     	;# 
  6575  0391                     	;# 
  6576  0392                     	;# 
  6577  0393                     	;# 
  6578  0394                     	;# 
  6579  0395                     	;# 
  6580  0396                     	;# 
  6581  0397                     	;# 
  6582  0398                     	;# 
  6583  0399                     	;# 
  6584  039A                     	;# 
  6585  039C                     	;# 
  6586  039D                     	;# 
  6587  039E                     	;# 
  6588  039F                     	;# 
  6589  0411                     	;# 
  6590  0411                     	;# 
  6591  0412                     	;# 
  6592  0413                     	;# 
  6593  0414                     	;# 
  6594  0415                     	;# 
  6595  0416                     	;# 
  6596  0417                     	;# 
  6597  0418                     	;# 
  6598  0418                     	;# 
  6599  0419                     	;# 
  6600  041A                     	;# 
  6601  041B                     	;# 
  6602  041C                     	;# 
  6603  041D                     	;# 
  6604  041E                     	;# 
  6605  041F                     	;# 
  6606  0498                     	;# 
  6607  0498                     	;# 
  6608  0499                     	;# 
  6609  049A                     	;# 
  6610  049B                     	;# 
  6611  049B                     	;# 
  6612  049C                     	;# 
  6613  049D                     	;# 
  6614  049E                     	;# 
  6615  049F                     	;# 
  6616  0617                     	;# 
  6617  0618                     	;# 
  6618  0619                     	;# 
  6619  0619                     	;# 
  6620  061A                     	;# 
  6621  061B                     	;# 
  6622  061C                     	;# 
  6623  061C                     	;# 
  6624  061F                     	;# 
  6625  0691                     	;# 
  6626  0692                     	;# 
  6627  0693                     	;# 
  6628  0694                     	;# 
  6629  0695                     	;# 
  6630  0696                     	;# 
  6631  0697                     	;# 
  6632  0698                     	;# 
  6633  0699                     	;# 
  6634  0711                     	;# 
  6635  0712                     	;# 
  6636  0713                     	;# 
  6637  0714                     	;# 
  6638  0715                     	;# 
  6639  0716                     	;# 
  6640  0717                     	;# 
  6641  0718                     	;# 
  6642  0719                     	;# 
  6643  0891                     	;# 
  6644  0891                     	;# 
  6645  0891                     	;# 
  6646  0891                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0892                     	;# 
  6650  0892                     	;# 
  6651  0892                     	;# 
  6652  0893                     	;# 
  6653  0893                     	;# 
  6654  0893                     	;# 
  6655  0893                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0894                     	;# 
  6659  0894                     	;# 
  6660  0894                     	;# 
  6661  0895                     	;# 
  6662  0895                     	;# 
  6663  0895                     	;# 
  6664  0896                     	;# 
  6665  0896                     	;# 
  6666  0896                     	;# 
  6667  089B                     	;# 
  6668  0911                     	;# 
  6669  0912                     	;# 
  6670  0913                     	;# 
  6671  0914                     	;# 
  6672  0915                     	;# 
  6673  0916                     	;# 
  6674  0918                     	;# 
  6675  0919                     	;# 
  6676  091A                     	;# 
  6677  091B                     	;# 
  6678  091C                     	;# 
  6679  091D                     	;# 
  6680  091E                     	;# 
  6681  091F                     	;# 
  6682  0E0F                     	;# 
  6683  0E10                     	;# 
  6684  0E11                     	;# 
  6685  0E12                     	;# 
  6686  0E13                     	;# 
  6687  0E14                     	;# 
  6688  0E15                     	;# 
  6689  0E16                     	;# 
  6690  0E17                     	;# 
  6691  0E18                     	;# 
  6692  0E19                     	;# 
  6693  0E1A                     	;# 
  6694  0E1B                     	;# 
  6695  0E1C                     	;# 
  6696  0E1D                     	;# 
  6697  0E1E                     	;# 
  6698  0E1F                     	;# 
  6699  0E20                     	;# 
  6700  0E21                     	;# 
  6701  0E22                     	;# 
  6702  0E24                     	;# 
  6703  0E25                     	;# 
  6704  0E28                     	;# 
  6705  0E29                     	;# 
  6706  0E2A                     	;# 
  6707  0E2B                     	;# 
  6708  0E2C                     	;# 
  6709  0E2D                     	;# 
  6710  0E2E                     	;# 
  6711  0E2F                     	;# 
  6712  0E90                     	;# 
  6713  0E91                     	;# 
  6714  0E92                     	;# 
  6715  0E94                     	;# 
  6716  0E95                     	;# 
  6717  0E9C                     	;# 
  6718  0E9D                     	;# 
  6719  0E9E                     	;# 
  6720  0E9F                     	;# 
  6721  0EA0                     	;# 
  6722  0EA1                     	;# 
  6723  0EA2                     	;# 
  6724  0EA3                     	;# 
  6725  0EA4                     	;# 
  6726  0EA5                     	;# 
  6727  0EA6                     	;# 
  6728  0EA7                     	;# 
  6729  0F0F                     	;# 
  6730  0F10                     	;# 
  6731  0F11                     	;# 
  6732  0F12                     	;# 
  6733  0F13                     	;# 
  6734  0F14                     	;# 
  6735  0F15                     	;# 
  6736  0F16                     	;# 
  6737  0F17                     	;# 
  6738  0F18                     	;# 
  6739  0F19                     	;# 
  6740  0F1A                     	;# 
  6741  0F1B                     	;# 
  6742  0F1C                     	;# 
  6743  0F1D                     	;# 
  6744  0F1E                     	;# 
  6745  0F1F                     	;# 
  6746  0F20                     	;# 
  6747  0F21                     	;# 
  6748  0F22                     	;# 
  6749  0F23                     	;# 
  6750  0F24                     	;# 
  6751  0F25                     	;# 
  6752  0F26                     	;# 
  6753  0F27                     	;# 
  6754  0F28                     	;# 
  6755  0F29                     	;# 
  6756  0F2A                     	;# 
  6757  0F2B                     	;# 
  6758  0F2C                     	;# 
  6759  0F2D                     	;# 
  6760  0F2E                     	;# 
  6761  0F2F                     	;# 
  6762  0F30                     	;# 
  6763  0F31                     	;# 
  6764  0F32                     	;# 
  6765  0F33                     	;# 
  6766  0F34                     	;# 
  6767  0F35                     	;# 
  6768  0F36                     	;# 
  6769  0F37                     	;# 
  6770  0FE4                     	;# 
  6771  0FE5                     	;# 
  6772  0FE6                     	;# 
  6773  0FE7                     	;# 
  6774  0FE8                     	;# 
  6775  0FE9                     	;# 
  6776  0FEA                     	;# 
  6777  0FEB                     	;# 
  6778  0FED                     	;# 
  6779  0FEE                     	;# 
  6780  0FEF                     	;# 
  6781  0000                     	;# 
  6782  0001                     	;# 
  6783  0002                     	;# 
  6784  0003                     	;# 
  6785  0004                     	;# 
  6786  0005                     	;# 
  6787  0006                     	;# 
  6788  0007                     	;# 
  6789  0008                     	;# 
  6790  0009                     	;# 
  6791  000A                     	;# 
  6792  000B                     	;# 
  6793  000C                     	;# 
  6794  000D                     	;# 
  6795  000E                     	;# 
  6796  0010                     	;# 
  6797  0011                     	;# 
  6798  0012                     	;# 
  6799  0013                     	;# 
  6800  0014                     	;# 
  6801  0015                     	;# 
  6802  0015                     	;# 
  6803  0016                     	;# 
  6804  0016                     	;# 
  6805  0017                     	;# 
  6806  0018                     	;# 
  6807  0019                     	;# 
  6808  0019                     	;# 
  6809  001A                     	;# 
  6810  001B                     	;# 
  6811  001C                     	;# 
  6812  001D                     	;# 
  6813  001E                     	;# 
  6814  001F                     	;# 
  6815  008C                     	;# 
  6816  008D                     	;# 
  6817  008E                     	;# 
  6818  0090                     	;# 
  6819  0091                     	;# 
  6820  0092                     	;# 
  6821  0093                     	;# 
  6822  0094                     	;# 
  6823  0097                     	;# 
  6824  009B                     	;# 
  6825  009B                     	;# 
  6826  009C                     	;# 
  6827  009D                     	;# 
  6828  009E                     	;# 
  6829  009F                     	;# 
  6830  010C                     	;# 
  6831  010D                     	;# 
  6832  010E                     	;# 
  6833  0111                     	;# 
  6834  0112                     	;# 
  6835  0113                     	;# 
  6836  0114                     	;# 
  6837  0115                     	;# 
  6838  0116                     	;# 
  6839  0117                     	;# 
  6840  0118                     	;# 
  6841  0119                     	;# 
  6842  018C                     	;# 
  6843  018D                     	;# 
  6844  018E                     	;# 
  6845  0197                     	;# 
  6846  0199                     	;# 
  6847  0199                     	;# 
  6848  0199                     	;# 
  6849  019A                     	;# 
  6850  019A                     	;# 
  6851  019A                     	;# 
  6852  019B                     	;# 
  6853  019B                     	;# 
  6854  019B                     	;# 
  6855  019B                     	;# 
  6856  019B                     	;# 
  6857  019C                     	;# 
  6858  019C                     	;# 
  6859  019C                     	;# 
  6860  019D                     	;# 
  6861  019D                     	;# 
  6862  019D                     	;# 
  6863  019E                     	;# 
  6864  019E                     	;# 
  6865  019E                     	;# 
  6866  019F                     	;# 
  6867  019F                     	;# 
  6868  019F                     	;# 
  6869  019F                     	;# 
  6870  019F                     	;# 
  6871  020C                     	;# 
  6872  020D                     	;# 
  6873  020E                     	;# 
  6874  0211                     	;# 
  6875  0211                     	;# 
  6876  0212                     	;# 
  6877  0212                     	;# 
  6878  0213                     	;# 
  6879  0213                     	;# 
  6880  0214                     	;# 
  6881  0214                     	;# 
  6882  0215                     	;# 
  6883  0215                     	;# 
  6884  0215                     	;# 
  6885  0215                     	;# 
  6886  0216                     	;# 
  6887  0216                     	;# 
  6888  0217                     	;# 
  6889  0217                     	;# 
  6890  0219                     	;# 
  6891  021A                     	;# 
  6892  021B                     	;# 
  6893  021C                     	;# 
  6894  021D                     	;# 
  6895  021D                     	;# 
  6896  021E                     	;# 
  6897  021F                     	;# 
  6898  028C                     	;# 
  6899  028D                     	;# 
  6900  028E                     	;# 
  6901  0291                     	;# 
  6902  0291                     	;# 
  6903  0292                     	;# 
  6904  0293                     	;# 
  6905  0294                     	;# 
  6906  0295                     	;# 
  6907  0295                     	;# 
  6908  0296                     	;# 
  6909  0297                     	;# 
  6910  0298                     	;# 
  6911  029F                     	;# 
  6912  030C                     	;# 
  6913  030D                     	;# 
  6914  030E                     	;# 
  6915  0311                     	;# 
  6916  0311                     	;# 
  6917  0312                     	;# 
  6918  0313                     	;# 
  6919  0314                     	;# 
  6920  0315                     	;# 
  6921  0315                     	;# 
  6922  0316                     	;# 
  6923  0317                     	;# 
  6924  0318                     	;# 
  6925  038C                     	;# 
  6926  038D                     	;# 
  6927  038E                     	;# 
  6928  0391                     	;# 
  6929  0392                     	;# 
  6930  0393                     	;# 
  6931  0394                     	;# 
  6932  0395                     	;# 
  6933  0396                     	;# 
  6934  0397                     	;# 
  6935  0398                     	;# 
  6936  0399                     	;# 
  6937  039A                     	;# 
  6938  039C                     	;# 
  6939  039D                     	;# 
  6940  039E                     	;# 
  6941  039F                     	;# 
  6942  0411                     	;# 
  6943  0411                     	;# 
  6944  0412                     	;# 
  6945  0413                     	;# 
  6946  0414                     	;# 
  6947  0415                     	;# 
  6948  0416                     	;# 
  6949  0417                     	;# 
  6950  0418                     	;# 
  6951  0418                     	;# 
  6952  0419                     	;# 
  6953  041A                     	;# 
  6954  041B                     	;# 
  6955  041C                     	;# 
  6956  041D                     	;# 
  6957  041E                     	;# 
  6958  041F                     	;# 
  6959  0498                     	;# 
  6960  0498                     	;# 
  6961  0499                     	;# 
  6962  049A                     	;# 
  6963  049B                     	;# 
  6964  049B                     	;# 
  6965  049C                     	;# 
  6966  049D                     	;# 
  6967  049E                     	;# 
  6968  049F                     	;# 
  6969  0617                     	;# 
  6970  0618                     	;# 
  6971  0619                     	;# 
  6972  0619                     	;# 
  6973  061A                     	;# 
  6974  061B                     	;# 
  6975  061C                     	;# 
  6976  061C                     	;# 
  6977  061F                     	;# 
  6978  0691                     	;# 
  6979  0692                     	;# 
  6980  0693                     	;# 
  6981  0694                     	;# 
  6982  0695                     	;# 
  6983  0696                     	;# 
  6984  0697                     	;# 
  6985  0698                     	;# 
  6986  0699                     	;# 
  6987  0711                     	;# 
  6988  0712                     	;# 
  6989  0713                     	;# 
  6990  0714                     	;# 
  6991  0715                     	;# 
  6992  0716                     	;# 
  6993  0717                     	;# 
  6994  0718                     	;# 
  6995  0719                     	;# 
  6996  0891                     	;# 
  6997  0891                     	;# 
  6998  0891                     	;# 
  6999  0891                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0892                     	;# 
  7003  0892                     	;# 
  7004  0892                     	;# 
  7005  0893                     	;# 
  7006  0893                     	;# 
  7007  0893                     	;# 
  7008  0893                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0894                     	;# 
  7012  0894                     	;# 
  7013  0894                     	;# 
  7014  0895                     	;# 
  7015  0895                     	;# 
  7016  0895                     	;# 
  7017  0896                     	;# 
  7018  0896                     	;# 
  7019  0896                     	;# 
  7020  089B                     	;# 
  7021  0911                     	;# 
  7022  0912                     	;# 
  7023  0913                     	;# 
  7024  0914                     	;# 
  7025  0915                     	;# 
  7026  0916                     	;# 
  7027  0918                     	;# 
  7028  0919                     	;# 
  7029  091A                     	;# 
  7030  091B                     	;# 
  7031  091C                     	;# 
  7032  091D                     	;# 
  7033  091E                     	;# 
  7034  091F                     	;# 
  7035  0E0F                     	;# 
  7036  0E10                     	;# 
  7037  0E11                     	;# 
  7038  0E12                     	;# 
  7039  0E13                     	;# 
  7040  0E14                     	;# 
  7041  0E15                     	;# 
  7042  0E16                     	;# 
  7043  0E17                     	;# 
  7044  0E18                     	;# 
  7045  0E19                     	;# 
  7046  0E1A                     	;# 
  7047  0E1B                     	;# 
  7048  0E1C                     	;# 
  7049  0E1D                     	;# 
  7050  0E1E                     	;# 
  7051  0E1F                     	;# 
  7052  0E20                     	;# 
  7053  0E21                     	;# 
  7054  0E22                     	;# 
  7055  0E24                     	;# 
  7056  0E25                     	;# 
  7057  0E28                     	;# 
  7058  0E29                     	;# 
  7059  0E2A                     	;# 
  7060  0E2B                     	;# 
  7061  0E2C                     	;# 
  7062  0E2D                     	;# 
  7063  0E2E                     	;# 
  7064  0E2F                     	;# 
  7065  0E90                     	;# 
  7066  0E91                     	;# 
  7067  0E92                     	;# 
  7068  0E94                     	;# 
  7069  0E95                     	;# 
  7070  0E9C                     	;# 
  7071  0E9D                     	;# 
  7072  0E9E                     	;# 
  7073  0E9F                     	;# 
  7074  0EA0                     	;# 
  7075  0EA1                     	;# 
  7076  0EA2                     	;# 
  7077  0EA3                     	;# 
  7078  0EA4                     	;# 
  7079  0EA5                     	;# 
  7080  0EA6                     	;# 
  7081  0EA7                     	;# 
  7082  0F0F                     	;# 
  7083  0F10                     	;# 
  7084  0F11                     	;# 
  7085  0F12                     	;# 
  7086  0F13                     	;# 
  7087  0F14                     	;# 
  7088  0F15                     	;# 
  7089  0F16                     	;# 
  7090  0F17                     	;# 
  7091  0F18                     	;# 
  7092  0F19                     	;# 
  7093  0F1A                     	;# 
  7094  0F1B                     	;# 
  7095  0F1C                     	;# 
  7096  0F1D                     	;# 
  7097  0F1E                     	;# 
  7098  0F1F                     	;# 
  7099  0F20                     	;# 
  7100  0F21                     	;# 
  7101  0F22                     	;# 
  7102  0F23                     	;# 
  7103  0F24                     	;# 
  7104  0F25                     	;# 
  7105  0F26                     	;# 
  7106  0F27                     	;# 
  7107  0F28                     	;# 
  7108  0F29                     	;# 
  7109  0F2A                     	;# 
  7110  0F2B                     	;# 
  7111  0F2C                     	;# 
  7112  0F2D                     	;# 
  7113  0F2E                     	;# 
  7114  0F2F                     	;# 
  7115  0F30                     	;# 
  7116  0F31                     	;# 
  7117  0F32                     	;# 
  7118  0F33                     	;# 
  7119  0F34                     	;# 
  7120  0F35                     	;# 
  7121  0F36                     	;# 
  7122  0F37                     	;# 
  7123  0FE4                     	;# 
  7124  0FE5                     	;# 
  7125  0FE6                     	;# 
  7126  0FE7                     	;# 
  7127  0FE8                     	;# 
  7128  0FE9                     	;# 
  7129  0FEA                     	;# 
  7130  0FEB                     	;# 
  7131  0FED                     	;# 
  7132  0FEE                     	;# 
  7133  0FEF                     	;# 
  7134  0000                     	;# 
  7135  0001                     	;# 
  7136  0002                     	;# 
  7137  0003                     	;# 
  7138  0004                     	;# 
  7139  0005                     	;# 
  7140  0006                     	;# 
  7141  0007                     	;# 
  7142  0008                     	;# 
  7143  0009                     	;# 
  7144  000A                     	;# 
  7145  000B                     	;# 
  7146  000C                     	;# 
  7147  000D                     	;# 
  7148  000E                     	;# 
  7149  0010                     	;# 
  7150  0011                     	;# 
  7151  0012                     	;# 
  7152  0013                     	;# 
  7153  0014                     	;# 
  7154  0015                     	;# 
  7155  0015                     	;# 
  7156  0016                     	;# 
  7157  0016                     	;# 
  7158  0017                     	;# 
  7159  0018                     	;# 
  7160  0019                     	;# 
  7161  0019                     	;# 
  7162  001A                     	;# 
  7163  001B                     	;# 
  7164  001C                     	;# 
  7165  001D                     	;# 
  7166  001E                     	;# 
  7167  001F                     	;# 
  7168  008C                     	;# 
  7169  008D                     	;# 
  7170  008E                     	;# 
  7171  0090                     	;# 
  7172  0091                     	;# 
  7173  0092                     	;# 
  7174  0093                     	;# 
  7175  0094                     	;# 
  7176  0097                     	;# 
  7177  009B                     	;# 
  7178  009B                     	;# 
  7179  009C                     	;# 
  7180  009D                     	;# 
  7181  009E                     	;# 
  7182  009F                     	;# 
  7183  010C                     	;# 
  7184  010D                     	;# 
  7185  010E                     	;# 
  7186  0111                     	;# 
  7187  0112                     	;# 
  7188  0113                     	;# 
  7189  0114                     	;# 
  7190  0115                     	;# 
  7191  0116                     	;# 
  7192  0117                     	;# 
  7193  0118                     	;# 
  7194  0119                     	;# 
  7195  018C                     	;# 
  7196  018D                     	;# 
  7197  018E                     	;# 
  7198  0197                     	;# 
  7199  0199                     	;# 
  7200  0199                     	;# 
  7201  0199                     	;# 
  7202  019A                     	;# 
  7203  019A                     	;# 
  7204  019A                     	;# 
  7205  019B                     	;# 
  7206  019B                     	;# 
  7207  019B                     	;# 
  7208  019B                     	;# 
  7209  019B                     	;# 
  7210  019C                     	;# 
  7211  019C                     	;# 
  7212  019C                     	;# 
  7213  019D                     	;# 
  7214  019D                     	;# 
  7215  019D                     	;# 
  7216  019E                     	;# 
  7217  019E                     	;# 
  7218  019E                     	;# 
  7219  019F                     	;# 
  7220  019F                     	;# 
  7221  019F                     	;# 
  7222  019F                     	;# 
  7223  019F                     	;# 
  7224  020C                     	;# 
  7225  020D                     	;# 
  7226  020E                     	;# 
  7227  0211                     	;# 
  7228  0211                     	;# 
  7229  0212                     	;# 
  7230  0212                     	;# 
  7231  0213                     	;# 
  7232  0213                     	;# 
  7233  0214                     	;# 
  7234  0214                     	;# 
  7235  0215                     	;# 
  7236  0215                     	;# 
  7237  0215                     	;# 
  7238  0215                     	;# 
  7239  0216                     	;# 
  7240  0216                     	;# 
  7241  0217                     	;# 
  7242  0217                     	;# 
  7243  0219                     	;# 
  7244  021A                     	;# 
  7245  021B                     	;# 
  7246  021C                     	;# 
  7247  021D                     	;# 
  7248  021D                     	;# 
  7249  021E                     	;# 
  7250  021F                     	;# 
  7251  028C                     	;# 
  7252  028D                     	;# 
  7253  028E                     	;# 
  7254  0291                     	;# 
  7255  0291                     	;# 
  7256  0292                     	;# 
  7257  0293                     	;# 
  7258  0294                     	;# 
  7259  0295                     	;# 
  7260  0295                     	;# 
  7261  0296                     	;# 
  7262  0297                     	;# 
  7263  0298                     	;# 
  7264  029F                     	;# 
  7265  030C                     	;# 
  7266  030D                     	;# 
  7267  030E                     	;# 
  7268  0311                     	;# 
  7269  0311                     	;# 
  7270  0312                     	;# 
  7271  0313                     	;# 
  7272  0314                     	;# 
  7273  0315                     	;# 
  7274  0315                     	;# 
  7275  0316                     	;# 
  7276  0317                     	;# 
  7277  0318                     	;# 
  7278  038C                     	;# 
  7279  038D                     	;# 
  7280  038E                     	;# 
  7281  0391                     	;# 
  7282  0392                     	;# 
  7283  0393                     	;# 
  7284  0394                     	;# 
  7285  0395                     	;# 
  7286  0396                     	;# 
  7287  0397                     	;# 
  7288  0398                     	;# 
  7289  0399                     	;# 
  7290  039A                     	;# 
  7291  039C                     	;# 
  7292  039D                     	;# 
  7293  039E                     	;# 
  7294  039F                     	;# 
  7295  0411                     	;# 
  7296  0411                     	;# 
  7297  0412                     	;# 
  7298  0413                     	;# 
  7299  0414                     	;# 
  7300  0415                     	;# 
  7301  0416                     	;# 
  7302  0417                     	;# 
  7303  0418                     	;# 
  7304  0418                     	;# 
  7305  0419                     	;# 
  7306  041A                     	;# 
  7307  041B                     	;# 
  7308  041C                     	;# 
  7309  041D                     	;# 
  7310  041E                     	;# 
  7311  041F                     	;# 
  7312  0498                     	;# 
  7313  0498                     	;# 
  7314  0499                     	;# 
  7315  049A                     	;# 
  7316  049B                     	;# 
  7317  049B                     	;# 
  7318  049C                     	;# 
  7319  049D                     	;# 
  7320  049E                     	;# 
  7321  049F                     	;# 
  7322  0617                     	;# 
  7323  0618                     	;# 
  7324  0619                     	;# 
  7325  0619                     	;# 
  7326  061A                     	;# 
  7327  061B                     	;# 
  7328  061C                     	;# 
  7329  061C                     	;# 
  7330  061F                     	;# 
  7331  0691                     	;# 
  7332  0692                     	;# 
  7333  0693                     	;# 
  7334  0694                     	;# 
  7335  0695                     	;# 
  7336  0696                     	;# 
  7337  0697                     	;# 
  7338  0698                     	;# 
  7339  0699                     	;# 
  7340  0711                     	;# 
  7341  0712                     	;# 
  7342  0713                     	;# 
  7343  0714                     	;# 
  7344  0715                     	;# 
  7345  0716                     	;# 
  7346  0717                     	;# 
  7347  0718                     	;# 
  7348  0719                     	;# 
  7349  0891                     	;# 
  7350  0891                     	;# 
  7351  0891                     	;# 
  7352  0891                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0892                     	;# 
  7356  0892                     	;# 
  7357  0892                     	;# 
  7358  0893                     	;# 
  7359  0893                     	;# 
  7360  0893                     	;# 
  7361  0893                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0894                     	;# 
  7365  0894                     	;# 
  7366  0894                     	;# 
  7367  0895                     	;# 
  7368  0895                     	;# 
  7369  0895                     	;# 
  7370  0896                     	;# 
  7371  0896                     	;# 
  7372  0896                     	;# 
  7373  089B                     	;# 
  7374  0911                     	;# 
  7375  0912                     	;# 
  7376  0913                     	;# 
  7377  0914                     	;# 
  7378  0915                     	;# 
  7379  0916                     	;# 
  7380  0918                     	;# 
  7381  0919                     	;# 
  7382  091A                     	;# 
  7383  091B                     	;# 
  7384  091C                     	;# 
  7385  091D                     	;# 
  7386  091E                     	;# 
  7387  091F                     	;# 
  7388  0E0F                     	;# 
  7389  0E10                     	;# 
  7390  0E11                     	;# 
  7391  0E12                     	;# 
  7392  0E13                     	;# 
  7393  0E14                     	;# 
  7394  0E15                     	;# 
  7395  0E16                     	;# 
  7396  0E17                     	;# 
  7397  0E18                     	;# 
  7398  0E19                     	;# 
  7399  0E1A                     	;# 
  7400  0E1B                     	;# 
  7401  0E1C                     	;# 
  7402  0E1D                     	;# 
  7403  0E1E                     	;# 
  7404  0E1F                     	;# 
  7405  0E20                     	;# 
  7406  0E21                     	;# 
  7407  0E22                     	;# 
  7408  0E24                     	;# 
  7409  0E25                     	;# 
  7410  0E28                     	;# 
  7411  0E29                     	;# 
  7412  0E2A                     	;# 
  7413  0E2B                     	;# 
  7414  0E2C                     	;# 
  7415  0E2D                     	;# 
  7416  0E2E                     	;# 
  7417  0E2F                     	;# 
  7418  0E90                     	;# 
  7419  0E91                     	;# 
  7420  0E92                     	;# 
  7421  0E94                     	;# 
  7422  0E95                     	;# 
  7423  0E9C                     	;# 
  7424  0E9D                     	;# 
  7425  0E9E                     	;# 
  7426  0E9F                     	;# 
  7427  0EA0                     	;# 
  7428  0EA1                     	;# 
  7429  0EA2                     	;# 
  7430  0EA3                     	;# 
  7431  0EA4                     	;# 
  7432  0EA5                     	;# 
  7433  0EA6                     	;# 
  7434  0EA7                     	;# 
  7435  0F0F                     	;# 
  7436  0F10                     	;# 
  7437  0F11                     	;# 
  7438  0F12                     	;# 
  7439  0F13                     	;# 
  7440  0F14                     	;# 
  7441  0F15                     	;# 
  7442  0F16                     	;# 
  7443  0F17                     	;# 
  7444  0F18                     	;# 
  7445  0F19                     	;# 
  7446  0F1A                     	;# 
  7447  0F1B                     	;# 
  7448  0F1C                     	;# 
  7449  0F1D                     	;# 
  7450  0F1E                     	;# 
  7451  0F1F                     	;# 
  7452  0F20                     	;# 
  7453  0F21                     	;# 
  7454  0F22                     	;# 
  7455  0F23                     	;# 
  7456  0F24                     	;# 
  7457  0F25                     	;# 
  7458  0F26                     	;# 
  7459  0F27                     	;# 
  7460  0F28                     	;# 
  7461  0F29                     	;# 
  7462  0F2A                     	;# 
  7463  0F2B                     	;# 
  7464  0F2C                     	;# 
  7465  0F2D                     	;# 
  7466  0F2E                     	;# 
  7467  0F2F                     	;# 
  7468  0F30                     	;# 
  7469  0F31                     	;# 
  7470  0F32                     	;# 
  7471  0F33                     	;# 
  7472  0F34                     	;# 
  7473  0F35                     	;# 
  7474  0F36                     	;# 
  7475  0F37                     	;# 
  7476  0FE4                     	;# 
  7477  0FE5                     	;# 
  7478  0FE6                     	;# 
  7479  0FE7                     	;# 
  7480  0FE8                     	;# 
  7481  0FE9                     	;# 
  7482  0FEA                     	;# 
  7483  0FEB                     	;# 
  7484  0FED                     	;# 
  7485  0FEE                     	;# 
  7486  0FEF                     	;# 
  7487  0000                     	;# 
  7488  0001                     	;# 
  7489  0002                     	;# 
  7490  0003                     	;# 
  7491  0004                     	;# 
  7492  0005                     	;# 
  7493  0006                     	;# 
  7494  0007                     	;# 
  7495  0008                     	;# 
  7496  0009                     	;# 
  7497  000A                     	;# 
  7498  000B                     	;# 
  7499  000C                     	;# 
  7500  000D                     	;# 
  7501  000E                     	;# 
  7502  0010                     	;# 
  7503  0011                     	;# 
  7504  0012                     	;# 
  7505  0013                     	;# 
  7506  0014                     	;# 
  7507  0015                     	;# 
  7508  0015                     	;# 
  7509  0016                     	;# 
  7510  0016                     	;# 
  7511  0017                     	;# 
  7512  0018                     	;# 
  7513  0019                     	;# 
  7514  0019                     	;# 
  7515  001A                     	;# 
  7516  001B                     	;# 
  7517  001C                     	;# 
  7518  001D                     	;# 
  7519  001E                     	;# 
  7520  001F                     	;# 
  7521  008C                     	;# 
  7522  008D                     	;# 
  7523  008E                     	;# 
  7524  0090                     	;# 
  7525  0091                     	;# 
  7526  0092                     	;# 
  7527  0093                     	;# 
  7528  0094                     	;# 
  7529  0097                     	;# 
  7530  009B                     	;# 
  7531  009B                     	;# 
  7532  009C                     	;# 
  7533  009D                     	;# 
  7534  009E                     	;# 
  7535  009F                     	;# 
  7536  010C                     	;# 
  7537  010D                     	;# 
  7538  010E                     	;# 
  7539  0111                     	;# 
  7540  0112                     	;# 
  7541  0113                     	;# 
  7542  0114                     	;# 
  7543  0115                     	;# 
  7544  0116                     	;# 
  7545  0117                     	;# 
  7546  0118                     	;# 
  7547  0119                     	;# 
  7548  018C                     	;# 
  7549  018D                     	;# 
  7550  018E                     	;# 
  7551  0197                     	;# 
  7552  0199                     	;# 
  7553  0199                     	;# 
  7554  0199                     	;# 
  7555  019A                     	;# 
  7556  019A                     	;# 
  7557  019A                     	;# 
  7558  019B                     	;# 
  7559  019B                     	;# 
  7560  019B                     	;# 
  7561  019B                     	;# 
  7562  019B                     	;# 
  7563  019C                     	;# 
  7564  019C                     	;# 
  7565  019C                     	;# 
  7566  019D                     	;# 
  7567  019D                     	;# 
  7568  019D                     	;# 
  7569  019E                     	;# 
  7570  019E                     	;# 
  7571  019E                     	;# 
  7572  019F                     	;# 
  7573  019F                     	;# 
  7574  019F                     	;# 
  7575  019F                     	;# 
  7576  019F                     	;# 
  7577  020C                     	;# 
  7578  020D                     	;# 
  7579  020E                     	;# 
  7580  0211                     	;# 
  7581  0211                     	;# 
  7582  0212                     	;# 
  7583  0212                     	;# 
  7584  0213                     	;# 
  7585  0213                     	;# 
  7586  0214                     	;# 
  7587  0214                     	;# 
  7588  0215                     	;# 
  7589  0215                     	;# 
  7590  0215                     	;# 
  7591  0215                     	;# 
  7592  0216                     	;# 
  7593  0216                     	;# 
  7594  0217                     	;# 
  7595  0217                     	;# 
  7596  0219                     	;# 
  7597  021A                     	;# 
  7598  021B                     	;# 
  7599  021C                     	;# 
  7600  021D                     	;# 
  7601  021D                     	;# 
  7602  021E                     	;# 
  7603  021F                     	;# 
  7604  028C                     	;# 
  7605  028D                     	;# 
  7606  028E                     	;# 
  7607  0291                     	;# 
  7608  0291                     	;# 
  7609  0292                     	;# 
  7610  0293                     	;# 
  7611  0294                     	;# 
  7612  0295                     	;# 
  7613  0295                     	;# 
  7614  0296                     	;# 
  7615  0297                     	;# 
  7616  0298                     	;# 
  7617  029F                     	;# 
  7618  030C                     	;# 
  7619  030D                     	;# 
  7620  030E                     	;# 
  7621  0311                     	;# 
  7622  0311                     	;# 
  7623  0312                     	;# 
  7624  0313                     	;# 
  7625  0314                     	;# 
  7626  0315                     	;# 
  7627  0315                     	;# 
  7628  0316                     	;# 
  7629  0317                     	;# 
  7630  0318                     	;# 
  7631  038C                     	;# 
  7632  038D                     	;# 
  7633  038E                     	;# 
  7634  0391                     	;# 
  7635  0392                     	;# 
  7636  0393                     	;# 
  7637  0394                     	;# 
  7638  0395                     	;# 
  7639  0396                     	;# 
  7640  0397                     	;# 
  7641  0398                     	;# 
  7642  0399                     	;# 
  7643  039A                     	;# 
  7644  039C                     	;# 
  7645  039D                     	;# 
  7646  039E                     	;# 
  7647  039F                     	;# 
  7648  0411                     	;# 
  7649  0411                     	;# 
  7650  0412                     	;# 
  7651  0413                     	;# 
  7652  0414                     	;# 
  7653  0415                     	;# 
  7654  0416                     	;# 
  7655  0417                     	;# 
  7656  0418                     	;# 
  7657  0418                     	;# 
  7658  0419                     	;# 
  7659  041A                     	;# 
  7660  041B                     	;# 
  7661  041C                     	;# 
  7662  041D                     	;# 
  7663  041E                     	;# 
  7664  041F                     	;# 
  7665  0498                     	;# 
  7666  0498                     	;# 
  7667  0499                     	;# 
  7668  049A                     	;# 
  7669  049B                     	;# 
  7670  049B                     	;# 
  7671  049C                     	;# 
  7672  049D                     	;# 
  7673  049E                     	;# 
  7674  049F                     	;# 
  7675  0617                     	;# 
  7676  0618                     	;# 
  7677  0619                     	;# 
  7678  0619                     	;# 
  7679  061A                     	;# 
  7680  061B                     	;# 
  7681  061C                     	;# 
  7682  061C                     	;# 
  7683  061F                     	;# 
  7684  0691                     	;# 
  7685  0692                     	;# 
  7686  0693                     	;# 
  7687  0694                     	;# 
  7688  0695                     	;# 
  7689  0696                     	;# 
  7690  0697                     	;# 
  7691  0698                     	;# 
  7692  0699                     	;# 
  7693  0711                     	;# 
  7694  0712                     	;# 
  7695  0713                     	;# 
  7696  0714                     	;# 
  7697  0715                     	;# 
  7698  0716                     	;# 
  7699  0717                     	;# 
  7700  0718                     	;# 
  7701  0719                     	;# 
  7702  0891                     	;# 
  7703  0891                     	;# 
  7704  0891                     	;# 
  7705  0891                     	;# 
  7706  0891                     	;# 
  7707  0891                     	;# 
  7708  0892                     	;# 
  7709  0892                     	;# 
  7710  0892                     	;# 
  7711  0893                     	;# 
  7712  0893                     	;# 
  7713  0893                     	;# 
  7714  0893                     	;# 
  7715  0893                     	;# 
  7716  0893                     	;# 
  7717  0894                     	;# 
  7718  0894                     	;# 
  7719  0894                     	;# 
  7720  0895                     	;# 
  7721  0895                     	;# 
  7722  0895                     	;# 
  7723  0896                     	;# 
  7724  0896                     	;# 
  7725  0896                     	;# 
  7726  089B                     	;# 
  7727  0911                     	;# 
  7728  0912                     	;# 
  7729  0913                     	;# 
  7730  0914                     	;# 
  7731  0915                     	;# 
  7732  0916                     	;# 
  7733  0918                     	;# 
  7734  0919                     	;# 
  7735  091A                     	;# 
  7736  091B                     	;# 
  7737  091C                     	;# 
  7738  091D                     	;# 
  7739  091E                     	;# 
  7740  091F                     	;# 
  7741  0E0F                     	;# 
  7742  0E10                     	;# 
  7743  0E11                     	;# 
  7744  0E12                     	;# 
  7745  0E13                     	;# 
  7746  0E14                     	;# 
  7747  0E15                     	;# 
  7748  0E16                     	;# 
  7749  0E17                     	;# 
  7750  0E18                     	;# 
  7751  0E19                     	;# 
  7752  0E1A                     	;# 
  7753  0E1B                     	;# 
  7754  0E1C                     	;# 
  7755  0E1D                     	;# 
  7756  0E1E                     	;# 
  7757  0E1F                     	;# 
  7758  0E20                     	;# 
  7759  0E21                     	;# 
  7760  0E22                     	;# 
  7761  0E24                     	;# 
  7762  0E25                     	;# 
  7763  0E28                     	;# 
  7764  0E29                     	;# 
  7765  0E2A                     	;# 
  7766  0E2B                     	;# 
  7767  0E2C                     	;# 
  7768  0E2D                     	;# 
  7769  0E2E                     	;# 
  7770  0E2F                     	;# 
  7771  0E90                     	;# 
  7772  0E91                     	;# 
  7773  0E92                     	;# 
  7774  0E94                     	;# 
  7775  0E95                     	;# 
  7776  0E9C                     	;# 
  7777  0E9D                     	;# 
  7778  0E9E                     	;# 
  7779  0E9F                     	;# 
  7780  0EA0                     	;# 
  7781  0EA1                     	;# 
  7782  0EA2                     	;# 
  7783  0EA3                     	;# 
  7784  0EA4                     	;# 
  7785  0EA5                     	;# 
  7786  0EA6                     	;# 
  7787  0EA7                     	;# 
  7788  0F0F                     	;# 
  7789  0F10                     	;# 
  7790  0F11                     	;# 
  7791  0F12                     	;# 
  7792  0F13                     	;# 
  7793  0F14                     	;# 
  7794  0F15                     	;# 
  7795  0F16                     	;# 
  7796  0F17                     	;# 
  7797  0F18                     	;# 
  7798  0F19                     	;# 
  7799  0F1A                     	;# 
  7800  0F1B                     	;# 
  7801  0F1C                     	;# 
  7802  0F1D                     	;# 
  7803  0F1E                     	;# 
  7804  0F1F                     	;# 
  7805  0F20                     	;# 
  7806  0F21                     	;# 
  7807  0F22                     	;# 
  7808  0F23                     	;# 
  7809  0F24                     	;# 
  7810  0F25                     	;# 
  7811  0F26                     	;# 
  7812  0F27                     	;# 
  7813  0F28                     	;# 
  7814  0F29                     	;# 
  7815  0F2A                     	;# 
  7816  0F2B                     	;# 
  7817  0F2C                     	;# 
  7818  0F2D                     	;# 
  7819  0F2E                     	;# 
  7820  0F2F                     	;# 
  7821  0F30                     	;# 
  7822  0F31                     	;# 
  7823  0F32                     	;# 
  7824  0F33                     	;# 
  7825  0F34                     	;# 
  7826  0F35                     	;# 
  7827  0F36                     	;# 
  7828  0F37                     	;# 
  7829  0FE4                     	;# 
  7830  0FE5                     	;# 
  7831  0FE6                     	;# 
  7832  0FE7                     	;# 
  7833  0FE8                     	;# 
  7834  0FE9                     	;# 
  7835  0FEA                     	;# 
  7836  0FEB                     	;# 
  7837  0FED                     	;# 
  7838  0FEE                     	;# 
  7839  0FEF                     	;# 
  7840  0000                     	;# 
  7841  0001                     	;# 
  7842  0002                     	;# 
  7843  0003                     	;# 
  7844  0004                     	;# 
  7845  0005                     	;# 
  7846  0006                     	;# 
  7847  0007                     	;# 
  7848  0008                     	;# 
  7849  0009                     	;# 
  7850  000A                     	;# 
  7851  000B                     	;# 
  7852  000C                     	;# 
  7853  000D                     	;# 
  7854  000E                     	;# 
  7855  0010                     	;# 
  7856  0011                     	;# 
  7857  0012                     	;# 
  7858  0013                     	;# 
  7859  0014                     	;# 
  7860  0015                     	;# 
  7861  0015                     	;# 
  7862  0016                     	;# 
  7863  0016                     	;# 
  7864  0017                     	;# 
  7865  0018                     	;# 
  7866  0019                     	;# 
  7867  0019                     	;# 
  7868  001A                     	;# 
  7869  001B                     	;# 
  7870  001C                     	;# 
  7871  001D                     	;# 
  7872  001E                     	;# 
  7873  001F                     	;# 
  7874  008C                     	;# 
  7875  008D                     	;# 
  7876  008E                     	;# 
  7877  0090                     	;# 
  7878  0091                     	;# 
  7879  0092                     	;# 
  7880  0093                     	;# 
  7881  0094                     	;# 
  7882  0097                     	;# 
  7883  009B                     	;# 
  7884  009B                     	;# 
  7885  009C                     	;# 
  7886  009D                     	;# 
  7887  009E                     	;# 
  7888  009F                     	;# 
  7889  010C                     	;# 
  7890  010D                     	;# 
  7891  010E                     	;# 
  7892  0111                     	;# 
  7893  0112                     	;# 
  7894  0113                     	;# 
  7895  0114                     	;# 
  7896  0115                     	;# 
  7897  0116                     	;# 
  7898  0117                     	;# 
  7899  0118                     	;# 
  7900  0119                     	;# 
  7901  018C                     	;# 
  7902  018D                     	;# 
  7903  018E                     	;# 
  7904  0197                     	;# 
  7905  0199                     	;# 
  7906  0199                     	;# 
  7907  0199                     	;# 
  7908  019A                     	;# 
  7909  019A                     	;# 
  7910  019A                     	;# 
  7911  019B                     	;# 
  7912  019B                     	;# 
  7913  019B                     	;# 
  7914  019B                     	;# 
  7915  019B                     	;# 
  7916  019C                     	;# 
  7917  019C                     	;# 
  7918  019C                     	;# 
  7919  019D                     	;# 
  7920  019D                     	;# 
  7921  019D                     	;# 
  7922  019E                     	;# 
  7923  019E                     	;# 
  7924  019E                     	;# 
  7925  019F                     	;# 
  7926  019F                     	;# 
  7927  019F                     	;# 
  7928  019F                     	;# 
  7929  019F                     	;# 
  7930  020C                     	;# 
  7931  020D                     	;# 
  7932  020E                     	;# 
  7933  0211                     	;# 
  7934  0211                     	;# 
  7935  0212                     	;# 
  7936  0212                     	;# 
  7937  0213                     	;# 
  7938  0213                     	;# 
  7939  0214                     	;# 
  7940  0214                     	;# 
  7941  0215                     	;# 
  7942  0215                     	;# 
  7943  0215                     	;# 
  7944  0215                     	;# 
  7945  0216                     	;# 
  7946  0216                     	;# 
  7947  0217                     	;# 
  7948  0217                     	;# 
  7949  0219                     	;# 
  7950  021A                     	;# 
  7951  021B                     	;# 
  7952  021C                     	;# 
  7953  021D                     	;# 
  7954  021D                     	;# 
  7955  021E                     	;# 
  7956  021F                     	;# 
  7957  028C                     	;# 
  7958  028D                     	;# 
  7959  028E                     	;# 
  7960  0291                     	;# 
  7961  0291                     	;# 
  7962  0292                     	;# 
  7963  0293                     	;# 
  7964  0294                     	;# 
  7965  0295                     	;# 
  7966  0295                     	;# 
  7967  0296                     	;# 
  7968  0297                     	;# 
  7969  0298                     	;# 
  7970  029F                     	;# 
  7971  030C                     	;# 
  7972  030D                     	;# 
  7973  030E                     	;# 
  7974  0311                     	;# 
  7975  0311                     	;# 
  7976  0312                     	;# 
  7977  0313                     	;# 
  7978  0314                     	;# 
  7979  0315                     	;# 
  7980  0315                     	;# 
  7981  0316                     	;# 
  7982  0317                     	;# 
  7983  0318                     	;# 
  7984  038C                     	;# 
  7985  038D                     	;# 
  7986  038E                     	;# 
  7987  0391                     	;# 
  7988  0392                     	;# 
  7989  0393                     	;# 
  7990  0394                     	;# 
  7991  0395                     	;# 
  7992  0396                     	;# 
  7993  0397                     	;# 
  7994  0398                     	;# 
  7995  0399                     	;# 
  7996  039A                     	;# 
  7997  039C                     	;# 
  7998  039D                     	;# 
  7999  039E                     	;# 
  8000  039F                     	;# 
  8001  0411                     	;# 
  8002  0411                     	;# 
  8003  0412                     	;# 
  8004  0413                     	;# 
  8005  0414                     	;# 
  8006  0415                     	;# 
  8007  0416                     	;# 
  8008  0417                     	;# 
  8009  0418                     	;# 
  8010  0418                     	;# 
  8011  0419                     	;# 
  8012  041A                     	;# 
  8013  041B                     	;# 
  8014  041C                     	;# 
  8015  041D                     	;# 
  8016  041E                     	;# 
  8017  041F                     	;# 
  8018  0498                     	;# 
  8019  0498                     	;# 
  8020  0499                     	;# 
  8021  049A                     	;# 
  8022  049B                     	;# 
  8023  049B                     	;# 
  8024  049C                     	;# 
  8025  049D                     	;# 
  8026  049E                     	;# 
  8027  049F                     	;# 
  8028  0617                     	;# 
  8029  0618                     	;# 
  8030  0619                     	;# 
  8031  0619                     	;# 
  8032  061A                     	;# 
  8033  061B                     	;# 
  8034  061C                     	;# 
  8035  061C                     	;# 
  8036  061F                     	;# 
  8037  0691                     	;# 
  8038  0692                     	;# 
  8039  0693                     	;# 
  8040  0694                     	;# 
  8041  0695                     	;# 
  8042  0696                     	;# 
  8043  0697                     	;# 
  8044  0698                     	;# 
  8045  0699                     	;# 
  8046  0711                     	;# 
  8047  0712                     	;# 
  8048  0713                     	;# 
  8049  0714                     	;# 
  8050  0715                     	;# 
  8051  0716                     	;# 
  8052  0717                     	;# 
  8053  0718                     	;# 
  8054  0719                     	;# 
  8055  0891                     	;# 
  8056  0891                     	;# 
  8057  0891                     	;# 
  8058  0891                     	;# 
  8059  0891                     	;# 
  8060  0891                     	;# 
  8061  0892                     	;# 
  8062  0892                     	;# 
  8063  0892                     	;# 
  8064  0893                     	;# 
  8065  0893                     	;# 
  8066  0893                     	;# 
  8067  0893                     	;# 
  8068  0893                     	;# 
  8069  0893                     	;# 
  8070  0894                     	;# 
  8071  0894                     	;# 
  8072  0894                     	;# 
  8073  0895                     	;# 
  8074  0895                     	;# 
  8075  0895                     	;# 
  8076  0896                     	;# 
  8077  0896                     	;# 
  8078  0896                     	;# 
  8079  089B                     	;# 
  8080  0911                     	;# 
  8081  0912                     	;# 
  8082  0913                     	;# 
  8083  0914                     	;# 
  8084  0915                     	;# 
  8085  0916                     	;# 
  8086  0918                     	;# 
  8087  0919                     	;# 
  8088  091A                     	;# 
  8089  091B                     	;# 
  8090  091C                     	;# 
  8091  091D                     	;# 
  8092  091E                     	;# 
  8093  091F                     	;# 
  8094  0E0F                     	;# 
  8095  0E10                     	;# 
  8096  0E11                     	;# 
  8097  0E12                     	;# 
  8098  0E13                     	;# 
  8099  0E14                     	;# 
  8100  0E15                     	;# 
  8101  0E16                     	;# 
  8102  0E17                     	;# 
  8103  0E18                     	;# 
  8104  0E19                     	;# 
  8105  0E1A                     	;# 
  8106  0E1B                     	;# 
  8107  0E1C                     	;# 
  8108  0E1D                     	;# 
  8109  0E1E                     	;# 
  8110  0E1F                     	;# 
  8111  0E20                     	;# 
  8112  0E21                     	;# 
  8113  0E22                     	;# 
  8114  0E24                     	;# 
  8115  0E25                     	;# 
  8116  0E28                     	;# 
  8117  0E29                     	;# 
  8118  0E2A                     	;# 
  8119  0E2B                     	;# 
  8120  0E2C                     	;# 
  8121  0E2D                     	;# 
  8122  0E2E                     	;# 
  8123  0E2F                     	;# 
  8124  0E90                     	;# 
  8125  0E91                     	;# 
  8126  0E92                     	;# 
  8127  0E94                     	;# 
  8128  0E95                     	;# 
  8129  0E9C                     	;# 
  8130  0E9D                     	;# 
  8131  0E9E                     	;# 
  8132  0E9F                     	;# 
  8133  0EA0                     	;# 
  8134  0EA1                     	;# 
  8135  0EA2                     	;# 
  8136  0EA3                     	;# 
  8137  0EA4                     	;# 
  8138  0EA5                     	;# 
  8139  0EA6                     	;# 
  8140  0EA7                     	;# 
  8141  0F0F                     	;# 
  8142  0F10                     	;# 
  8143  0F11                     	;# 
  8144  0F12                     	;# 
  8145  0F13                     	;# 
  8146  0F14                     	;# 
  8147  0F15                     	;# 
  8148  0F16                     	;# 
  8149  0F17                     	;# 
  8150  0F18                     	;# 
  8151  0F19                     	;# 
  8152  0F1A                     	;# 
  8153  0F1B                     	;# 
  8154  0F1C                     	;# 
  8155  0F1D                     	;# 
  8156  0F1E                     	;# 
  8157  0F1F                     	;# 
  8158  0F20                     	;# 
  8159  0F21                     	;# 
  8160  0F22                     	;# 
  8161  0F23                     	;# 
  8162  0F24                     	;# 
  8163  0F25                     	;# 
  8164  0F26                     	;# 
  8165  0F27                     	;# 
  8166  0F28                     	;# 
  8167  0F29                     	;# 
  8168  0F2A                     	;# 
  8169  0F2B                     	;# 
  8170  0F2C                     	;# 
  8171  0F2D                     	;# 
  8172  0F2E                     	;# 
  8173  0F2F                     	;# 
  8174  0F30                     	;# 
  8175  0F31                     	;# 
  8176  0F32                     	;# 
  8177  0F33                     	;# 
  8178  0F34                     	;# 
  8179  0F35                     	;# 
  8180  0F36                     	;# 
  8181  0F37                     	;# 
  8182  0FE4                     	;# 
  8183  0FE5                     	;# 
  8184  0FE6                     	;# 
  8185  0FE7                     	;# 
  8186  0FE8                     	;# 
  8187  0FE9                     	;# 
  8188  0FEA                     	;# 
  8189  0FEB                     	;# 
  8190  0FED                     	;# 
  8191  0FEE                     	;# 
  8192  0FEF                     	;# 
  8193                           
  8194                           	psect	idataBANK1
  8195  0000                     __pidataBANK1:	
  8196                           
  8197                           	psect	stringtext1
  8198  06DF                     __pstringtext1:	
  8199  06DF                     _gamma_table:	
  8200  06DF  34F4               	retlw	244
  8201  06E0  3403               	retlw	3
  8202  06E1  34EA               	retlw	234
  8203  06E2  3403               	retlw	3
  8204  06E3  34DF               	retlw	223
  8205  06E4  3403               	retlw	3
  8206  06E5  34D5               	retlw	213
  8207  06E6  3403               	retlw	3
  8208  06E7  34CB               	retlw	203
  8209  06E8  3403               	retlw	3
  8210  06E9  34C1               	retlw	193
  8211  06EA  3403               	retlw	3
  8212  06EB  34B6               	retlw	182
  8213  06EC  3403               	retlw	3
  8214  06ED  34AC               	retlw	172
  8215  06EE  3403               	retlw	3
  8216  06EF  34A2               	retlw	162
  8217  06F0  3403               	retlw	3
  8218  06F1  3498               	retlw	152
  8219  06F2  3403               	retlw	3
  8220  06F3  348E               	retlw	142
  8221  06F4  3403               	retlw	3
  8222  06F5  3483               	retlw	131
  8223  06F6  3403               	retlw	3
  8224  06F7  3479               	retlw	121
  8225  06F8  3403               	retlw	3
  8226  06F9  346F               	retlw	111
  8227  06FA  3403               	retlw	3
  8228  06FB  3465               	retlw	101
  8229  06FC  3403               	retlw	3
  8230  06FD  345A               	retlw	90
  8231  06FE  3403               	retlw	3
  8232  06FF  3450               	retlw	80
  8233  0700  3403               	retlw	3
  8234  0701  3446               	retlw	70
  8235  0702  3403               	retlw	3
  8236  0703  343C               	retlw	60
  8237  0704  3403               	retlw	3
  8238  0705  3432               	retlw	50
  8239  0706  3403               	retlw	3
  8240  0707  3427               	retlw	39
  8241  0708  3403               	retlw	3
  8242  0709  341D               	retlw	29
  8243  070A  3403               	retlw	3
  8244  070B  3413               	retlw	19
  8245  070C  3403               	retlw	3
  8246  070D  3409               	retlw	9
  8247  070E  3403               	retlw	3
  8248  070F  34FE               	retlw	254
  8249  0710  3402               	retlw	2
  8250  0711  34F4               	retlw	244
  8251  0712  3402               	retlw	2
  8252  0713  34EA               	retlw	234
  8253  0714  3402               	retlw	2
  8254  0715  34E0               	retlw	224
  8255  0716  3402               	retlw	2
  8256  0717  34D6               	retlw	214
  8257  0718  3402               	retlw	2
  8258  0719  34CB               	retlw	203
  8259  071A  3402               	retlw	2
  8260  071B  34C1               	retlw	193
  8261  071C  3402               	retlw	2
  8262  071D  34B7               	retlw	183
  8263  071E  3402               	retlw	2
  8264  071F  34AD               	retlw	173
  8265  0720  3402               	retlw	2
  8266  0721  34A3               	retlw	163
  8267  0722  3402               	retlw	2
  8268  0723  3498               	retlw	152
  8269  0724  3402               	retlw	2
  8270  0725  348E               	retlw	142
  8271  0726  3402               	retlw	2
  8272  0727  3484               	retlw	132
  8273  0728  3402               	retlw	2
  8274  0729  347A               	retlw	122
  8275  072A  3402               	retlw	2
  8276  072B  346F               	retlw	111
  8277  072C  3402               	retlw	2
  8278  072D  3465               	retlw	101
  8279  072E  3402               	retlw	2
  8280  072F  345B               	retlw	91
  8281  0730  3402               	retlw	2
  8282  0731  3451               	retlw	81
  8283  0732  3402               	retlw	2
  8284  0733  3447               	retlw	71
  8285  0734  3402               	retlw	2
  8286  0735  343C               	retlw	60
  8287  0736  3402               	retlw	2
  8288  0737  3432               	retlw	50
  8289  0738  3402               	retlw	2
  8290  0739  3428               	retlw	40
  8291  073A  3402               	retlw	2
  8292  073B  341E               	retlw	30
  8293  073C  3402               	retlw	2
  8294  073D  3413               	retlw	19
  8295  073E  3402               	retlw	2
  8296  073F  3409               	retlw	9
  8297  0740  3402               	retlw	2
  8298  0741  34FF               	retlw	255
  8299  0742  3401               	retlw	1
  8300  0743  34F5               	retlw	245
  8301  0744  3401               	retlw	1
  8302  0745  34EB               	retlw	235
  8303  0746  3401               	retlw	1
  8304  0747  34E0               	retlw	224
  8305  0748  3401               	retlw	1
  8306  0749  34D6               	retlw	214
  8307  074A  3401               	retlw	1
  8308  074B  34CC               	retlw	204
  8309  074C  3401               	retlw	1
  8310  074D  34C2               	retlw	194
  8311  074E  3401               	retlw	1
  8312  074F  34B7               	retlw	183
  8313  0750  3401               	retlw	1
  8314  0751  34AD               	retlw	173
  8315  0752  3401               	retlw	1
  8316  0753  34A3               	retlw	163
  8317  0754  3401               	retlw	1
  8318  0755  3499               	retlw	153
  8319  0756  3401               	retlw	1
  8320  0757  348F               	retlw	143
  8321  0758  3401               	retlw	1
  8322  0759  3484               	retlw	132
  8323  075A  3401               	retlw	1
  8324  075B  347A               	retlw	122
  8325  075C  3401               	retlw	1
  8326  075D  3470               	retlw	112
  8327  075E  3401               	retlw	1
  8328  075F  3466               	retlw	102
  8329  0760  3401               	retlw	1
  8330  0761  345B               	retlw	91
  8331  0762  3401               	retlw	1
  8332  0763  3451               	retlw	81
  8333  0764  3401               	retlw	1
  8334  0765  3447               	retlw	71
  8335  0766  3401               	retlw	1
  8336  0767  343D               	retlw	61
  8337  0768  3401               	retlw	1
  8338  0769  3433               	retlw	51
  8339  076A  3401               	retlw	1
  8340  076B  3428               	retlw	40
  8341  076C  3401               	retlw	1
  8342  076D  341E               	retlw	30
  8343  076E  3401               	retlw	1
  8344  076F  3414               	retlw	20
  8345  0770  3401               	retlw	1
  8346  0771  340A               	retlw	10
  8347  0772  3401               	retlw	1
  8348  0773  34FF               	retlw	255
  8349  0774  3400               	retlw	0
  8350  0775  34F5               	retlw	245
  8351  0776  3400               	retlw	0
  8352  0777  34EB               	retlw	235
  8353  0778  3400               	retlw	0
  8354  0779  34E1               	retlw	225
  8355  077A  3400               	retlw	0
  8356  077B  34D7               	retlw	215
  8357  077C  3400               	retlw	0
  8358  077D  34CC               	retlw	204
  8359  077E  3400               	retlw	0
  8360  077F  34C2               	retlw	194
  8361  0780  3400               	retlw	0
  8362  0781  34B8               	retlw	184
  8363  0782  3400               	retlw	0
  8364  0783  34AE               	retlw	174
  8365  0784  3400               	retlw	0
  8366  0785  34A4               	retlw	164
  8367  0786  3400               	retlw	0
  8368  0787  3499               	retlw	153
  8369  0788  3400               	retlw	0
  8370  0789  348F               	retlw	143
  8371  078A  3400               	retlw	0
  8372  078B  3485               	retlw	133
  8373  078C  3400               	retlw	0
  8374  078D  347B               	retlw	123
  8375  078E  3400               	retlw	0
  8376  078F  3470               	retlw	112
  8377  0790  3400               	retlw	0
  8378  0791  3466               	retlw	102
  8379  0792  3400               	retlw	0
  8380  0793  345C               	retlw	92
  8381  0794  3400               	retlw	0
  8382  0795  3452               	retlw	82
  8383  0796  3400               	retlw	0
  8384  0797  3448               	retlw	72
  8385  0798  3400               	retlw	0
  8386  0799  343D               	retlw	61
  8387  079A  3400               	retlw	0
  8388  079B  3433               	retlw	51
  8389  079C  3400               	retlw	0
  8390  079D  3429               	retlw	41
  8391  079E  3400               	retlw	0
  8392  079F  341F               	retlw	31
  8393  07A0  3400               	retlw	0
  8394  07A1  3414               	retlw	20
  8395  07A2  3400               	retlw	0
  8396  07A3  340A               	retlw	10
  8397  07A4  3400               	retlw	0
  8398  07A5  3400               	retlw	0
  8399  07A6  3400               	retlw	0
  8400  07A7  34FE               	retlw	254
  8401  07A8  3403               	retlw	3
  8402  07A9  34FD               	retlw	253
  8403  07AA  3403               	retlw	3
  8404  07AB  34FC               	retlw	252
  8405  07AC  3403               	retlw	3
  8406  07AD  34FB               	retlw	251
  8407  07AE  3403               	retlw	3
  8408  07AF  34F9               	retlw	249
  8409  07B0  3403               	retlw	3
  8410  07B1  34F8               	retlw	248
  8411  07B2  3403               	retlw	3
  8412  07B3  34F5               	retlw	245
  8413  07B4  3403               	retlw	3
  8414  07B5  34F3               	retlw	243
  8415  07B6  3403               	retlw	3
  8416  07B7  34F1               	retlw	241
  8417  07B8  3403               	retlw	3
  8418  07B9  34EE               	retlw	238
  8419  07BA  3403               	retlw	3
  8420  07BB  34EB               	retlw	235
  8421  07BC  3403               	retlw	3
  8422  07BD  34E8               	retlw	232
  8423  07BE  3403               	retlw	3
  8424  07BF  34E4               	retlw	228
  8425  07C0  3403               	retlw	3
  8426  07C1  34E0               	retlw	224
  8427  07C2  3403               	retlw	3
  8428  07C3  34DC               	retlw	220
  8429  07C4  3403               	retlw	3
  8430  07C5  34D8               	retlw	216
  8431  07C6  3403               	retlw	3
  8432  07C7  34D4               	retlw	212
  8433  07C8  3403               	retlw	3
  8434  07C9  34CF               	retlw	207
  8435  07CA  3403               	retlw	3
  8436  07CB  34CB               	retlw	203
  8437  07CC  3403               	retlw	3
  8438  07CD  34C6               	retlw	198
  8439  07CE  3403               	retlw	3
  8440  07CF  34C0               	retlw	192
  8441  07D0  3403               	retlw	3
  8442  07D1  34BB               	retlw	187
  8443  07D2  3403               	retlw	3
  8444  07D3  34B5               	retlw	181
  8445  07D4  3403               	retlw	3
  8446  07D5  34B0               	retlw	176
  8447  07D6  3403               	retlw	3
  8448  07D7  34AA               	retlw	170
  8449  07D8  3403               	retlw	3
  8450  07D9  34A4               	retlw	164
  8451  07DA  3403               	retlw	3
  8452  07DB  349D               	retlw	157
  8453  07DC  3403               	retlw	3
  8454  07DD  3497               	retlw	151
  8455  07DE  3403               	retlw	3
  8456  07DF  3490               	retlw	144
  8457  07E0  3403               	retlw	3
  8458  07E1  3489               	retlw	137
  8459  07E2  3403               	retlw	3
  8460  07E3  3482               	retlw	130
  8461  07E4  3403               	retlw	3
  8462  07E5  347B               	retlw	123
  8463  07E6  3403               	retlw	3
  8464  07E7  3473               	retlw	115
  8465  07E8  3403               	retlw	3
  8466  07E9  346B               	retlw	107
  8467  07EA  3403               	retlw	3
  8468  07EB  3464               	retlw	100
  8469  07EC  3403               	retlw	3
  8470  07ED  345C               	retlw	92
  8471  07EE  3403               	retlw	3
  8472  07EF  3453               	retlw	83
  8473  07F0  3403               	retlw	3
  8474  07F1  344B               	retlw	75
  8475  07F2  3403               	retlw	3
  8476  07F3  3442               	retlw	66
  8477  07F4  3403               	retlw	3
  8478  07F5  343A               	retlw	58
  8479  07F6  3403               	retlw	3
  8480  07F7  3431               	retlw	49
  8481  07F8  3403               	retlw	3
  8482  07F9  3428               	retlw	40
  8483  07FA  3403               	retlw	3
  8484  07FB  341E               	retlw	30
  8485  07FC  3403               	retlw	3
  8486  07FD  3415               	retlw	21
  8487  07FE  3403               	retlw	3
  8488  07FF  340B               	retlw	11
  8489  0800  3403               	retlw	3
  8490  0801  3401               	retlw	1
  8491  0802  3403               	retlw	3
  8492  0803  34F7               	retlw	247
  8493  0804  3402               	retlw	2
  8494  0805  34ED               	retlw	237
  8495  0806  3402               	retlw	2
  8496  0807  34E3               	retlw	227
  8497  0808  3402               	retlw	2
  8498  0809  34D9               	retlw	217
  8499  080A  3402               	retlw	2
  8500  080B  34CE               	retlw	206
  8501  080C  3402               	retlw	2
  8502  080D  34C3               	retlw	195
  8503  080E  3402               	retlw	2
  8504  080F  34B8               	retlw	184
  8505  0810  3402               	retlw	2
  8506  0811  34AD               	retlw	173
  8507  0812  3402               	retlw	2
  8508  0813  34A2               	retlw	162
  8509  0814  3402               	retlw	2
  8510  0815  3496               	retlw	150
  8511  0816  3402               	retlw	2
  8512  0817  348A               	retlw	138
  8513  0818  3402               	retlw	2
  8514  0819  347F               	retlw	127
  8515  081A  3402               	retlw	2
  8516  081B  3473               	retlw	115
  8517  081C  3402               	retlw	2
  8518  081D  3467               	retlw	103
  8519  081E  3402               	retlw	2
  8520  081F  345A               	retlw	90
  8521  0820  3402               	retlw	2
  8522  0821  344E               	retlw	78
  8523  0822  3402               	retlw	2
  8524  0823  3441               	retlw	65
  8525  0824  3402               	retlw	2
  8526  0825  3434               	retlw	52
  8527  0826  3402               	retlw	2
  8528  0827  3427               	retlw	39
  8529  0828  3402               	retlw	2
  8530  0829  341A               	retlw	26
  8531  082A  3402               	retlw	2
  8532  082B  340D               	retlw	13
  8533  082C  3402               	retlw	2
  8534  082D  3400               	retlw	0
  8535  082E  3402               	retlw	2
  8536  082F  34F2               	retlw	242
  8537  0830  3401               	retlw	1
  8538  0831  34E4               	retlw	228
  8539  0832  3401               	retlw	1
  8540  0833  34D6               	retlw	214
  8541  0834  3401               	retlw	1
  8542  0835  34C8               	retlw	200
  8543  0836  3401               	retlw	1
  8544  0837  34BA               	retlw	186
  8545  0838  3401               	retlw	1
  8546  0839  34AC               	retlw	172
  8547  083A  3401               	retlw	1
  8548  083B  349D               	retlw	157
  8549  083C  3401               	retlw	1
  8550  083D  348E               	retlw	142
  8551  083E  3401               	retlw	1
  8552  083F  3480               	retlw	128
  8553  0840  3401               	retlw	1
  8554  0841  3471               	retlw	113
  8555  0842  3401               	retlw	1
  8556  0843  3461               	retlw	97
  8557  0844  3401               	retlw	1
  8558  0845  3452               	retlw	82
  8559  0846  3401               	retlw	1
  8560  0847  3443               	retlw	67
  8561  0848  3401               	retlw	1
  8562  0849  3433               	retlw	51
  8563  084A  3401               	retlw	1
  8564  084B  3423               	retlw	35
  8565  084C  3401               	retlw	1
  8566  084D  3413               	retlw	19
  8567  084E  3401               	retlw	1
  8568  084F  3403               	retlw	3
  8569  0850  3401               	retlw	1
  8570  0851  34F3               	retlw	243
  8571  0852  3400               	retlw	0
  8572  0853  34E3               	retlw	227
  8573  0854  3400               	retlw	0
  8574  0855  34D2               	retlw	210
  8575  0856  3400               	retlw	0
  8576  0857  34C1               	retlw	193
  8577  0858  3400               	retlw	0
  8578  0859  34B1               	retlw	177
  8579  085A  3400               	retlw	0
  8580  085B  34A0               	retlw	160
  8581  085C  3400               	retlw	0
  8582  085D  348E               	retlw	142
  8583  085E  3400               	retlw	0
  8584  085F  347D               	retlw	125
  8585  0860  3400               	retlw	0
  8586  0861  346C               	retlw	108
  8587  0862  3400               	retlw	0
  8588  0863  345A               	retlw	90
  8589  0864  3400               	retlw	0
  8590  0865  3448               	retlw	72
  8591  0866  3400               	retlw	0
  8592  0867  3437               	retlw	55
  8593  0868  3400               	retlw	0
  8594  0869  3424               	retlw	36
  8595  086A  3400               	retlw	0
  8596  086B  3412               	retlw	18
  8597  086C  3400               	retlw	0
  8598  086D  3400               	retlw	0
  8599  086E  3400               	retlw	0
  8600  086F  34FE               	retlw	254
  8601  0870  3403               	retlw	3
  8602  0871  34FE               	retlw	254
  8603  0872  3403               	retlw	3
  8604  0873  34FD               	retlw	253
  8605  0874  3403               	retlw	3
  8606  0875  34FC               	retlw	252
  8607  0876  3403               	retlw	3
  8608  0877  34FB               	retlw	251
  8609  0878  3403               	retlw	3
  8610  0879  34FA               	retlw	250
  8611  087A  3403               	retlw	3
  8612  087B  34F9               	retlw	249
  8613  087C  3403               	retlw	3
  8614  087D  34F7               	retlw	247
  8615  087E  3403               	retlw	3
  8616  087F  34F6               	retlw	246
  8617  0880  3403               	retlw	3
  8618  0881  34F4               	retlw	244
  8619  0882  3403               	retlw	3
  8620  0883  34F2               	retlw	242
  8621  0884  3403               	retlw	3
  8622  0885  34EF               	retlw	239
  8623  0886  3403               	retlw	3
  8624  0887  34ED               	retlw	237
  8625  0888  3403               	retlw	3
  8626  0889  34EA               	retlw	234
  8627  088A  3403               	retlw	3
  8628  088B  34E7               	retlw	231
  8629  088C  3403               	retlw	3
  8630  088D  34E4               	retlw	228
  8631  088E  3403               	retlw	3
  8632  088F  34E0               	retlw	224
  8633  0890  3403               	retlw	3
  8634  0891  34DD               	retlw	221
  8635  0892  3403               	retlw	3
  8636  0893  34D9               	retlw	217
  8637  0894  3403               	retlw	3
  8638  0895  34D5               	retlw	213
  8639  0896  3403               	retlw	3
  8640  0897  34D1               	retlw	209
  8641  0898  3403               	retlw	3
  8642  0899  34CD               	retlw	205
  8643  089A  3403               	retlw	3
  8644  089B  34C8               	retlw	200
  8645  089C  3403               	retlw	3
  8646  089D  34C3               	retlw	195
  8647  089E  3403               	retlw	3
  8648  089F  34BE               	retlw	190
  8649  08A0  3403               	retlw	3
  8650  08A1  34B9               	retlw	185
  8651  08A2  3403               	retlw	3
  8652  08A3  34B3               	retlw	179
  8653  08A4  3403               	retlw	3
  8654  08A5  34AE               	retlw	174
  8655  08A6  3403               	retlw	3
  8656  08A7  34A8               	retlw	168
  8657  08A8  3403               	retlw	3
  8658  08A9  34A2               	retlw	162
  8659  08AA  3403               	retlw	3
  8660  08AB  349C               	retlw	156
  8661  08AC  3403               	retlw	3
  8662  08AD  3495               	retlw	149
  8663  08AE  3403               	retlw	3
  8664  08AF  348F               	retlw	143
  8665  08B0  3403               	retlw	3
  8666  08B1  3488               	retlw	136
  8667  08B2  3403               	retlw	3
  8668  08B3  3481               	retlw	129
  8669  08B4  3403               	retlw	3
  8670  08B5  347A               	retlw	122
  8671  08B6  3403               	retlw	3
  8672  08B7  3472               	retlw	114
  8673  08B8  3403               	retlw	3
  8674  08B9  346A               	retlw	106
  8675  08BA  3403               	retlw	3
  8676  08BB  3463               	retlw	99
  8677  08BC  3403               	retlw	3
  8678  08BD  345A               	retlw	90
  8679  08BE  3403               	retlw	3
  8680  08BF  3452               	retlw	82
  8681  08C0  3403               	retlw	3
  8682  08C1  344A               	retlw	74
  8683  08C2  3403               	retlw	3
  8684  08C3  3441               	retlw	65
  8685  08C4  3403               	retlw	3
  8686  08C5  3438               	retlw	56
  8687  08C6  3403               	retlw	3
  8688  08C7  342F               	retlw	47
  8689  08C8  3403               	retlw	3
  8690  08C9  3426               	retlw	38
  8691  08CA  3403               	retlw	3
  8692  08CB  341C               	retlw	28
  8693  08CC  3403               	retlw	3
  8694  08CD  3413               	retlw	19
  8695  08CE  3403               	retlw	3
  8696  08CF  3409               	retlw	9
  8697  08D0  3403               	retlw	3
  8698  08D1  34FE               	retlw	254
  8699  08D2  3402               	retlw	2
  8700  08D3  34F4               	retlw	244
  8701  08D4  3402               	retlw	2
  8702  08D5  34EA               	retlw	234
  8703  08D6  3402               	retlw	2
  8704  08D7  34DF               	retlw	223
  8705  08D8  3402               	retlw	2
  8706  08D9  34D4               	retlw	212
  8707  08DA  3402               	retlw	2
  8708  08DB  34C9               	retlw	201
  8709  08DC  3402               	retlw	2
  8710  08DD  34BE               	retlw	190
  8711  08DE  3402               	retlw	2
  8712  08DF  34B2               	retlw	178
  8713  08E0  3402               	retlw	2
  8714  08E1  34A6               	retlw	166
  8715  08E2  3402               	retlw	2
  8716  08E3  349A               	retlw	154
  8717  08E4  3402               	retlw	2
  8718  08E5  348E               	retlw	142
  8719  08E6  3402               	retlw	2
  8720  08E7  3482               	retlw	130
  8721  08E8  3402               	retlw	2
  8722  08E9  3475               	retlw	117
  8723  08EA  3402               	retlw	2
  8724  08EB  3468               	retlw	104
  8725  08EC  3402               	retlw	2
  8726  08ED  345B               	retlw	91
  8727  08EE  3402               	retlw	2
  8728  08EF  344E               	retlw	78
  8729  08F0  3402               	retlw	2
  8730  08F1  3441               	retlw	65
  8731  08F2  3402               	retlw	2
  8732  08F3  3433               	retlw	51
  8733  08F4  3402               	retlw	2
  8734  08F5  3425               	retlw	37
  8735  08F6  3402               	retlw	2
  8736  08F7  3417               	retlw	23
  8737  08F8  3402               	retlw	2
  8738  08F9  3409               	retlw	9
  8739  08FA  3402               	retlw	2
  8740  08FB  34FB               	retlw	251
  8741  08FC  3401               	retlw	1
  8742  08FD  34EC               	retlw	236
  8743  08FE  3401               	retlw	1
  8744  08FF  34DD               	retlw	221
  8745  0900  3401               	retlw	1
  8746  0901  34CE               	retlw	206
  8747  0902  3401               	retlw	1
  8748  0903  34BF               	retlw	191
  8749  0904  3401               	retlw	1
  8750  0905  34B0               	retlw	176
  8751  0906  3401               	retlw	1
  8752  0907  34A0               	retlw	160
  8753  0908  3401               	retlw	1
  8754  0909  3490               	retlw	144
  8755  090A  3401               	retlw	1
  8756  090B  3480               	retlw	128
  8757  090C  3401               	retlw	1
  8758  090D  3470               	retlw	112
  8759  090E  3401               	retlw	1
  8760  090F  345F               	retlw	95
  8761  0910  3401               	retlw	1
  8762  0911  344F               	retlw	79
  8763  0912  3401               	retlw	1
  8764  0913  343E               	retlw	62
  8765  0914  3401               	retlw	1
  8766  0915  342D               	retlw	45
  8767  0916  3401               	retlw	1
  8768  0917  341C               	retlw	28
  8769  0918  3401               	retlw	1
  8770  0919  340A               	retlw	10
  8771  091A  3401               	retlw	1
  8772  091B  34F8               	retlw	248
  8773  091C  3400               	retlw	0
  8774  091D  34E7               	retlw	231
  8775  091E  3400               	retlw	0
  8776  091F  34D4               	retlw	212
  8777  0920  3400               	retlw	0
  8778  0921  34C2               	retlw	194
  8779  0922  3400               	retlw	0
  8780  0923  34B0               	retlw	176
  8781  0924  3400               	retlw	0
  8782  0925  349D               	retlw	157
  8783  0926  3400               	retlw	0
  8784  0927  348A               	retlw	138
  8785  0928  3400               	retlw	0
  8786  0929  3477               	retlw	119
  8787  092A  3400               	retlw	0
  8788  092B  3464               	retlw	100
  8789  092C  3400               	retlw	0
  8790  092D  3450               	retlw	80
  8791  092E  3400               	retlw	0
  8792  092F  343C               	retlw	60
  8793  0930  3400               	retlw	0
  8794  0931  3428               	retlw	40
  8795  0932  3400               	retlw	0
  8796  0933  3414               	retlw	20
  8797  0934  3400               	retlw	0
  8798  0935  3400               	retlw	0
  8799  0936  3400               	retlw	0
  8800  0937  34FE               	retlw	254
  8801  0938  3403               	retlw	3
  8802  0939  34FE               	retlw	254
  8803  093A  3403               	retlw	3
  8804  093B  34FE               	retlw	254
  8805  093C  3403               	retlw	3
  8806  093D  34FD               	retlw	253
  8807  093E  3403               	retlw	3
  8808  093F  34FD               	retlw	253
  8809  0940  3403               	retlw	3
  8810  0941  34FC               	retlw	252
  8811  0942  3403               	retlw	3
  8812  0943  34FB               	retlw	251
  8813  0944  3403               	retlw	3
  8814  0945  34FA               	retlw	250
  8815  0946  3403               	retlw	3
  8816  0947  34F9               	retlw	249
  8817  0948  3403               	retlw	3
  8818  0949  34F8               	retlw	248
  8819  094A  3403               	retlw	3
  8820  094B  34F6               	retlw	246
  8821  094C  3403               	retlw	3
  8822  094D  34F4               	retlw	244
  8823  094E  3403               	retlw	3
  8824  094F  34F3               	retlw	243
  8825  0950  3403               	retlw	3
  8826  0951  34F0               	retlw	240
  8827  0952  3403               	retlw	3
  8828  0953  34EE               	retlw	238
  8829  0954  3403               	retlw	3
  8830  0955  34EC               	retlw	236
  8831  0956  3403               	retlw	3
  8832  0957  34E9               	retlw	233
  8833  0958  3403               	retlw	3
  8834  0959  34E7               	retlw	231
  8835  095A  3403               	retlw	3
  8836  095B  34E4               	retlw	228
  8837  095C  3403               	retlw	3
  8838  095D  34E0               	retlw	224
  8839  095E  3403               	retlw	3
  8840  095F  34DD               	retlw	221
  8841  0960  3403               	retlw	3
  8842  0961  34D9               	retlw	217
  8843  0962  3403               	retlw	3
  8844  0963  34D6               	retlw	214
  8845  0964  3403               	retlw	3
  8846  0965  34D2               	retlw	210
  8847  0966  3403               	retlw	3
  8848  0967  34CE               	retlw	206
  8849  0968  3403               	retlw	3
  8850  0969  34C9               	retlw	201
  8851  096A  3403               	retlw	3
  8852  096B  34C5               	retlw	197
  8853  096C  3403               	retlw	3
  8854  096D  34C0               	retlw	192
  8855  096E  3403               	retlw	3
  8856  096F  34BB               	retlw	187
  8857  0970  3403               	retlw	3
  8858  0971  34B6               	retlw	182
  8859  0972  3403               	retlw	3
  8860  0973  34B0               	retlw	176
  8861  0974  3403               	retlw	3
  8862  0975  34AB               	retlw	171
  8863  0976  3403               	retlw	3
  8864  0977  34A5               	retlw	165
  8865  0978  3403               	retlw	3
  8866  0979  349F               	retlw	159
  8867  097A  3403               	retlw	3
  8868  097B  3499               	retlw	153
  8869  097C  3403               	retlw	3
  8870  097D  3492               	retlw	146
  8871  097E  3403               	retlw	3
  8872  097F  348B               	retlw	139
  8873  0980  3403               	retlw	3
  8874  0981  3484               	retlw	132
  8875  0982  3403               	retlw	3
  8876  0983  347D               	retlw	125
  8877  0984  3403               	retlw	3
  8878  0985  3476               	retlw	118
  8879  0986  3403               	retlw	3
  8880  0987  346E               	retlw	110
  8881  0988  3403               	retlw	3
  8882  0989  3466               	retlw	102
  8883  098A  3403               	retlw	3
  8884  098B  345E               	retlw	94
  8885  098C  3403               	retlw	3
  8886  098D  3456               	retlw	86
  8887  098E  3403               	retlw	3
  8888  098F  344E               	retlw	78
  8889  0990  3403               	retlw	3
  8890  0991  3445               	retlw	69
  8891  0992  3403               	retlw	3
  8892  0993  343C               	retlw	60
  8893  0994  3403               	retlw	3
  8894  0995  3433               	retlw	51
  8895  0996  3403               	retlw	3
  8896  0997  3429               	retlw	41
  8897  0998  3403               	retlw	3
  8898  0999  3420               	retlw	32
  8899  099A  3403               	retlw	3
  8900  099B  3416               	retlw	22
  8901  099C  3403               	retlw	3
  8902  099D  340C               	retlw	12
  8903  099E  3403               	retlw	3
  8904  099F  3401               	retlw	1
  8905  09A0  3403               	retlw	3
  8906  09A1  34F7               	retlw	247
  8907  09A2  3402               	retlw	2
  8908  09A3  34EC               	retlw	236
  8909  09A4  3402               	retlw	2
  8910  09A5  34E1               	retlw	225
  8911  09A6  3402               	retlw	2
  8912  09A7  34D5               	retlw	213
  8913  09A8  3402               	retlw	2
  8914  09A9  34CA               	retlw	202
  8915  09AA  3402               	retlw	2
  8916  09AB  34BE               	retlw	190
  8917  09AC  3402               	retlw	2
  8918  09AD  34B2               	retlw	178
  8919  09AE  3402               	retlw	2
  8920  09AF  34A6               	retlw	166
  8921  09B0  3402               	retlw	2
  8922  09B1  3499               	retlw	153
  8923  09B2  3402               	retlw	2
  8924  09B3  348C               	retlw	140
  8925  09B4  3402               	retlw	2
  8926  09B5  347F               	retlw	127
  8927  09B6  3402               	retlw	2
  8928  09B7  3472               	retlw	114
  8929  09B8  3402               	retlw	2
  8930  09B9  3464               	retlw	100
  8931  09BA  3402               	retlw	2
  8932  09BB  3457               	retlw	87
  8933  09BC  3402               	retlw	2
  8934  09BD  3449               	retlw	73
  8935  09BE  3402               	retlw	2
  8936  09BF  343A               	retlw	58
  8937  09C0  3402               	retlw	2
  8938  09C1  342C               	retlw	44
  8939  09C2  3402               	retlw	2
  8940  09C3  341D               	retlw	29
  8941  09C4  3402               	retlw	2
  8942  09C5  340E               	retlw	14
  8943  09C6  3402               	retlw	2
  8944  09C7  34FF               	retlw	255
  8945  09C8  3401               	retlw	1
  8946  09C9  34EF               	retlw	239
  8947  09CA  3401               	retlw	1
  8948  09CB  34DF               	retlw	223
  8949  09CC  3401               	retlw	1
  8950  09CD  34CF               	retlw	207
  8951  09CE  3401               	retlw	1
  8952  09CF  34BF               	retlw	191
  8953  09D0  3401               	retlw	1
  8954  09D1  34AE               	retlw	174
  8955  09D2  3401               	retlw	1
  8956  09D3  349E               	retlw	158
  8957  09D4  3401               	retlw	1
  8958  09D5  348C               	retlw	140
  8959  09D6  3401               	retlw	1
  8960  09D7  347B               	retlw	123
  8961  09D8  3401               	retlw	1
  8962  09D9  346A               	retlw	106
  8963  09DA  3401               	retlw	1
  8964  09DB  3458               	retlw	88
  8965  09DC  3401               	retlw	1
  8966  09DD  3446               	retlw	70
  8967  09DE  3401               	retlw	1
  8968  09DF  3433               	retlw	51
  8969  09E0  3401               	retlw	1
  8970  09E1  3421               	retlw	33
  8971  09E2  3401               	retlw	1
  8972  09E3  340E               	retlw	14
  8973  09E4  3401               	retlw	1
  8974  09E5  34FB               	retlw	251
  8975  09E6  3400               	retlw	0
  8976  09E7  34E7               	retlw	231
  8977  09E8  3400               	retlw	0
  8978  09E9  34D3               	retlw	211
  8979  09EA  3400               	retlw	0
  8980  09EB  34BF               	retlw	191
  8981  09EC  3400               	retlw	0
  8982  09ED  34AB               	retlw	171
  8983  09EE  3400               	retlw	0
  8984  09EF  3497               	retlw	151
  8985  09F0  3400               	retlw	0
  8986  09F1  3482               	retlw	130
  8987  09F2  3400               	retlw	0
  8988  09F3  346D               	retlw	109
  8989  09F4  3400               	retlw	0
  8990  09F5  3458               	retlw	88
  8991  09F6  3400               	retlw	0
  8992  09F7  3442               	retlw	66
  8993  09F8  3400               	retlw	0
  8994  09F9  342C               	retlw	44
  8995  09FA  3400               	retlw	0
  8996  09FB  3416               	retlw	22
  8997  09FC  3400               	retlw	0
  8998  09FD  3400               	retlw	0
  8999  09FE  3400               	retlw	0
  9000  09FF  34FE               	retlw	254
  9001  0A00  3403               	retlw	3
  9002  0A01  34FE               	retlw	254
  9003  0A02  3403               	retlw	3
  9004  0A03  34FE               	retlw	254
  9005  0A04  3403               	retlw	3
  9006  0A05  34FE               	retlw	254
  9007  0A06  3403               	retlw	3
  9008  0A07  34FD               	retlw	253
  9009  0A08  3403               	retlw	3
  9010  0A09  34FD               	retlw	253
  9011  0A0A  3403               	retlw	3
  9012  0A0B  34FC               	retlw	252
  9013  0A0C  3403               	retlw	3
  9014  0A0D  34FC               	retlw	252
  9015  0A0E  3403               	retlw	3
  9016  0A0F  34FB               	retlw	251
  9017  0A10  3403               	retlw	3
  9018  0A11  34FA               	retlw	250
  9019  0A12  3403               	retlw	3
  9020  0A13  34F9               	retlw	249
  9021  0A14  3403               	retlw	3
  9022  0A15  34F8               	retlw	248
  9023  0A16  3403               	retlw	3
  9024  0A17  34F6               	retlw	246
  9025  0A18  3403               	retlw	3
  9026  0A19  34F5               	retlw	245
  9027  0A1A  3403               	retlw	3
  9028  0A1B  34F3               	retlw	243
  9029  0A1C  3403               	retlw	3
  9030  0A1D  34F1               	retlw	241
  9031  0A1E  3403               	retlw	3
  9032  0A1F  34EF               	retlw	239
  9033  0A20  3403               	retlw	3
  9034  0A21  34ED               	retlw	237
  9035  0A22  3403               	retlw	3
  9036  0A23  34EB               	retlw	235
  9037  0A24  3403               	retlw	3
  9038  0A25  34E9               	retlw	233
  9039  0A26  3403               	retlw	3
  9040  0A27  34E6               	retlw	230
  9041  0A28  3403               	retlw	3
  9042  0A29  34E3               	retlw	227
  9043  0A2A  3403               	retlw	3
  9044  0A2B  34E0               	retlw	224
  9045  0A2C  3403               	retlw	3
  9046  0A2D  34DD               	retlw	221
  9047  0A2E  3403               	retlw	3
  9048  0A2F  34D9               	retlw	217
  9049  0A30  3403               	retlw	3
  9050  0A31  34D6               	retlw	214
  9051  0A32  3403               	retlw	3
  9052  0A33  34D2               	retlw	210
  9053  0A34  3403               	retlw	3
  9054  0A35  34CE               	retlw	206
  9055  0A36  3403               	retlw	3
  9056  0A37  34CA               	retlw	202
  9057  0A38  3403               	retlw	3
  9058  0A39  34C5               	retlw	197
  9059  0A3A  3403               	retlw	3
  9060  0A3B  34C1               	retlw	193
  9061  0A3C  3403               	retlw	3
  9062  0A3D  34BC               	retlw	188
  9063  0A3E  3403               	retlw	3
  9064  0A3F  34B7               	retlw	183
  9065  0A40  3403               	retlw	3
  9066  0A41  34B1               	retlw	177
  9067  0A42  3403               	retlw	3
  9068  0A43  34AC               	retlw	172
  9069  0A44  3403               	retlw	3
  9070  0A45  34A6               	retlw	166
  9071  0A46  3403               	retlw	3
  9072  0A47  34A0               	retlw	160
  9073  0A48  3403               	retlw	3
  9074  0A49  349A               	retlw	154
  9075  0A4A  3403               	retlw	3
  9076  0A4B  3493               	retlw	147
  9077  0A4C  3403               	retlw	3
  9078  0A4D  348D               	retlw	141
  9079  0A4E  3403               	retlw	3
  9080  0A4F  3486               	retlw	134
  9081  0A50  3403               	retlw	3
  9082  0A51  347F               	retlw	127
  9083  0A52  3403               	retlw	3
  9084  0A53  3477               	retlw	119
  9085  0A54  3403               	retlw	3
  9086  0A55  3470               	retlw	112
  9087  0A56  3403               	retlw	3
  9088  0A57  3468               	retlw	104
  9089  0A58  3403               	retlw	3
  9090  0A59  345F               	retlw	95
  9091  0A5A  3403               	retlw	3
  9092  0A5B  3457               	retlw	87
  9093  0A5C  3403               	retlw	3
  9094  0A5D  344E               	retlw	78
  9095  0A5E  3403               	retlw	3
  9096  0A5F  3446               	retlw	70
  9097  0A60  3403               	retlw	3
  9098  0A61  343C               	retlw	60
  9099  0A62  3403               	retlw	3
  9100  0A63  3433               	retlw	51
  9101  0A64  3403               	retlw	3
  9102  0A65  3429               	retlw	41
  9103  0A66  3403               	retlw	3
  9104  0A67  341F               	retlw	31
  9105  0A68  3403               	retlw	3
  9106  0A69  3415               	retlw	21
  9107  0A6A  3403               	retlw	3
  9108  0A6B  340B               	retlw	11
  9109  0A6C  3403               	retlw	3
  9110  0A6D  3400               	retlw	0
  9111  0A6E  3403               	retlw	3
  9112  0A6F  34F5               	retlw	245
  9113  0A70  3402               	retlw	2
  9114  0A71  34EA               	retlw	234
  9115  0A72  3402               	retlw	2
  9116  0A73  34DE               	retlw	222
  9117  0A74  3402               	retlw	2
  9118  0A75  34D2               	retlw	210
  9119  0A76  3402               	retlw	2
  9120  0A77  34C6               	retlw	198
  9121  0A78  3402               	retlw	2
  9122  0A79  34BA               	retlw	186
  9123  0A7A  3402               	retlw	2
  9124  0A7B  34AD               	retlw	173
  9125  0A7C  3402               	retlw	2
  9126  0A7D  34A0               	retlw	160
  9127  0A7E  3402               	retlw	2
  9128  0A7F  3493               	retlw	147
  9129  0A80  3402               	retlw	2
  9130  0A81  3485               	retlw	133
  9131  0A82  3402               	retlw	2
  9132  0A83  3477               	retlw	119
  9133  0A84  3402               	retlw	2
  9134  0A85  3469               	retlw	105
  9135  0A86  3402               	retlw	2
  9136  0A87  345B               	retlw	91
  9137  0A88  3402               	retlw	2
  9138  0A89  344C               	retlw	76
  9139  0A8A  3402               	retlw	2
  9140  0A8B  343D               	retlw	61
  9141  0A8C  3402               	retlw	2
  9142  0A8D  342D               	retlw	45
  9143  0A8E  3402               	retlw	2
  9144  0A8F  341E               	retlw	30
  9145  0A90  3402               	retlw	2
  9146  0A91  340E               	retlw	14
  9147  0A92  3402               	retlw	2
  9148  0A93  34FE               	retlw	254
  9149  0A94  3401               	retlw	1
  9150  0A95  34ED               	retlw	237
  9151  0A96  3401               	retlw	1
  9152  0A97  34DC               	retlw	220
  9153  0A98  3401               	retlw	1
  9154  0A99  34CB               	retlw	203
  9155  0A9A  3401               	retlw	1
  9156  0A9B  34BA               	retlw	186
  9157  0A9C  3401               	retlw	1
  9158  0A9D  34A8               	retlw	168
  9159  0A9E  3401               	retlw	1
  9160  0A9F  3496               	retlw	150
  9161  0AA0  3401               	retlw	1
  9162  0AA1  3483               	retlw	131
  9163  0AA2  3401               	retlw	1
  9164  0AA3  3471               	retlw	113
  9165  0AA4  3401               	retlw	1
  9166  0AA5  345D               	retlw	93
  9167  0AA6  3401               	retlw	1
  9168  0AA7  344A               	retlw	74
  9169  0AA8  3401               	retlw	1
  9170  0AA9  3436               	retlw	54
  9171  0AAA  3401               	retlw	1
  9172  0AAB  3422               	retlw	34
  9173  0AAC  3401               	retlw	1
  9174  0AAD  340E               	retlw	14
  9175  0AAE  3401               	retlw	1
  9176  0AAF  34F9               	retlw	249
  9177  0AB0  3400               	retlw	0
  9178  0AB1  34E4               	retlw	228
  9179  0AB2  3400               	retlw	0
  9180  0AB3  34CF               	retlw	207
  9181  0AB4  3400               	retlw	0
  9182  0AB5  34B9               	retlw	185
  9183  0AB6  3400               	retlw	0
  9184  0AB7  34A3               	retlw	163
  9185  0AB8  3400               	retlw	0
  9186  0AB9  348D               	retlw	141
  9187  0ABA  3400               	retlw	0
  9188  0ABB  3476               	retlw	118
  9189  0ABC  3400               	retlw	0
  9190  0ABD  345F               	retlw	95
  9191  0ABE  3400               	retlw	0
  9192  0ABF  3448               	retlw	72
  9193  0AC0  3400               	retlw	0
  9194  0AC1  3430               	retlw	48
  9195  0AC2  3400               	retlw	0
  9196  0AC3  3418               	retlw	24
  9197  0AC4  3400               	retlw	0
  9198  0AC5  3400               	retlw	0
  9199  0AC6  3400               	retlw	0
  9200  0AC7  34FE               	retlw	254
  9201  0AC8  3403               	retlw	3
  9202  0AC9  34FE               	retlw	254
  9203  0ACA  3403               	retlw	3
  9204  0ACB  34FE               	retlw	254
  9205  0ACC  3403               	retlw	3
  9206  0ACD  34FE               	retlw	254
  9207  0ACE  3403               	retlw	3
  9208  0ACF  34FE               	retlw	254
  9209  0AD0  3403               	retlw	3
  9210  0AD1  34FD               	retlw	253
  9211  0AD2  3403               	retlw	3
  9212  0AD3  34FD               	retlw	253
  9213  0AD4  3403               	retlw	3
  9214  0AD5  34FD               	retlw	253
  9215  0AD6  3403               	retlw	3
  9216  0AD7  34FC               	retlw	252
  9217  0AD8  3403               	retlw	3
  9218  0AD9  34FB               	retlw	251
  9219  0ADA  3403               	retlw	3
  9220  0ADB  34FB               	retlw	251
  9221  0ADC  3403               	retlw	3
  9222  0ADD  34FA               	retlw	250
  9223  0ADE  3403               	retlw	3
  9224  0ADF  34F9               	retlw	249
  9225  0AE0  3403               	retlw	3
  9226  0AE1  34F8               	retlw	248
  9227  0AE2  3403               	retlw	3
  9228  0AE3  34F7               	retlw	247
  9229  0AE4  3403               	retlw	3
  9230  0AE5  34F5               	retlw	245
  9231  0AE6  3403               	retlw	3
  9232  0AE7  34F4               	retlw	244
  9233  0AE8  3403               	retlw	3
  9234  0AE9  34F2               	retlw	242
  9235  0AEA  3403               	retlw	3
  9236  0AEB  34F0               	retlw	240
  9237  0AEC  3403               	retlw	3
  9238  0AED  34EE               	retlw	238
  9239  0AEE  3403               	retlw	3
  9240  0AEF  34EC               	retlw	236
  9241  0AF0  3403               	retlw	3
  9242  0AF1  34EA               	retlw	234
  9243  0AF2  3403               	retlw	3
  9244  0AF3  34E8               	retlw	232
  9245  0AF4  3403               	retlw	3
  9246  0AF5  34E5               	retlw	229
  9247  0AF6  3403               	retlw	3
  9248  0AF7  34E2               	retlw	226
  9249  0AF8  3403               	retlw	3
  9250  0AF9  34DF               	retlw	223
  9251  0AFA  3403               	retlw	3
  9252  0AFB  34DC               	retlw	220
  9253  0AFC  3403               	retlw	3
  9254  0AFD  34D9               	retlw	217
  9255  0AFE  3403               	retlw	3
  9256  0AFF  34D5               	retlw	213
  9257  0B00  3403               	retlw	3
  9258  0B01  34D1               	retlw	209
  9259  0B02  3403               	retlw	3
  9260  0B03  34CD               	retlw	205
  9261  0B04  3403               	retlw	3
  9262  0B05  34C9               	retlw	201
  9263  0B06  3403               	retlw	3
  9264  0B07  34C5               	retlw	197
  9265  0B08  3403               	retlw	3
  9266  0B09  34C0               	retlw	192
  9267  0B0A  3403               	retlw	3
  9268  0B0B  34BB               	retlw	187
  9269  0B0C  3403               	retlw	3
  9270  0B0D  34B6               	retlw	182
  9271  0B0E  3403               	retlw	3
  9272  0B0F  34B1               	retlw	177
  9273  0B10  3403               	retlw	3
  9274  0B11  34AB               	retlw	171
  9275  0B12  3403               	retlw	3
  9276  0B13  34A6               	retlw	166
  9277  0B14  3403               	retlw	3
  9278  0B15  34A0               	retlw	160
  9279  0B16  3403               	retlw	3
  9280  0B17  3499               	retlw	153
  9281  0B18  3403               	retlw	3
  9282  0B19  3493               	retlw	147
  9283  0B1A  3403               	retlw	3
  9284  0B1B  348C               	retlw	140
  9285  0B1C  3403               	retlw	3
  9286  0B1D  3485               	retlw	133
  9287  0B1E  3403               	retlw	3
  9288  0B1F  347E               	retlw	126
  9289  0B20  3403               	retlw	3
  9290  0B21  3476               	retlw	118
  9291  0B22  3403               	retlw	3
  9292  0B23  346E               	retlw	110
  9293  0B24  3403               	retlw	3
  9294  0B25  3466               	retlw	102
  9295  0B26  3403               	retlw	3
  9296  0B27  345E               	retlw	94
  9297  0B28  3403               	retlw	3
  9298  0B29  3455               	retlw	85
  9299  0B2A  3403               	retlw	3
  9300  0B2B  344D               	retlw	77
  9301  0B2C  3403               	retlw	3
  9302  0B2D  3443               	retlw	67
  9303  0B2E  3403               	retlw	3
  9304  0B2F  343A               	retlw	58
  9305  0B30  3403               	retlw	3
  9306  0B31  3430               	retlw	48
  9307  0B32  3403               	retlw	3
  9308  0B33  3426               	retlw	38
  9309  0B34  3403               	retlw	3
  9310  0B35  341C               	retlw	28
  9311  0B36  3403               	retlw	3
  9312  0B37  3411               	retlw	17
  9313  0B38  3403               	retlw	3
  9314  0B39  3406               	retlw	6
  9315  0B3A  3403               	retlw	3
  9316  0B3B  34FB               	retlw	251
  9317  0B3C  3402               	retlw	2
  9318  0B3D  34EF               	retlw	239
  9319  0B3E  3402               	retlw	2
  9320  0B3F  34E3               	retlw	227
  9321  0B40  3402               	retlw	2
  9322  0B41  34D7               	retlw	215
  9323  0B42  3402               	retlw	2
  9324  0B43  34CB               	retlw	203
  9325  0B44  3402               	retlw	2
  9326  0B45  34BE               	retlw	190
  9327  0B46  3402               	retlw	2
  9328  0B47  34B1               	retlw	177
  9329  0B48  3402               	retlw	2
  9330  0B49  34A3               	retlw	163
  9331  0B4A  3402               	retlw	2
  9332  0B4B  3495               	retlw	149
  9333  0B4C  3402               	retlw	2
  9334  0B4D  3487               	retlw	135
  9335  0B4E  3402               	retlw	2
  9336  0B4F  3479               	retlw	121
  9337  0B50  3402               	retlw	2
  9338  0B51  346A               	retlw	106
  9339  0B52  3402               	retlw	2
  9340  0B53  345B               	retlw	91
  9341  0B54  3402               	retlw	2
  9342  0B55  344B               	retlw	75
  9343  0B56  3402               	retlw	2
  9344  0B57  343B               	retlw	59
  9345  0B58  3402               	retlw	2
  9346  0B59  342B               	retlw	43
  9347  0B5A  3402               	retlw	2
  9348  0B5B  341A               	retlw	26
  9349  0B5C  3402               	retlw	2
  9350  0B5D  3409               	retlw	9
  9351  0B5E  3402               	retlw	2
  9352  0B5F  34F8               	retlw	248
  9353  0B60  3401               	retlw	1
  9354  0B61  34E6               	retlw	230
  9355  0B62  3401               	retlw	1
  9356  0B63  34D4               	retlw	212
  9357  0B64  3401               	retlw	1
  9358  0B65  34C2               	retlw	194
  9359  0B66  3401               	retlw	1
  9360  0B67  34AF               	retlw	175
  9361  0B68  3401               	retlw	1
  9362  0B69  349C               	retlw	156
  9363  0B6A  3401               	retlw	1
  9364  0B6B  3488               	retlw	136
  9365  0B6C  3401               	retlw	1
  9366  0B6D  3475               	retlw	117
  9367  0B6E  3401               	retlw	1
  9368  0B6F  3460               	retlw	96
  9369  0B70  3401               	retlw	1
  9370  0B71  344C               	retlw	76
  9371  0B72  3401               	retlw	1
  9372  0B73  3436               	retlw	54
  9373  0B74  3401               	retlw	1
  9374  0B75  3421               	retlw	33
  9375  0B76  3401               	retlw	1
  9376  0B77  340B               	retlw	11
  9377  0B78  3401               	retlw	1
  9378  0B79  34F5               	retlw	245
  9379  0B7A  3400               	retlw	0
  9380  0B7B  34DE               	retlw	222
  9381  0B7C  3400               	retlw	0
  9382  0B7D  34C7               	retlw	199
  9383  0B7E  3400               	retlw	0
  9384  0B7F  34B0               	retlw	176
  9385  0B80  3400               	retlw	0
  9386  0B81  3498               	retlw	152
  9387  0B82  3400               	retlw	0
  9388  0B83  3480               	retlw	128
  9389  0B84  3400               	retlw	0
  9390  0B85  3467               	retlw	103
  9391  0B86  3400               	retlw	0
  9392  0B87  344E               	retlw	78
  9393  0B88  3400               	retlw	0
  9394  0B89  3434               	retlw	52
  9395  0B8A  3400               	retlw	0
  9396  0B8B  341A               	retlw	26
  9397  0B8C  3400               	retlw	0
  9398  0B8D  3400               	retlw	0
  9399  0B8E  3400               	retlw	0
  9400  0B8F  34FE               	retlw	254
  9401  0B90  3403               	retlw	3
  9402  0B91  34FE               	retlw	254
  9403  0B92  3403               	retlw	3
  9404  0B93  34FE               	retlw	254
  9405  0B94  3403               	retlw	3
  9406  0B95  34FE               	retlw	254
  9407  0B96  3403               	retlw	3
  9408  0B97  34FE               	retlw	254
  9409  0B98  3403               	retlw	3
  9410  0B99  34FE               	retlw	254
  9411  0B9A  3403               	retlw	3
  9412  0B9B  34FD               	retlw	253
  9413  0B9C  3403               	retlw	3
  9414  0B9D  34FD               	retlw	253
  9415  0B9E  3403               	retlw	3
  9416  0B9F  34FD               	retlw	253
  9417  0BA0  3403               	retlw	3
  9418  0BA1  34FC               	retlw	252
  9419  0BA2  3403               	retlw	3
  9420  0BA3  34FC               	retlw	252
  9421  0BA4  3403               	retlw	3
  9422  0BA5  34FB               	retlw	251
  9423  0BA6  3403               	retlw	3
  9424  0BA7  34FB               	retlw	251
  9425  0BA8  3403               	retlw	3
  9426  0BA9  34FA               	retlw	250
  9427  0BAA  3403               	retlw	3
  9428  0BAB  34F9               	retlw	249
  9429  0BAC  3403               	retlw	3
  9430  0BAD  34F8               	retlw	248
  9431  0BAE  3403               	retlw	3
  9432  0BAF  34F7               	retlw	247
  9433  0BB0  3403               	retlw	3
  9434  0BB1  34F6               	retlw	246
  9435  0BB2  3403               	retlw	3
  9436  0BB3  34F4               	retlw	244
  9437  0BB4  3403               	retlw	3
  9438  0BB5  34F3               	retlw	243
  9439  0BB6  3403               	retlw	3
  9440  0BB7  34F1               	retlw	241
  9441  0BB8  3403               	retlw	3
  9442  0BB9  34EF               	retlw	239
  9443  0BBA  3403               	retlw	3
  9444  0BBB  34ED               	retlw	237
  9445  0BBC  3403               	retlw	3
  9446  0BBD  34EB               	retlw	235
  9447  0BBE  3403               	retlw	3
  9448  0BBF  34E9               	retlw	233
  9449  0BC0  3403               	retlw	3
  9450  0BC1  34E6               	retlw	230
  9451  0BC2  3403               	retlw	3
  9452  0BC3  34E4               	retlw	228
  9453  0BC4  3403               	retlw	3
  9454  0BC5  34E1               	retlw	225
  9455  0BC6  3403               	retlw	3
  9456  0BC7  34DE               	retlw	222
  9457  0BC8  3403               	retlw	3
  9458  0BC9  34DB               	retlw	219
  9459  0BCA  3403               	retlw	3
  9460  0BCB  34D8               	retlw	216
  9461  0BCC  3403               	retlw	3
  9462  0BCD  34D4               	retlw	212
  9463  0BCE  3403               	retlw	3
  9464  0BCF  34D0               	retlw	208
  9465  0BD0  3403               	retlw	3
  9466  0BD1  34CC               	retlw	204
  9467  0BD2  3403               	retlw	3
  9468  0BD3  34C8               	retlw	200
  9469  0BD4  3403               	retlw	3
  9470  0BD5  34C4               	retlw	196
  9471  0BD6  3403               	retlw	3
  9472  0BD7  34BF               	retlw	191
  9473  0BD8  3403               	retlw	3
  9474  0BD9  34BA               	retlw	186
  9475  0BDA  3403               	retlw	3
  9476  0BDB  34B5               	retlw	181
  9477  0BDC  3403               	retlw	3
  9478  0BDD  34AF               	retlw	175
  9479  0BDE  3403               	retlw	3
  9480  0BDF  34AA               	retlw	170
  9481  0BE0  3403               	retlw	3
  9482  0BE1  34A4               	retlw	164
  9483  0BE2  3403               	retlw	3
  9484  0BE3  349E               	retlw	158
  9485  0BE4  3403               	retlw	3
  9486  0BE5  3497               	retlw	151
  9487  0BE6  3403               	retlw	3
  9488  0BE7  3491               	retlw	145
  9489  0BE8  3403               	retlw	3
  9490  0BE9  348A               	retlw	138
  9491  0BEA  3403               	retlw	3
  9492  0BEB  3483               	retlw	131
  9493  0BEC  3403               	retlw	3
  9494  0BED  347B               	retlw	123
  9495  0BEE  3403               	retlw	3
  9496  0BEF  3473               	retlw	115
  9497  0BF0  3403               	retlw	3
  9498  0BF1  346B               	retlw	107
  9499  0BF2  3403               	retlw	3
  9500  0BF3  3463               	retlw	99
  9501  0BF4  3403               	retlw	3
  9502  0BF5  345A               	retlw	90
  9503  0BF6  3403               	retlw	3
  9504  0BF7  3451               	retlw	81
  9505  0BF8  3403               	retlw	3
  9506  0BF9  3448               	retlw	72
  9507  0BFA  3403               	retlw	3
  9508  0BFB  343E               	retlw	62
  9509  0BFC  3403               	retlw	3
  9510  0BFD  3434               	retlw	52
  9511  0BFE  3403               	retlw	3
  9512  0BFF  342A               	retlw	42
  9513  0C00  3403               	retlw	3
  9514  0C01  3420               	retlw	32
  9515  0C02  3403               	retlw	3
  9516  0C03  3415               	retlw	21
  9517  0C04  3403               	retlw	3
  9518  0C05  340A               	retlw	10
  9519  0C06  3403               	retlw	3
  9520  0C07  34FE               	retlw	254
  9521  0C08  3402               	retlw	2
  9522  0C09  34F2               	retlw	242
  9523  0C0A  3402               	retlw	2
  9524  0C0B  34E6               	retlw	230
  9525  0C0C  3402               	retlw	2
  9526  0C0D  34D9               	retlw	217
  9527  0C0E  3402               	retlw	2
  9528  0C0F  34CC               	retlw	204
  9529  0C10  3402               	retlw	2
  9530  0C11  34BF               	retlw	191
  9531  0C12  3402               	retlw	2
  9532  0C13  34B1               	retlw	177
  9533  0C14  3402               	retlw	2
  9534  0C15  34A3               	retlw	163
  9535  0C16  3402               	retlw	2
  9536  0C17  3494               	retlw	148
  9537  0C18  3402               	retlw	2
  9538  0C19  3486               	retlw	134
  9539  0C1A  3402               	retlw	2
  9540  0C1B  3476               	retlw	118
  9541  0C1C  3402               	retlw	2
  9542  0C1D  3467               	retlw	103
  9543  0C1E  3402               	retlw	2
  9544  0C1F  3457               	retlw	87
  9545  0C20  3402               	retlw	2
  9546  0C21  3446               	retlw	70
  9547  0C22  3402               	retlw	2
  9548  0C23  3435               	retlw	53
  9549  0C24  3402               	retlw	2
  9550  0C25  3424               	retlw	36
  9551  0C26  3402               	retlw	2
  9552  0C27  3412               	retlw	18
  9553  0C28  3402               	retlw	2
  9554  0C29  3400               	retlw	0
  9555  0C2A  3402               	retlw	2
  9556  0C2B  34EE               	retlw	238
  9557  0C2C  3401               	retlw	1
  9558  0C2D  34DB               	retlw	219
  9559  0C2E  3401               	retlw	1
  9560  0C2F  34C7               	retlw	199
  9561  0C30  3401               	retlw	1
  9562  0C31  34B4               	retlw	180
  9563  0C32  3401               	retlw	1
  9564  0C33  349F               	retlw	159
  9565  0C34  3401               	retlw	1
  9566  0C35  348B               	retlw	139
  9567  0C36  3401               	retlw	1
  9568  0C37  3476               	retlw	118
  9569  0C38  3401               	retlw	1
  9570  0C39  3460               	retlw	96
  9571  0C3A  3401               	retlw	1
  9572  0C3B  344A               	retlw	74
  9573  0C3C  3401               	retlw	1
  9574  0C3D  3433               	retlw	51
  9575  0C3E  3401               	retlw	1
  9576  0C3F  341D               	retlw	29
  9577  0C40  3401               	retlw	1
  9578  0C41  3405               	retlw	5
  9579  0C42  3401               	retlw	1
  9580  0C43  34ED               	retlw	237
  9581  0C44  3400               	retlw	0
  9582  0C45  34D5               	retlw	213
  9583  0C46  3400               	retlw	0
  9584  0C47  34BC               	retlw	188
  9585  0C48  3400               	retlw	0
  9586  0C49  34A3               	retlw	163
  9587  0C4A  3400               	retlw	0
  9588  0C4B  3489               	retlw	137
  9589  0C4C  3400               	retlw	0
  9590  0C4D  346E               	retlw	110
  9591  0C4E  3400               	retlw	0
  9592  0C4F  3454               	retlw	84
  9593  0C50  3400               	retlw	0
  9594  0C51  3438               	retlw	56
  9595  0C52  3400               	retlw	0
  9596  0C53  341C               	retlw	28
  9597  0C54  3400               	retlw	0
  9598  0C55  3400               	retlw	0
  9599  0C56  3400               	retlw	0
  9600  0C57                     __end_of_gamma_table:	
  9601  0003                     _STATUSbits	set	3
  9602  000E                     _PORTCbits	set	14
  9603  000D                     _PORTBbits	set	13
  9604  000C                     _PORTAbits	set	12
  9605  001F                     _T2CON	set	31
  9606  001D                     _TMR2	set	29
  9607  001E                     _PR2	set	30
  9608  0011                     _PIR1bits	set	17
  9609  0013                     _PIR3bits	set	19
  9610  000B                     _INTCONbits	set	11
  9611  008E                     _TRISCbits	set	142
  9612  009D                     _ADCON0bits	set	157
  9613  009C                     _ADRESH	set	156
  9614  009B                     _ADRESL	set	155
  9615  009F                     _ADACT	set	159
  9616  009E                     _ADCON1	set	158
  9617  009D                     _ADCON0	set	157
  9618  008E                     _TRISC	set	142
  9619  008D                     _TRISB	set	141
  9620  008C                     _TRISA	set	140
  9621  0091                     _PIE1bits	set	145
  9622  0093                     _PIE3bits	set	147
  9623  0097                     _WDTCON	set	151
  9624  010E                     _LATCbits	set	270
  9625  010D                     _LATBbits	set	269
  9626  010E                     _LATC	set	270
  9627  010D                     _LATB	set	269
  9628  010C                     _LATA	set	268
  9629  018E                     _ANSELCbits	set	398
  9630  018C                     _ANSELA	set	396
  9631  018D                     _ANSELB	set	397
  9632  018E                     _ANSELC	set	398
  9633  020E                     _WPUCbits	set	526
  9634  020D                     _WPUBbits	set	525
  9635  020E                     _WPUC	set	526
  9636  020C                     _WPUA	set	524
  9637  020D                     _WPUB	set	525
  9638  0215                     _SSP1CON1bits	set	533
  9639  0216                     _SSP1CON2bits	set	534
  9640  0214                     _SSP1STATbits	set	532
  9641  0211                     _SSP1BUF	set	529
  9642  0212                     _SSP1ADD	set	530
  9643  0213                     _SSP1MSK	set	531
  9644  0217                     _SSP1CON3	set	535
  9645  0216                     _SSP1CON2	set	534
  9646  0215                     _SSP1CON1	set	533
  9647  0214                     _SSP1STAT	set	532
  9648  0295                     _CCPR2	set	661
  9649  0291                     _CCPR1	set	657
  9650  028E                     _ODCONCbits	set	654
  9651  0295                     _CCPR2L	set	661
  9652  0296                     _CCPR2H	set	662
  9653  0297                     _CCP2CON	set	663
  9654  0291                     _CCPR1L	set	657
  9655  0292                     _CCPR1H	set	658
  9656  0293                     _CCP1CON	set	659
  9657  029F                     _CCPTMRSbits	set	671
  9658  028E                     _ODCONC	set	654
  9659  028D                     _ODCONB	set	653
  9660  028C                     _ODCONA	set	652
  9661  0311                     _CCPR3	set	785
  9662  0315                     _CCPR4	set	789
  9663  0315                     _CCPR4L	set	789
  9664  0316                     _CCPR4H	set	790
  9665  0317                     _CCP4CON	set	791
  9666  0311                     _CCPR3L	set	785
  9667  0312                     _CCPR3H	set	786
  9668  0313                     _CCP3CON	set	787
  9669  0413                     _T3CONbits	set	1043
  9670  0413                     _T3CON	set	1043
  9671  0411                     _TMR3L	set	1041
  9672  0412                     _TMR3H	set	1042
  9673  0414                     _T3GCON	set	1044
  9674  061F                     _PWMTMRSbits	set	1567
  9675  0617                     _PWM5DCL	set	1559
  9676  0618                     _PWM5DCH	set	1560
  9677  0619                     _PWM5CON	set	1561
  9678  0896                     _NVMCON2	set	2198
  9679  0894                     _NVMDATH	set	2196
  9680  0893                     _NVMDATL	set	2195
  9681  0892                     _NVMADRH	set	2194
  9682  0891                     _NVMADRL	set	2193
  9683  0895                     _NVMCON1bits	set	2197
  9684  0913                     _PMD2bits	set	2323
  9685  0918                     _CPUDOZEbits	set	2328
  9686  0916                     _PMD5	set	2326
  9687  0915                     _PMD4	set	2325
  9688  0914                     _PMD3	set	2324
  9689  0913                     _PMD2	set	2323
  9690  0912                     _PMD1	set	2322
  9691  0911                     _PMD0	set	2321
  9692  091E                     _OSCTUNE	set	2334
  9693  091F                     _OSCFRQ	set	2335
  9694  091D                     _OSCEN	set	2333
  9695  091B                     _OSCCON3	set	2331
  9696  0919                     _OSCCON1	set	2329
  9697  0E0F                     _PPSLOCKbits	set	3599
  9698  0E0F                     _PPSLOCK	set	3599
  9699  0E28                     _CLCIN0PPSbits	set	3624
  9700  0E29                     _CLCIN1PPSbits	set	3625
  9701  0E21                     _SSP1DATPPSbits	set	3617
  9702  0E20                     _SSP1CLKPPSbits	set	3616
  9703  0EA6                     _RC6PPSbits	set	3750
  9704  0EA7                     _RC7PPSbits	set	3751
  9705  0EA3                     _RC3PPSbits	set	3747
  9706  0EA4                     _RC4PPSbits	set	3748
  9707  0EA5                     _RC5PPSbits	set	3749
  9708  0E9E                     _RB6PPSbits	set	3742
  9709  0E9F                     _RB7PPSbits	set	3743
  9710  0F10                     _CLC1CON	set	3856
  9711  0F19                     _CLC1GLS3	set	3865
  9712  0F18                     _CLC1GLS2	set	3864
  9713  0F17                     _CLC1GLS1	set	3863
  9714  0F16                     _CLC1GLS0	set	3862
  9715  0F15                     _CLC1SEL3	set	3861
  9716  0F14                     _CLC1SEL2	set	3860
  9717  0F13                     _CLC1SEL1	set	3859
  9718  0F12                     _CLC1SEL0	set	3858
  9719  0F11                     _CLC1POL	set	3857
  9720  0F1A                     _CLC2CON	set	3866
  9721  0F23                     _CLC2GLS3	set	3875
  9722  0F22                     _CLC2GLS2	set	3874
  9723  0F21                     _CLC2GLS1	set	3873
  9724  0F20                     _CLC2GLS0	set	3872
  9725  0F1F                     _CLC2SEL3	set	3871
  9726  0F1E                     _CLC2SEL2	set	3870
  9727  0F1D                     _CLC2SEL1	set	3869
  9728  0F1C                     _CLC2SEL0	set	3868
  9729  0F1B                     _CLC2POL	set	3867
  9730                           
  9731                           ; #config settings
  9732  0000                     
  9733                           	psect	cinit
  9734  0032                     start_initialization:	
  9735  0032                     __initialization:	
  9736                           
  9737                           ; Initialize objects allocated to BANK1
  9738  0032  0021               	movlb	1	; select bank1
  9739                           
  9740                           ;initializer for _I2C1_slaveWriteData
  9741  0033  3055               	movlw	85
  9742  0034  00DA               	movwf	__pdataBANK1& (0+127)
  9743                           
  9744                           ; Clear objects allocated to BANK0
  9745  0035  3020               	movlw	low __pbssBANK0
  9746  0036  0084               	movwf	4
  9747  0037  3000               	movlw	high __pbssBANK0
  9748  0038  0085               	movwf	5
  9749  0039  302C               	movlw	44
  9750  003A  3191  2130  3180   	fcall	clear_ram0
  9751                           
  9752                           ; Clear objects allocated to BANK1
  9753  003D  30A0               	movlw	low __pbssBANK1
  9754  003E  0084               	movwf	4
  9755  003F  3000               	movlw	high __pbssBANK1
  9756  0040  0085               	movwf	5
  9757  0041  302A               	movlw	42
  9758  0042  3191  2130  3180   	fcall	clear_ram0
  9759  0045                     end_of_initialization:	
  9760                           ;End of C runtime variable initialization code
  9761                           
  9762  0045                     __end_of__initialization:	
  9763  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9764  0046  0020               	movlb	0
  9765  0047  2848               	ljmp	l8171	;jump to C main() function
  9766  0048                     __pmaintext:	
  9767 ;;
  9768 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9769 ;;
  9770 ;; *************** function _main *****************
  9771 ;; Defined at:
  9772 ;;		line 80 in file "main.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : B1F/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels required when called:   12
  9792 ;; This function calls:
  9793 ;;		_ClearInterrupt
  9794 ;;		_DataInitSet
  9795 ;;		_Encoder_FSM
  9796 ;;		_GP_Ports_FSM
  9797 ;;		_SYSTEM_Initialize
  9798 ;;		_TMR3_SetInterruptHandler
  9799 ;;		_TMR3_StartTimer
  9800 ;; This function is called by:
  9801 ;;		Startup code after reset
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _main
  9807  0048                     _main:	
  9808  0048                     l8171:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9811                           
  9812                           
  9813                           ;main.c: 82: SYSTEM_Initialize();
  9814  0048  2328  3180         	fcall	_SYSTEM_Initialize
  9815                           
  9816                           ;main.c: 88: (INTCONbits.GIE = 1);
  9817  004A  178B               	bsf	11,7	;volatile
  9818                           
  9819                           ;main.c: 91: (INTCONbits.PEIE = 1);
  9820  004B  170B               	bsf	11,6	;volatile
  9821                           
  9822                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  9823  004C  3036               	movlw	low _TimerInt
  9824  004D  0021               	movlb	1	; select bank1
  9825  004E  00CA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9826  004F  3011               	movlw	high _TimerInt
  9827  0050  00CB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9828  0051  2323  3180         	fcall	_TMR3_SetInterruptHandler
  9829                           
  9830                           ;main.c: 100: DataInitSet();
  9831  0053  2070  3180         	fcall	_DataInitSet
  9832  0055  158E               	bsf	14,3	;volatile
  9833  0056  160E               	bsf	14,4	;volatile
  9834  0057  168E               	bsf	14,5	;volatile
  9835  0058  170E               	bsf	14,6	;volatile
  9836  0059  178E               	bsf	14,7	;volatile
  9837                           
  9838                           ;main.c: 107: TMR3_StartTimer();
  9839  005A  26AC  3180         	fcall	_TMR3_StartTimer
  9840                           
  9841                           ;main.c: 108: ClearInterrupt();
  9842  005C  206D  3180         	fcall	_ClearInterrupt
  9843                           
  9844                           ;main.c: 110: CPUDOZEbits.IDLEN = 1;
  9845  005E  0032               	movlb	18	; select bank18
  9846  005F  1798               	bsf	24,7	;volatile
  9847                           
  9848                           ;main.c: 111: CPUDOZEbits.ROI = 1;
  9849  0060  1698               	bsf	24,5	;volatile
  9850  0061                     l8195:	
  9851                           
  9852                           ;main.c: 115: if (fsm_tmr == 1) {
  9853  0061  0021               	movlb	1	; select bank1
  9854  0062  0349               	decf	_fsm_tmr^(0+128),w
  9855  0063  1D03               	btfss	3,2
  9856  0064  2861               	goto	l8195
  9857                           
  9858                           ;main.c: 117: Encoder_FSM();
  9859  0065  2315  3180         	fcall	_Encoder_FSM
  9860                           
  9861                           ;main.c: 118: GP_Ports_FSM();
  9862  0067  2133  3180         	fcall	_GP_Ports_FSM
  9863                           
  9864                           ;main.c: 119: fsm_tmr = 0;
  9865  0069  0021               	movlb	1	; select bank1
  9866  006A  01C9               	clrf	_fsm_tmr^(0+128)
  9867  006B  0063               	sleep	;# 
  9868  006C  2861               	goto	l8195
  9869  006D                     __end_of_main:	
  9870  006D                     __ptext40:	
  9871 ;; *************** function _ClearInterrupt *****************
  9872 ;; Defined at:
  9873 ;;		line 66 in file "main.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		None
  9882 ;; Tracked objects:
  9883 ;;		On entry : 1F/8
  9884 ;;		On exit  : 1F/2
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    7
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_main
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _ClearInterrupt
  9903  006D                     _ClearInterrupt:	
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _ClearInterrupt: []
  9907                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  9908  006D  0022               	movlb	2	; select bank2
  9909  006E  168D               	bsf	13,5	;volatile
  9910  006F  0008               	return
  9911  0070                     __end_of_ClearInterrupt:	
  9912  0070                     __ptext39:	
  9913 ;; *************** function _DataInitSet *****************
  9914 ;; Defined at:
  9915 ;;		line 72 in file "DataVariable.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      void 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2
  9924 ;; Tracked objects:
  9925 ;;		On entry : 1F/1
  9926 ;;		On exit  : 1F/1
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;Total ram usage:        0 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    7
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_main
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _DataInitSet
  9945  0070                     _DataInitSet:	
  9946                           
  9947                           ;DataVariable.c: 73: GCONF = 0;
  9948                           
  9949                           ;incstack = 0
  9950                           ; Regs used in _DataInitSet: [wreg+status,2]
  9951  0070  0020               	movlb	0	; select bank0
  9952  0071  01C8               	clrf	_GCONF	;volatile
  9953                           
  9954                           ;DataVariable.c: 74: GP1CONF = 0;
  9955  0072  01C7               	clrf	_GP1CONF	;volatile
  9956                           
  9957                           ;DataVariable.c: 75: GP3CONF = 0;
  9958  0073  01C5               	clrf	_GP3CONF	;volatile
  9959                           
  9960                           ;DataVariable.c: 76: INTCONF = 0;
  9961  0074  01C9               	clrf	_INTCONF	;volatile
  9962                           
  9963                           ;DataVariable.c: 77: ESTATUS = 0;
  9964  0075  01CA               	clrf	_ESTATUS	;volatile
  9965                           
  9966                           ;DataVariable.c: 78: I2STATUS = 0;
  9967  0076  0021               	movlb	1	; select bank1
  9968  0077  01C8               	clrf	_I2STATUS^(0+128)	;volatile
  9969                           
  9970                           ;DataVariable.c: 79: CVAL.val = 0;
  9971  0078  0020               	movlb	0	; select bank0
  9972  0079  01AC               	clrf	_CVAL	;volatile
  9973  007A  01AD               	clrf	_CVAL+1	;volatile
  9974  007B  01AE               	clrf	_CVAL+2	;volatile
  9975  007C  01AF               	clrf	_CVAL+3	;volatile
  9976                           
  9977                           ;DataVariable.c: 80: CMAX.val = 0;
  9978  007D  01A8               	clrf	_CMAX	;volatile
  9979  007E  01A9               	clrf	_CMAX+1	;volatile
  9980  007F  01AA               	clrf	_CMAX+2	;volatile
  9981  0080  01AB               	clrf	_CMAX+3	;volatile
  9982                           
  9983                           ;DataVariable.c: 81: CMIN.val = 0;
  9984  0081  01A4               	clrf	_CMIN	;volatile
  9985  0082  01A5               	clrf	_CMIN+1	;volatile
  9986  0083  01A6               	clrf	_CMIN+2	;volatile
  9987  0084  01A7               	clrf	_CMIN+3	;volatile
  9988                           
  9989                           ;DataVariable.c: 82: ISTEP.val = 0;
  9990  0085  01A0               	clrf	_ISTEP	;volatile
  9991  0086  01A1               	clrf	_ISTEP+1	;volatile
  9992  0087  01A2               	clrf	_ISTEP+2	;volatile
  9993  0088  01A3               	clrf	_ISTEP+3	;volatile
  9994                           
  9995                           ;DataVariable.c: 83: RLED = 0;
  9996  0089  01C4               	clrf	_RLED	;volatile
  9997                           
  9998                           ;DataVariable.c: 84: GLED = 0;
  9999  008A  01C3               	clrf	_GLED	;volatile
 10000                           
 10001                           ;DataVariable.c: 85: BLED = 0;
 10002  008B  01C2               	clrf	_BLED	;volatile
 10003                           
 10004                           ;DataVariable.c: 86: GP1REG = 0;
 10005  008C  01C1               	clrf	_GP1REG	;volatile
 10006                           
 10007                           ;DataVariable.c: 87: GP2REG = 0;
 10008  008D  01C0               	clrf	_GP2REG	;volatile
 10009                           
 10010                           ;DataVariable.c: 88: GP3REG = 0;
 10011  008E  01BF               	clrf	_GP3REG	;volatile
 10012                           
 10013                           ;DataVariable.c: 89: C_RESET = 0;
 10014  008F  0021               	movlb	1	; select bank1
 10015  0090  01C2               	clrf	_C_RESET^(0+128)	;volatile
 10016                           
 10017                           ;DataVariable.c: 90: C_MBANK = 0;
 10018  0091  01C1               	clrf	_C_MBANK^(0+128)	;volatile
 10019                           
 10020                           ;DataVariable.c: 91: C_ETYPE = 0;
 10021  0092  0020               	movlb	0	; select bank0
 10022  0093  01B8               	clrf	_C_ETYPE	;volatile
 10023                           
 10024                           ;DataVariable.c: 92: C_RMOD = 0;
 10025  0094  0021               	movlb	1	; select bank1
 10026  0095  01C0               	clrf	_C_RMOD^(0+128)	;volatile
 10027                           
 10028                           ;DataVariable.c: 93: C_IPUD = 0;
 10029  0096  01BF               	clrf	_C_IPUD^(0+128)	;volatile
 10030                           
 10031                           ;DataVariable.c: 94: C_DIRE = 0;
 10032  0097  01BE               	clrf	_C_DIRE^(0+128)	;volatile
 10033                           
 10034                           ;DataVariable.c: 95: C_WRAPE = 0;
 10035  0098  0020               	movlb	0	; select bank0
 10036  0099  01B7               	clrf	_C_WRAPE	;volatile
 10037                           
 10038                           ;DataVariable.c: 96: C_DTYPE = 0;
 10039  009A  0021               	movlb	1	; select bank1
 10040  009B  01BD               	clrf	_C_DTYPE^(0+128)	;volatile
 10041                           
 10042                           ;DataVariable.c: 97: S_CKSRC = 0;
 10043  009C  01BC               	clrf	_S_CKSRC^(0+128)	;volatile
 10044                           
 10045                           ;DataVariable.c: 98: S_RELATIVE = 0;
 10046  009D  0020               	movlb	0	; select bank0
 10047  009E  01B6               	clrf	_S_RELATIVE	;volatile
 10048                           
 10049                           ;DataVariable.c: 100: ANTBOUNC = 25;
 10050  009F  3019               	movlw	25
 10051  00A0  0021               	movlb	1	; select bank1
 10052  00A1  00C6               	movwf	_ANTBOUNC^(0+128)	;volatile
 10053                           
 10054                           ;DataVariable.c: 101: DPPERIOD = 0;
 10055  00A2  01C5               	clrf	_DPPERIOD^(0+128)	;volatile
 10056                           
 10057                           ;DataVariable.c: 102: FADERGB = 0;
 10058  00A3  01C4               	clrf	_FADERGB^(0+128)	;volatile
 10059                           
 10060                           ;DataVariable.c: 103: FADEGP = 0;
 10061  00A4  0020               	movlb	0	; select bank0
 10062  00A5  01BE               	clrf	_FADEGP	;volatile
 10063                           
 10064                           ;DataVariable.c: 104: DEBOUNCE = 250;
 10065  00A6  30FA               	movlw	250
 10066  00A7  0021               	movlb	1	; select bank1
 10067  00A8  00A8               	movwf	_DEBOUNCE^(0+128)	;volatile
 10068  00A9  01A9               	clrf	(_DEBOUNCE+1)^(0+128)	;volatile
 10069                           
 10070                           ;DataVariable.c: 105: DoublePush = 0;
 10071  00AA  01A6               	clrf	_DoublePush^(0+128)	;volatile
 10072  00AB  01A7               	clrf	(_DoublePush+1)^(0+128)	;volatile
 10073  00AC  0008               	return
 10074  00AD                     __end_of_DataInitSet:	
 10075  00AD                     __ptext34:	
 10076 ;; *************** function _Encoder_PushButton_FSM *****************
 10077 ;; Defined at:
 10078 ;;		line 233 in file "Encoder.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 18/1
 10089 ;;		On exit  : 1C/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; Hardware stack levels required when called:    9
 10099 ;; This function calls:
 10100 ;;		_EncoderStatusUpdate
 10101 ;;		_EncoderSwitch_GetValueFiltered
 10102 ;;		_SetInterrupt
 10103 ;; This function is called by:
 10104 ;;		_Encoder_FSM
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function _Encoder_PushButton_FSM
 10110  00AD                     _Encoder_PushButton_FSM:	
 10111  00AD                     l8053:	
 10112                           ;incstack = 0
 10113                           ; Regs used in _Encoder_PushButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10114                           
 10115                           
 10116                           ;Encoder.c: 235: if (double_push_cnt > DoublePush) {
 10117  00AD  0021               	movlb	1	; select bank1
 10118  00AE  0825               	movf	(_double_push_cnt+1)^(0+128),w
 10119  00AF  0227               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 10120  00B0  1D03               	skipz
 10121  00B1  28B4               	goto	u5675
 10122  00B2  0824               	movf	_double_push_cnt^(0+128),w
 10123  00B3  0226               	subwf	_DoublePush^(0+128),w	;volatile
 10124  00B4                     u5675:	
 10125  00B4  1803               	skipnc
 10126  00B5  28B9               	goto	l8057
 10127                           
 10128                           ;Encoder.c: 236: pb_fsm = ENCODER_TIMEOUT;
 10129  00B6  3005               	movlw	5
 10130  00B7  00B2               	movwf	_pb_fsm^(0+128)
 10131                           
 10132                           ;Encoder.c: 237: } else {
 10133  00B8  290C               	goto	l8117
 10134  00B9                     l8057:	
 10135                           
 10136                           ;Encoder.c: 238: double_push_cnt++;
 10137  00B9  0AA4               	incf	_double_push_cnt^(0+128),f
 10138  00BA  1903               	skipnz
 10139  00BB  0AA5               	incf	(_double_push_cnt+1)^(0+128),f
 10140  00BC  290C               	goto	l8117
 10141  00BD                     l8059:	
 10142                           
 10143                           ;Encoder.c: 243: double_push_cnt = 0;
 10144  00BD  01A4               	clrf	_double_push_cnt^(0+128)
 10145  00BE  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10146                           
 10147                           ;Encoder.c: 244: if (EncoderSwitch_GetValueFiltered() == 1) {
 10148  00BF  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10149  00C1  3A01               	xorlw	1
 10150  00C2  1D03               	skipz
 10151  00C3  0008               	return
 10152                           
 10153                           ;Encoder.c: 245: pb_fsm = ENCODER_WAITRELEASE;
 10154  00C4  01B2               	clrf	_pb_fsm^(0+128)
 10155  00C5  0AB2               	incf	_pb_fsm^(0+128),f
 10156  00C6  0008               	return
 10157  00C7                     l8065:	
 10158                           
 10159                           ;Encoder.c: 251: if (EncoderSwitch_GetValueFiltered() == 0) {
 10160  00C7  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10161  00C9  3A00               	xorlw	0
 10162  00CA  1D03               	skipz
 10163  00CB  0008               	return
 10164                           
 10165                           ;Encoder.c: 252: pb_fsm = ENCODER_WAITDOUBLEPUSH;
 10166  00CC  3002               	movlw	2
 10167  00CD  00B2               	movwf	_pb_fsm^(0+128)
 10168  00CE  0008               	return
 10169  00CF                     l8069:	
 10170                           
 10171                           ;Encoder.c: 257: if (EncoderSwitch_GetValueFiltered() == 1) {
 10172  00CF  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10173  00D1  3A01               	xorlw	1
 10174  00D2  1D03               	skipz
 10175  00D3  0008               	return
 10176                           
 10177                           ;Encoder.c: 258: pb_fsm = ENCODER_WAITDOUBLERELEASED;
 10178  00D4  3003               	movlw	3
 10179  00D5  00B2               	movwf	_pb_fsm^(0+128)
 10180  00D6  0008               	return
 10181  00D7                     l8073:	
 10182                           
 10183                           ;Encoder.c: 263: if (EncoderSwitch_GetValueFiltered() == 0) {
 10184  00D7  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10185  00D9  3A00               	xorlw	0
 10186  00DA  1D03               	skipz
 10187  00DB  0008               	return
 10188  00DC  3004               	movlw	4
 10189                           
 10190                           ;Encoder.c: 264: double_push_cnt = 0;
 10191  00DD  01A4               	clrf	_double_push_cnt^(0+128)
 10192  00DE  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10193                           
 10194                           ;Encoder.c: 265: double_push_delay=0;
 10195  00DF  01A2               	clrf	_double_push_delay^(0+128)
 10196  00E0  01A3               	clrf	(_double_push_delay+1)^(0+128)
 10197                           
 10198                           ;Encoder.c: 266: pb_fsm = ENCODER_DOUBLEDELAY;
 10199  00E1  00B2               	movwf	_pb_fsm^(0+128)
 10200  00E2                     L7:	
 10201                           ;Encoder.c: 267: EncoderStatusUpdate(S_PUSHD);
 10202                           
 10203  00E2  2304  3180         	fcall	_EncoderStatusUpdate
 10204  00E4                     l8081:	
 10205                           
 10206                           ;Encoder.c: 268: SetInterrupt();
 10207  00E4  2A3D               	ljmp	l7271
 10208  00E5                     l8083:	
 10209                           
 10210                           ;Encoder.c: 273: double_push_cnt = 0;
 10211  00E5  01A4               	clrf	_double_push_cnt^(0+128)
 10212  00E6  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10213                           
 10214                           ;Encoder.c: 274: if (double_push_delay > DoublePush) {
 10215  00E7  0823               	movf	(_double_push_delay+1)^(0+128),w
 10216  00E8  0227               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 10217  00E9  1D03               	skipz
 10218  00EA  28ED               	goto	u5725
 10219  00EB  0822               	movf	_double_push_delay^(0+128),w
 10220  00EC  0226               	subwf	_DoublePush^(0+128),w	;volatile
 10221  00ED                     u5725:	
 10222  00ED  1803               	skipnc
 10223  00EE  28F1               	goto	l8089
 10224                           
 10225                           ;Encoder.c: 275: pb_fsm = ENCODER_WAITPUSH;
 10226  00EF  01B2               	clrf	_pb_fsm^(0+128)
 10227                           
 10228                           ;Encoder.c: 276: } else {
 10229  00F0  0008               	return
 10230  00F1                     l8089:	
 10231                           
 10232                           ;Encoder.c: 277: double_push_delay++;
 10233  00F1  0AA2               	incf	_double_push_delay^(0+128),f
 10234  00F2  1903               	skipnz
 10235  00F3  0AA3               	incf	(_double_push_delay+1)^(0+128),f
 10236  00F4  0008               	return
 10237  00F5                     l8091:	
 10238  00F5  3002               	movlw	2
 10239                           
 10240                           ;Encoder.c: 282: double_push_cnt = 0;
 10241  00F6  01A4               	clrf	_double_push_cnt^(0+128)
 10242  00F7  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10243                           
 10244                           ;Encoder.c: 283: EncoderStatusUpdate(S_PUSHP);
 10245  00F8  2304  3180         	fcall	_EncoderStatusUpdate
 10246                           
 10247                           ;Encoder.c: 284: if (EncoderSwitch_GetValueFiltered() == 1) {
 10248  00FA  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10249  00FC  3A01               	xorlw	1
 10250  00FD  1D03               	skipz
 10251  00FE  2909               	goto	l8109
 10252                           
 10253                           ;Encoder.c: 285: pb_fsm = ENCODER_PUSHRESET;
 10254  00FF  3006               	movlw	6
 10255  0100  00B2               	movwf	_pb_fsm^(0+128)
 10256                           
 10257                           ;Encoder.c: 286: } else {
 10258  0101  28E4               	goto	l8081
 10259  0102                     l8105:	
 10260                           ;Encoder.c: 288: EncoderStatusUpdate(S_PUSHR);
 10261                           
 10262                           ;Encoder.c: 287: pb_fsm = ENCODER_WAITPUSH;
 10263                           
 10264                           
 10265                           ;Encoder.c: 294: double_push_cnt = 0;
 10266  0102  01A4               	clrf	_double_push_cnt^(0+128)
 10267  0103  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10268                           
 10269                           ;Encoder.c: 295: if (EncoderSwitch_GetValueFiltered() == 0) {
 10270  0104  2117  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10271  0106  3A00               	xorlw	0
 10272  0107  1D03               	skipz
 10273  0108  0008               	return
 10274  0109                     l8109:	
 10275  0109  3001               	movlw	1
 10276                           
 10277                           ;Encoder.c: 297: pb_fsm = ENCODER_WAITPUSH;
 10278  010A  01B2               	clrf	_pb_fsm^(0+128)
 10279                           
 10280                           ;Encoder.c: 298: EncoderStatusUpdate(S_PUSHR);
 10281  010B  28E2               	goto	L7
 10282  010C                     l8117:	
 10283  010C  0832               	movf	_pb_fsm^(0+128),w
 10284                           
 10285                           ; Switch size 1, requested type "speed"
 10286                           ; Number of cases is 7, Range of values is 0 to 6
 10287                           ; switch strategies available:
 10288                           ; Name         Instructions Cycles
 10289                           ; direct_byte           20     6 (fixed)
 10290                           ; simple_byte           22    12 (average)
 10291                           ; jumptable            260     6 (fixed)
 10292                           ;	Chosen strategy is direct_byte
 10293  010D  0084               	movwf	4
 10294  010E  3007               	movlw	7
 10295  010F  0204               	subwf	4,w
 10296  0110  1803               	skipnc
 10297  0111  0008               	return
 10298  0112  3190               	movlp	high S8547
 10299  0113  3504               	lslf	4,w
 10300  0114  3EE4               	addlw	low S8547
 10301  0115  0082               	movwf	2
 10302  0116  0008               	return
 10303  0117                     __end_of_Encoder_PushButton_FSM:	
 10304  0117                     __ptext36:	
 10305 ;; *************** function _EncoderSwitch_GetValueFiltered *****************
 10306 ;; Defined at:
 10307 ;;		line 42 in file "Encoder.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      unsigned char 
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, status,0, pclath, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 18/1
 10318 ;;		On exit  : 1F/1
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    8
 10328 ;; This function calls:
 10329 ;;		_EncoderSwitch_GetValue
 10330 ;; This function is called by:
 10331 ;;		_Encoder_PushButton_FSM
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function _EncoderSwitch_GetValueFiltered
 10337  0117                     _EncoderSwitch_GetValueFiltered:	
 10338                           
 10339                           ;Encoder.c: 43: static bool pb_status = 0;;Encoder.c: 45: if (EncoderSwitch_GetValue() =
      +                          = 1) {
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _EncoderSwitch_GetValueFiltered: [wreg+status,2+status,0+pclath+cstack]
 10343  0117  2308  3180         	fcall	_EncoderSwitch_GetValue
 10344  0119  3A01               	xorlw	1
 10345  011A  1D03               	skipz
 10346  011B  2928               	goto	l7475
 10347                           
 10348                           ;Encoder.c: 46: if (pb_cnt++ >= 50) {
 10349  011C  0021               	movlb	1	; select bank1
 10350  011D  0831               	movf	_pb_cnt^(0+128),w
 10351  011E  0AB1               	incf	_pb_cnt^(0+128),f
 10352  011F  3A80               	xorlw	128
 10353  0120  3E4E               	addlw	-178
 10354  0121  1C03               	skipc
 10355  0122  2931               	goto	l7479
 10356                           
 10357                           ;Encoder.c: 47: pb_cnt = 50;
 10358  0123  3032               	movlw	50
 10359  0124  00B1               	movwf	_pb_cnt^(0+128)
 10360                           
 10361                           ;Encoder.c: 48: pb_status = 1;
 10362  0125  01AE               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 10363  0126  0AAE               	incf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),f
 10364  0127  2931               	goto	l7479
 10365  0128                     l7475:	
 10366                           
 10367                           ;Encoder.c: 51: if (pb_cnt-- <= 0) {
 10368  0128  0021               	movlb	1	; select bank1
 10369  0129  0831               	movf	_pb_cnt^(0+128),w
 10370  012A  03B1               	decf	_pb_cnt^(0+128),f
 10371  012B  3A80               	xorlw	128
 10372  012C  3E7F               	addlw	-129
 10373  012D  1803               	skipnc
 10374  012E  2931               	goto	l7479
 10375                           
 10376                           ;Encoder.c: 52: pb_cnt = 0;
 10377  012F  01B1               	clrf	_pb_cnt^(0+128)
 10378                           
 10379                           ;Encoder.c: 53: pb_status = 0;
 10380  0130  01AE               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 10381  0131                     l7479:	
 10382                           
 10383                           ;Encoder.c: 54: };Encoder.c: 55: };Encoder.c: 57: return pb_status;
 10384  0131  082E               	movf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),w
 10385  0132  0008               	return
 10386  0133                     __end_of_EncoderSwitch_GetValueFiltered:	
 10387  0133                     __ptext14:	
 10388 ;; *************** function _GP_Ports_FSM *****************
 10389 ;; Defined at:
 10390 ;;		line 535 in file "GPports.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;		None
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;		None
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  1    wreg      void 
 10397 ;; Registers used:
 10398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 1C/1
 10401 ;;		On exit  : 1E/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;Total ram usage:        1 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:   11
 10411 ;; This function calls:
 10412 ;;		_FADE_GP1
 10413 ;;		_FADE_GP2
 10414 ;;		_FADE_GP3
 10415 ;;		_GP1_FSM
 10416 ;;		_GP2_FSM
 10417 ;;		_GP3_FSM
 10418 ;; This function is called by:
 10419 ;;		_main
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function _GP_Ports_FSM
 10425  0133                     _GP_Ports_FSM:	
 10426                           
 10427                           ;GPports.c: 538: FADE_GP1();
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10431  0133  2350  3180         	fcall	_FADE_GP1
 10432                           
 10433                           ;GPports.c: 539: FADE_GP2();
 10434  0135  2268  3180         	fcall	_FADE_GP2
 10435                           
 10436                           ;GPports.c: 540: FADE_GP3();
 10437  0137  2411  3180         	fcall	_FADE_GP3
 10438                           
 10439                           ;GPports.c: 542: if (gp_fade_cnt++ >= FADEGP) {
 10440  0139  0021               	movlb	1	; select bank1
 10441  013A  0833               	movf	_gp_fade_cnt^(0+128),w
 10442  013B  0AB3               	incf	_gp_fade_cnt^(0+128),f
 10443  013C  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 10444  013D  0020               	movlb	0	; select bank0
 10445  013E  083E               	movf	_FADEGP,w	;volatile
 10446  013F  0021               	movlb	1	; select bank1
 10447  0140  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 10448  0141  1803               	btfsc	3,0
 10449                           
 10450                           ;GPports.c: 543: gp_fade_cnt = 0;
 10451  0142  01B3               	clrf	_gp_fade_cnt^(0+128)
 10452                           
 10453                           ;GPports.c: 544: };GPports.c: 546: if (gp_timer++ > 10) {
 10454  0143  0837               	movf	_gp_timer^(0+128),w
 10455  0144  0AB7               	incf	_gp_timer^(0+128),f
 10456  0145  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 10457  0146  300B               	movlw	11
 10458  0147  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 10459  0148  1C03               	skipc
 10460  0149  0008               	return
 10461                           
 10462                           ;GPports.c: 547: gp_timer = 0;
 10463  014A  01B7               	clrf	_gp_timer^(0+128)
 10464                           
 10465                           ;GPports.c: 548: GP1_FSM();
 10466  014B  2150  3180         	fcall	_GP1_FSM
 10467                           
 10468                           ;GPports.c: 549: GP2_FSM();
 10469  014D  219B  3180         	fcall	_GP2_FSM
 10470                           
 10471                           ;GPports.c: 550: GP3_FSM();
 10472  014F  29E8               	ljmp	l7919
 10473  0150                     __end_of_GP_Ports_FSM:	
 10474  0150                     __ptext17:	
 10475 ;; *************** function _GP1_FSM *****************
 10476 ;; Defined at:
 10477 ;;		line 393 in file "GPports.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 1F/1
 10488 ;;		On exit  : 1E/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;Total ram usage:        2 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    9
 10498 ;; This function calls:
 10499 ;;		_ADC_GetConversion
 10500 ;;		_ADC_Initialize
 10501 ;;		_Int2StatusUpdate
 10502 ;;		_SetInterrupt
 10503 ;; This function is called by:
 10504 ;;		_GP_Ports_FSM
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           
 10509                           ;psect for function _GP1_FSM
 10510  0150                     _GP1_FSM:	
 10511                           
 10512                           ;GPports.c: 394: switch (gp1_fsm) {
 10513                           
 10514                           ;incstack = 0
 10515                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10516  0150  2990               	goto	l7867
 10517  0151                     l7829:	
 10518                           
 10519                           ;GPports.c: 396: if ((GP1CONF & 0x03) == 0x02) {
 10520  0151  3003               	movlw	3
 10521  0152  0020               	movlb	0	; select bank0
 10522  0153  0547               	andwf	_GP1CONF,w	;volatile
 10523  0154  0021               	movlb	1	; select bank1
 10524  0155  00CE               	movwf	??_GP1_FSM^(0+128)
 10525  0156  3A02               	xorlw	2
 10526  0157  1D03               	btfss	3,2
 10527  0158  295C               	goto	l7837
 10528                           
 10529                           ;GPports.c: 397: gp1_fsm = GP_ADC_MODE;
 10530  0159  01B6               	clrf	_gp1_fsm^(0+128)
 10531  015A  0AB6               	incf	_gp1_fsm^(0+128),f
 10532                           
 10533                           ;GPports.c: 398: ADC_Initialize();
 10534  015B  2A60               	ljmp	l7305
 10535  015C                     l7837:	
 10536                           
 10537                           ;GPports.c: 400: };GPports.c: 401: if ((GP1CONF & 0x03) == 0x03) {
 10538  015C  3003               	movlw	3
 10539  015D  0020               	movlb	0	; select bank0
 10540  015E  0547               	andwf	_GP1CONF,w	;volatile
 10541  015F  0021               	movlb	1	; select bank1
 10542  0160  00CE               	movwf	??_GP1_FSM^(0+128)
 10543  0161  3A03               	xorlw	3
 10544  0162  1D03               	btfss	3,2
 10545  0163  0008               	return
 10546  0164                     l7839:	
 10547                           
 10548                           ;GPports.c: 402: gp1_fsm = GP_WAITRISE;
 10549  0164  3002               	movlw	2
 10550  0165  0021               	movlb	1	; select bank1
 10551  0166  00B6               	movwf	_gp1_fsm^(0+128)
 10552  0167  0008               	return
 10553  0168                     l7843:	
 10554                           
 10555                           ;GPports.c: 408: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
 10556  0168  3017               	movlw	23
 10557  0169  2245               	fcall	_ADC_GetConversion
 10558  016A  084A               	movf	?_ADC_GetConversion^(0+128),w
 10559  016B  00CE               	movwf	??_GP1_FSM^(0+128)
 10560  016C  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10561  016D  00CF               	movwf	(??_GP1_FSM^(0+128)+1)
 10562  016E  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 10563  016F  0CCE               	rrf	??_GP1_FSM^(0+128),f
 10564  0170  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 10565  0171  0CCE               	rrf	??_GP1_FSM^(0+128),f
 10566  0172  084E               	movf	??_GP1_FSM^(0+128),w
 10567  0173  0020               	movlb	0	; select bank0
 10568  0174  00C1               	movwf	_GP1REG	;volatile
 10569                           
 10570                           ;GPports.c: 409: break;
 10571  0175  0008               	return
 10572  0176                     l1297:	
 10573                           ;GPports.c: 411: case GP_WAITRISE:
 10574                           
 10575                           
 10576                           ;GPports.c: 412: if (PORTCbits.RC7 == 1) {
 10577  0176  0020               	movlb	0	; select bank0
 10578  0177  1F8E               	btfss	14,7	;volatile
 10579  0178  0008               	return
 10580                           
 10581                           ;GPports.c: 413: GP1REG = 1;
 10582  0179  3001               	movlw	1
 10583  017A  00C1               	movwf	_GP1REG	;volatile
 10584                           
 10585                           ;GPports.c: 414: Int2StatusUpdate(E_GP1POS);
 10586  017B  2238  3180         	fcall	_Int2StatusUpdate
 10587                           
 10588                           ;GPports.c: 415: if ((GP1CONF & 0x08) != 0) {
 10589  017D  1DC7               	btfss	_GP1CONF,3	;volatile
 10590  017E  2980               	goto	l7853
 10591                           
 10592                           ;GPports.c: 416: SetInterrupt();
 10593  017F  223D               	fcall	_SetInterrupt
 10594  0180                     l7853:	
 10595                           
 10596                           ;GPports.c: 417: };GPports.c: 418: gp1_fsm = GP_WAITFALL;
 10597  0180  3003               	movlw	3
 10598  0181  0021               	movlb	1	; select bank1
 10599  0182  00B6               	movwf	_gp1_fsm^(0+128)
 10600  0183  0008               	return
 10601  0184                     l1300:	
 10602                           ;GPports.c: 422: case GP_WAITFALL:
 10603                           
 10604                           
 10605                           ;GPports.c: 423: if (PORTCbits.RC7 == 0) {
 10606  0184  0020               	movlb	0	; select bank0
 10607  0185  1B8E               	btfsc	14,7	;volatile
 10608  0186  0008               	return
 10609                           
 10610                           ;GPports.c: 424: GP1REG = 0;
 10611  0187  01C1               	clrf	_GP1REG	;volatile
 10612                           
 10613                           ;GPports.c: 425: Int2StatusUpdate(E_GP1NEG);
 10614  0188  3002               	movlw	2
 10615  0189  2238  3180         	fcall	_Int2StatusUpdate
 10616                           
 10617                           ;GPports.c: 426: if ((GP1CONF & 0x10) != 0) {
 10618  018B  1E47               	btfss	_GP1CONF,4	;volatile
 10619  018C  2964               	goto	l7839
 10620                           
 10621                           ;GPports.c: 427: SetInterrupt();
 10622  018D  223D  3180         	fcall	_SetInterrupt
 10623  018F  2964               	goto	l7839
 10624  0190                     l7867:	
 10625  0190  0836               	movf	_gp1_fsm^(0+128),w
 10626                           
 10627                           ; Switch size 1, requested type "speed"
 10628                           ; Number of cases is 4, Range of values is 0 to 3
 10629                           ; switch strategies available:
 10630                           ; Name         Instructions Cycles
 10631                           ; direct_byte           14     6 (fixed)
 10632                           ; simple_byte           13     7 (average)
 10633                           ; jumptable            260     6 (fixed)
 10634                           ;	Chosen strategy is direct_byte
 10635  0191  0084               	movwf	4
 10636  0192  3004               	movlw	4
 10637  0193  0204               	subwf	4,w
 10638  0194  1803               	skipnc
 10639  0195  0008               	return
 10640  0196  3191               	movlp	high S8545
 10641  0197  3504               	lslf	4,w
 10642  0198  3E08               	addlw	low S8545
 10643  0199  0082               	movwf	2
 10644  019A  0008               	return
 10645  019B                     __end_of_GP1_FSM:	
 10646  019B                     __ptext16:	
 10647 ;; *************** function _GP2_FSM *****************
 10648 ;; Defined at:
 10649 ;;		line 438 in file "GPports.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10658 ;; Tracked objects:
 10659 ;;		On entry : 1E/1
 10660 ;;		On exit  : 1E/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;Total ram usage:        2 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    9
 10670 ;; This function calls:
 10671 ;;		_ADC_GetConversion
 10672 ;;		_ADC_Initialize
 10673 ;;		_Int2StatusUpdate
 10674 ;;		_SetInterrupt
 10675 ;; This function is called by:
 10676 ;;		_GP_Ports_FSM
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           
 10681                           ;psect for function _GP2_FSM
 10682  019B                     _GP2_FSM:	
 10683                           
 10684                           ;GPports.c: 440: switch (gp2_fsm) {
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10688  019B  29DC               	goto	l7913
 10689  019C                     l7875:	
 10690                           
 10691                           ;GPports.c: 442: if ((GP2CONF & 0x03) == 0x02) {
 10692  019C  3003               	movlw	3
 10693  019D  0020               	movlb	0	; select bank0
 10694  019E  0546               	andwf	_GP2CONF,w	;volatile
 10695  019F  0021               	movlb	1	; select bank1
 10696  01A0  00CE               	movwf	??_GP2_FSM^(0+128)
 10697  01A1  3A02               	xorlw	2
 10698  01A2  1D03               	btfss	3,2
 10699  01A3  29A7               	goto	l7883
 10700                           
 10701                           ;GPports.c: 443: gp2_fsm = GP_ADC_MODE;
 10702  01A4  01B5               	clrf	_gp2_fsm^(0+128)
 10703  01A5  0AB5               	incf	_gp2_fsm^(0+128),f
 10704                           
 10705                           ;GPports.c: 444: ADC_Initialize();
 10706  01A6  2A60               	ljmp	l7305
 10707  01A7                     l7883:	
 10708                           
 10709                           ;GPports.c: 446: };GPports.c: 448: if ((GP2CONF & 0x03) == 0x03) {
 10710  01A7  3003               	movlw	3
 10711  01A8  0020               	movlb	0	; select bank0
 10712  01A9  0546               	andwf	_GP2CONF,w	;volatile
 10713  01AA  0021               	movlb	1	; select bank1
 10714  01AB  00CE               	movwf	??_GP2_FSM^(0+128)
 10715  01AC  3A03               	xorlw	3
 10716  01AD  1D03               	btfss	3,2
 10717  01AE  0008               	return
 10718  01AF                     l7885:	
 10719                           
 10720                           ;GPports.c: 449: gp2_fsm = GP_WAITRISE;
 10721  01AF  3002               	movlw	2
 10722  01B0  0021               	movlb	1	; select bank1
 10723  01B1  00B5               	movwf	_gp2_fsm^(0+128)
 10724  01B2  0008               	return
 10725  01B3                     l7889:	
 10726                           
 10727                           ;GPports.c: 455: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
 10728  01B3  3016               	movlw	22
 10729  01B4  2245               	fcall	_ADC_GetConversion
 10730  01B5  084A               	movf	?_ADC_GetConversion^(0+128),w
 10731  01B6  00CE               	movwf	??_GP2_FSM^(0+128)
 10732  01B7  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10733  01B8  00CF               	movwf	(??_GP2_FSM^(0+128)+1)
 10734  01B9  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 10735  01BA  0CCE               	rrf	??_GP2_FSM^(0+128),f
 10736  01BB  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 10737  01BC  0CCE               	rrf	??_GP2_FSM^(0+128),f
 10738  01BD  084E               	movf	??_GP2_FSM^(0+128),w
 10739  01BE  0020               	movlb	0	; select bank0
 10740  01BF  00C0               	movwf	_GP2REG	;volatile
 10741                           
 10742                           ;GPports.c: 456: break;
 10743  01C0  0008               	return
 10744  01C1                     l1312:	
 10745                           ;GPports.c: 458: case GP_WAITRISE:
 10746                           
 10747                           
 10748                           ;GPports.c: 459: if (PORTCbits.RC6 == 1) {
 10749  01C1  0020               	movlb	0	; select bank0
 10750  01C2  1F0E               	btfss	14,6	;volatile
 10751  01C3  0008               	return
 10752                           
 10753                           ;GPports.c: 460: GP2REG = 1;
 10754  01C4  3001               	movlw	1
 10755  01C5  00C0               	movwf	_GP2REG	;volatile
 10756                           
 10757                           ;GPports.c: 461: Int2StatusUpdate(E_GP2POS);
 10758  01C6  3004               	movlw	4
 10759  01C7  2238  3180         	fcall	_Int2StatusUpdate
 10760                           
 10761                           ;GPports.c: 462: if ((GP2CONF & 0x08) != 0) {
 10762  01C9  1DC6               	btfss	_GP2CONF,3	;volatile
 10763  01CA  29CC               	goto	l7899
 10764                           
 10765                           ;GPports.c: 463: SetInterrupt();
 10766  01CB  223D               	fcall	_SetInterrupt
 10767  01CC                     l7899:	
 10768                           
 10769                           ;GPports.c: 464: };GPports.c: 465: gp2_fsm = GP_WAITFALL;
 10770  01CC  3003               	movlw	3
 10771  01CD  0021               	movlb	1	; select bank1
 10772  01CE  00B5               	movwf	_gp2_fsm^(0+128)
 10773  01CF  0008               	return
 10774  01D0                     l1315:	
 10775                           ;GPports.c: 469: case GP_WAITFALL:
 10776                           
 10777                           
 10778                           ;GPports.c: 470: if (PORTCbits.RC6 == 0) {
 10779  01D0  0020               	movlb	0	; select bank0
 10780  01D1  1B0E               	btfsc	14,6	;volatile
 10781  01D2  0008               	return
 10782                           
 10783                           ;GPports.c: 472: GP2REG = 0;
 10784  01D3  01C0               	clrf	_GP2REG	;volatile
 10785                           
 10786                           ;GPports.c: 473: Int2StatusUpdate(E_GP2NEG);
 10787  01D4  3008               	movlw	8
 10788  01D5  2238  3180         	fcall	_Int2StatusUpdate
 10789                           
 10790                           ;GPports.c: 474: if ((GP2CONF & 0x10) != 0) {
 10791  01D7  1E46               	btfss	_GP2CONF,4	;volatile
 10792  01D8  29AF               	goto	l7885
 10793                           
 10794                           ;GPports.c: 475: SetInterrupt();
 10795  01D9  223D  3180         	fcall	_SetInterrupt
 10796  01DB  29AF               	goto	l7885
 10797  01DC                     l7913:	
 10798  01DC  0021               	movlb	1	; select bank1
 10799  01DD  0835               	movf	_gp2_fsm^(0+128),w
 10800                           
 10801                           ; Switch size 1, requested type "speed"
 10802                           ; Number of cases is 4, Range of values is 0 to 3
 10803                           ; switch strategies available:
 10804                           ; Name         Instructions Cycles
 10805                           ; direct_byte           14     6 (fixed)
 10806                           ; simple_byte           13     7 (average)
 10807                           ; jumptable            260     6 (fixed)
 10808                           ;	Chosen strategy is direct_byte
 10809  01DE  0084               	movwf	4
 10810  01DF  3004               	movlw	4
 10811  01E0  0204               	subwf	4,w
 10812  01E1  1803               	skipnc
 10813  01E2  0008               	return
 10814  01E3  3191               	movlp	high S8543
 10815  01E4  3504               	lslf	4,w
 10816  01E5  3E00               	addlw	low S8543
 10817  01E6  0082               	movwf	2
 10818  01E7  0008               	return
 10819  01E8                     __end_of_GP2_FSM:	
 10820  01E8                     __ptext15:	
 10821 ;; *************** function _GP3_FSM *****************
 10822 ;; Defined at:
 10823 ;;		line 487 in file "GPports.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      void 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 1E/1
 10834 ;;		On exit  : 1E/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:        2 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    9
 10844 ;; This function calls:
 10845 ;;		_ADC_GetConversion
 10846 ;;		_ADC_Initialize
 10847 ;;		_Int2StatusUpdate
 10848 ;;		_SetInterrupt
 10849 ;; This function is called by:
 10850 ;;		_GP_Ports_FSM
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _GP3_FSM
 10856  01E8                     _GP3_FSM:	
 10857  01E8                     l7919:	
 10858                           ;incstack = 0
 10859                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10860                           
 10861                           
 10862                           ;GPports.c: 489: if (C_ETYPE == 1)
 10863  01E8  0020               	movlb	0	; select bank0
 10864  01E9  0B38               	decfsz	_C_ETYPE,w	;volatile
 10865  01EA  2A2C               	goto	l7961
 10866  01EB  0008               	return
 10867  01EC                     l7923:	
 10868                           
 10869                           ;GPports.c: 494: if ((GP3CONF & 0x03) == 0x02) {
 10870  01EC  3003               	movlw	3
 10871  01ED  0020               	movlb	0	; select bank0
 10872  01EE  0545               	andwf	_GP3CONF,w	;volatile
 10873  01EF  0021               	movlb	1	; select bank1
 10874  01F0  00CE               	movwf	??_GP3_FSM^(0+128)
 10875  01F1  3A02               	xorlw	2
 10876  01F2  1D03               	btfss	3,2
 10877  01F3  29F7               	goto	l7931
 10878                           
 10879                           ;GPports.c: 495: gp3_fsm = GP_ADC_MODE;
 10880  01F4  01B4               	clrf	_gp3_fsm^(0+128)
 10881  01F5  0AB4               	incf	_gp3_fsm^(0+128),f
 10882                           
 10883                           ;GPports.c: 496: ADC_Initialize();
 10884  01F6  2A60               	ljmp	l7305
 10885  01F7                     l7931:	
 10886                           
 10887                           ;GPports.c: 498: };GPports.c: 500: if ((GP3CONF & 0x03) == 0x03) {
 10888  01F7  3003               	movlw	3
 10889  01F8  0020               	movlb	0	; select bank0
 10890  01F9  0545               	andwf	_GP3CONF,w	;volatile
 10891  01FA  0021               	movlb	1	; select bank1
 10892  01FB  00CE               	movwf	??_GP3_FSM^(0+128)
 10893  01FC  3A03               	xorlw	3
 10894  01FD  1D03               	btfss	3,2
 10895  01FE  0008               	return
 10896  01FF                     l7933:	
 10897                           
 10898                           ;GPports.c: 501: gp3_fsm = GP_WAITRISE;
 10899  01FF  3002               	movlw	2
 10900  0200  0021               	movlb	1	; select bank1
 10901  0201  00B4               	movwf	_gp3_fsm^(0+128)
 10902  0202  0008               	return
 10903  0203                     l7937:	
 10904                           
 10905                           ;GPports.c: 507: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
 10906  0203  3015               	movlw	21
 10907  0204  2245               	fcall	_ADC_GetConversion
 10908  0205  084A               	movf	?_ADC_GetConversion^(0+128),w
 10909  0206  00CE               	movwf	??_GP3_FSM^(0+128)
 10910  0207  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10911  0208  00CF               	movwf	(??_GP3_FSM^(0+128)+1)
 10912  0209  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 10913  020A  0CCE               	rrf	??_GP3_FSM^(0+128),f
 10914  020B  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 10915  020C  0CCE               	rrf	??_GP3_FSM^(0+128),f
 10916  020D  084E               	movf	??_GP3_FSM^(0+128),w
 10917  020E  0020               	movlb	0	; select bank0
 10918  020F  00BF               	movwf	_GP3REG	;volatile
 10919                           
 10920                           ;GPports.c: 508: break;
 10921  0210  0008               	return
 10922  0211                     l1328:	
 10923                           ;GPports.c: 510: case GP_WAITRISE:
 10924                           
 10925                           
 10926                           ;GPports.c: 511: if (PORTCbits.RC5 == 1) {
 10927  0211  0020               	movlb	0	; select bank0
 10928  0212  1E8E               	btfss	14,5	;volatile
 10929  0213  0008               	return
 10930                           
 10931                           ;GPports.c: 512: GP3REG = 1;
 10932  0214  3001               	movlw	1
 10933  0215  00BF               	movwf	_GP3REG	;volatile
 10934                           
 10935                           ;GPports.c: 513: Int2StatusUpdate(E_GP3POS);
 10936  0216  3010               	movlw	16
 10937  0217  2238  3180         	fcall	_Int2StatusUpdate
 10938                           
 10939                           ;GPports.c: 514: if ((GP3CONF & 0x08) != 0) {
 10940  0219  1DC5               	btfss	_GP3CONF,3	;volatile
 10941  021A  2A1C               	goto	l7947
 10942                           
 10943                           ;GPports.c: 515: SetInterrupt();
 10944  021B  223D               	fcall	_SetInterrupt
 10945  021C                     l7947:	
 10946                           
 10947                           ;GPports.c: 516: };GPports.c: 517: gp3_fsm = GP_WAITFALL;
 10948  021C  3003               	movlw	3
 10949  021D  0021               	movlb	1	; select bank1
 10950  021E  00B4               	movwf	_gp3_fsm^(0+128)
 10951  021F  0008               	return
 10952  0220                     l1331:	
 10953                           ;GPports.c: 521: case GP_WAITFALL:
 10954                           
 10955                           
 10956                           ;GPports.c: 522: if (PORTCbits.RC5 == 0) {
 10957  0220  0020               	movlb	0	; select bank0
 10958  0221  1A8E               	btfsc	14,5	;volatile
 10959  0222  0008               	return
 10960                           
 10961                           ;GPports.c: 524: GP3REG = 0;
 10962  0223  01BF               	clrf	_GP3REG	;volatile
 10963                           
 10964                           ;GPports.c: 525: Int2StatusUpdate(E_GP3NEG);
 10965  0224  3020               	movlw	32
 10966  0225  2238  3180         	fcall	_Int2StatusUpdate
 10967                           
 10968                           ;GPports.c: 526: if ((GP3CONF & 0x10) != 0) {
 10969  0227  1E45               	btfss	_GP3CONF,4	;volatile
 10970  0228  29FF               	goto	l7933
 10971                           
 10972                           ;GPports.c: 527: SetInterrupt();
 10973  0229  223D  3180         	fcall	_SetInterrupt
 10974  022B  29FF               	goto	l7933
 10975  022C                     l7961:	
 10976  022C  0021               	movlb	1	; select bank1
 10977  022D  0834               	movf	_gp3_fsm^(0+128),w
 10978                           
 10979                           ; Switch size 1, requested type "speed"
 10980                           ; Number of cases is 4, Range of values is 0 to 3
 10981                           ; switch strategies available:
 10982                           ; Name         Instructions Cycles
 10983                           ; direct_byte           14     6 (fixed)
 10984                           ; simple_byte           13     7 (average)
 10985                           ; jumptable            260     6 (fixed)
 10986                           ;	Chosen strategy is direct_byte
 10987  022E  0084               	movwf	4
 10988  022F  3004               	movlw	4
 10989  0230  0204               	subwf	4,w
 10990  0231  1803               	skipnc
 10991  0232  0008               	return
 10992  0233  3190               	movlp	high S8541
 10993  0234  3504               	lslf	4,w
 10994  0235  3EF2               	addlw	low S8541
 10995  0236  0082               	movwf	2
 10996  0237  0008               	return
 10997  0238                     __end_of_GP3_FSM:	
 10998  0238                     __ptext33:	
 10999 ;; *************** function _Int2StatusUpdate *****************
 11000 ;; Defined at:
 11001 ;;		line 142 in file "DataVariable.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  stat            1    wreg     enum E87
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  stat            1    1[BANK1 ] enum E87
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      void 
 11008 ;; Registers used:
 11009 ;;		wreg, status,2, status,0, pclath, cstack
 11010 ;; Tracked objects:
 11011 ;;		On entry : 1E/0
 11012 ;;		On exit  : 1F/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;Total ram usage:        1 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    8
 11022 ;; This function calls:
 11023 ;;		_EncoderStatusUpdate
 11024 ;; This function is called by:
 11025 ;;		_FadeProcessClear
 11026 ;;		_GP1_FSM
 11027 ;;		_GP2_FSM
 11028 ;;		_GP3_FSM
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           
 11033                           ;psect for function _Int2StatusUpdate
 11034  0238                     _Int2StatusUpdate:	
 11035                           
 11036                           ;incstack = 0
 11037                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 11038                           ;Int2StatusUpdate@stat stored from wreg
 11039  0238  0021               	movlb	1	; select bank1
 11040  0239  00CB               	movwf	Int2StatusUpdate@stat^(0+128)
 11041                           
 11042                           ;DataVariable.c: 143: I2STATUS |= (uint8_t) stat;
 11043  023A  04C8               	iorwf	_I2STATUS^(0+128),f	;volatile
 11044                           
 11045                           ;DataVariable.c: 144: EncoderStatusUpdate(S_INT2);
 11046  023B  3080               	movlw	128
 11047  023C  2B04               	ljmp	_EncoderStatusUpdate
 11048  023D                     __end_of_Int2StatusUpdate:	
 11049  023D                     __ptext35:	
 11050 ;; *************** function _SetInterrupt *****************
 11051 ;; Defined at:
 11052 ;;		line 56 in file "main.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;		None
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 18/0
 11063 ;;		On exit  : 1D/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;Total ram usage:        0 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    7
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_FadeProcessClear
 11077 ;;		_GP1_FSM
 11078 ;;		_GP2_FSM
 11079 ;;		_GP3_FSM
 11080 ;;		_Encoder_PushButton_FSM
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           
 11085                           ;psect for function _SetInterrupt
 11086  023D                     _SetInterrupt:	
 11087  023D                     l7271:	
 11088                           ;incstack = 0
 11089                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 11090                           
 11091                           
 11092                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 11093  023D  0020               	movlb	0	; select bank0
 11094  023E  084A               	movf	_ESTATUS,w	;volatile
 11095  023F  0549               	andwf	_INTCONF,w	;volatile
 11096  0240  1903               	btfsc	3,2
 11097  0241  0008               	return
 11098                           
 11099                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 11100  0242  0022               	movlb	2	; select bank2
 11101  0243  128D               	bcf	13,5	;volatile
 11102  0244  0008               	return
 11103  0245                     __end_of_SetInterrupt:	
 11104  0245                     __ptext19:	
 11105 ;; *************** function _ADC_GetConversion *****************
 11106 ;; Defined at:
 11107 ;;		line 113 in file "mcc_generated_files/adc.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  channel         1    wreg     enum E6505
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  channel         1    3[BANK1 ] enum E6505
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  2    0[BANK1 ] unsigned int 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 1E/1
 11118 ;;		On exit  : 1F/1
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11121 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;Total ram usage:        4 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    7
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_GP1_FSM
 11132 ;;		_GP2_FSM
 11133 ;;		_GP3_FSM
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _ADC_GetConversion
 11139  0245                     _ADC_GetConversion:	
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11143                           ;ADC_GetConversion@channel stored from wreg
 11144  0245  0021               	movlb	1	; select bank1
 11145  0246  00CD               	movwf	ADC_GetConversion@channel^(0+128)
 11146                           
 11147                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11148  0247  00CC               	movwf	??_ADC_GetConversion^(0+128)
 11149  0248  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 11150  0249  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 11151  024A  081D               	movf	29,w	;volatile
 11152  024B  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 11153  024C  3903               	andlw	-253
 11154  024D  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 11155  024E  009D               	movwf	29	;volatile
 11156                           
 11157                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11158  024F  141D               	bsf	29,0	;volatile
 11159                           
 11160                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
 11161  0250  300D               	movlw	13
 11162  0251                     u5797:	
 11163  0251  0B89               	decfsz	9,f
 11164  0252  2A51               	goto	u5797
 11165  0253  0000               	nop
 11166                           
 11167                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 11168  0254  0021               	movlb	1	; select bank1
 11169  0255  149D               	bsf	29,1	;volatile
 11170  0256                     l376:	
 11171                           ;adc.c: 129: {
 11172                           
 11173  0256  189D               	btfsc	29,1	;volatile
 11174  0257  2A56               	goto	l376
 11175                           
 11176                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11177  0258  081C               	movf	28,w	;volatile
 11178  0259  00CB               	movwf	(?_ADC_GetConversion+1)^(0+128)
 11179  025A  01CA               	clrf	?_ADC_GetConversion^(0+128)
 11180  025B  081B               	movf	27,w	;volatile
 11181  025C  07CA               	addwf	?_ADC_GetConversion^(0+128),f
 11182  025D  1803               	skipnc
 11183  025E  0ACB               	incf	(?_ADC_GetConversion+1)^(0+128),f
 11184  025F  0008               	return
 11185  0260                     __end_of_ADC_GetConversion:	
 11186  0260                     __ptext18:	
 11187 ;; *************** function _ADC_Initialize *****************
 11188 ;; Defined at:
 11189 ;;		line 65 in file "mcc_generated_files/adc.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;		None
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;		None
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg, status,2
 11198 ;; Tracked objects:
 11199 ;;		On entry : 1F/1
 11200 ;;		On exit  : 1F/1
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;Total ram usage:        0 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:    7
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_GP1_FSM
 11214 ;;		_GP2_FSM
 11215 ;;		_GP3_FSM
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219                           
 11220                           ;psect for function _ADC_Initialize
 11221  0260                     _ADC_Initialize:	
 11222  0260                     l7305:	
 11223                           ;incstack = 0
 11224                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 11225                           
 11226                           
 11227                           ;adc.c: 70: ADCON0 = 0x01;
 11228  0260  3001               	movlw	1
 11229  0261  009D               	movwf	29	;volatile
 11230                           
 11231                           ;adc.c: 73: ADCON1 = 0xE0;
 11232  0262  30E0               	movlw	224
 11233  0263  009E               	movwf	30	;volatile
 11234                           
 11235                           ;adc.c: 76: ADACT = 0x00;
 11236  0264  019F               	clrf	31	;volatile
 11237                           
 11238                           ;adc.c: 79: ADRESL = 0x00;
 11239  0265  019B               	clrf	27	;volatile
 11240                           
 11241                           ;adc.c: 82: ADRESH = 0x00;
 11242  0266  019C               	clrf	28	;volatile
 11243  0267  0008               	return
 11244  0268                     __end_of_ADC_Initialize:	
 11245  0268                     __ptext21:	
 11246 ;; *************** function _FADE_GP2 *****************
 11247 ;; Defined at:
 11248 ;;		line 63 in file "GPports.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11257 ;; Tracked objects:
 11258 ;;		On entry : 10/1
 11259 ;;		On exit  : 18/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:   10
 11269 ;; This function calls:
 11270 ;;		_FadeProcessClear
 11271 ;;		_FadeProcessSet
 11272 ;;		_PWM_GP2
 11273 ;; This function is called by:
 11274 ;;		_GP_Ports_FSM
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           
 11279                           ;psect for function _FADE_GP2
 11280  0268                     _FADE_GP2:	
 11281                           
 11282                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 11283                           
 11284                           ;incstack = 0
 11285                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11286  0268  0020               	movlb	0	; select bank0
 11287  0269  0846               	movf	_GP2CONF,w	;volatile
 11288  026A  3903               	andlw	3
 11289  026B  1D03               	btfss	3,2
 11290  026C  0008               	return
 11291                           
 11292                           ;GPports.c: 68: if (FADEGP == 0) {
 11293  026D  083E               	movf	_FADEGP,w	;volatile
 11294  026E  1D03               	btfss	3,2
 11295  026F  2A77               	goto	l7773
 11296                           
 11297                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 11298  0270  0834               	movf	_temp_gp2,w
 11299  0271  0640               	xorwf	_GP2REG,w	;volatile
 11300  0272  1903               	skipnz
 11301  0273  0008               	return
 11302                           
 11303                           ;GPports.c: 70: temp_gp2 = GP2REG;
 11304  0274  0840               	movf	_GP2REG,w	;volatile
 11305  0275  00B4               	movwf	_temp_gp2
 11306                           
 11307                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 11308  0276  2A94               	ljmp	_PWM_GP2
 11309  0277                     l7773:	
 11310                           
 11311                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 11312  0277  083E               	movf	_FADEGP,w	;volatile
 11313  0278  0021               	movlb	1	; select bank1
 11314  0279  0233               	subwf	_gp_fade_cnt^(0+128),w
 11315  027A  1C03               	skipc
 11316  027B  0008               	return
 11317                           
 11318                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 11319  027C  0020               	movlb	0	; select bank0
 11320  027D  0834               	movf	_temp_gp2,w
 11321  027E  0640               	xorwf	_GP2REG,w	;volatile
 11322  027F  1903               	skipnz
 11323  0280  0008               	return
 11324                           
 11325                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 11326  0281  0840               	movf	_GP2REG,w	;volatile
 11327  0282  0234               	subwf	_temp_gp2,w
 11328  0283  1C03               	btfss	3,0
 11329                           
 11330                           ;GPports.c: 80: temp_gp2++;
 11331  0284  0AB4               	incf	_temp_gp2,f
 11332                           
 11333                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 11334  0285  0834               	movf	_temp_gp2,w
 11335  0286  0240               	subwf	_GP2REG,w	;volatile
 11336  0287  1C03               	btfss	3,0
 11337                           
 11338                           ;GPports.c: 83: temp_gp2--;
 11339  0288  03B4               	decf	_temp_gp2,f
 11340                           
 11341                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 11342  0289  0834               	movf	_temp_gp2,w
 11343  028A  2294  3180         	fcall	_PWM_GP2
 11344                           
 11345                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 11346  028C  0020               	movlb	0	; select bank0
 11347  028D  0834               	movf	_temp_gp2,w
 11348  028E  0640               	xorwf	_GP2REG,w	;volatile
 11349                           
 11350                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 11351  028F  3010               	movlw	16
 11352  0290  1D03               	skipz
 11353  0291  2A93               	goto	L2
 11354  0292  2CB5               	ljmp	_FadeProcessClear
 11355  0293                     L2:	
 11356                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 11357                           
 11358                           ;GPports.c: 89: } else {
 11359                           
 11360  0293  2CBD               	ljmp	_FadeProcessSet
 11361  0294                     __end_of_FADE_GP2:	
 11362  0294                     __ptext22:	
 11363 ;; *************** function _PWM_GP2 *****************
 11364 ;; Defined at:
 11365 ;;		line 64 in file "PWM.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  duty            1    wreg     unsigned char 
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  duty            1   12[BANK1 ] unsigned char 
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : 1F/0
 11376 ;;		On exit  : 1F/6
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;Total ram usage:        7 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    8
 11386 ;; This function calls:
 11387 ;;		___wmul
 11388 ;; This function is called by:
 11389 ;;		_FADE_GP2
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           
 11394                           ;psect for function _PWM_GP2
 11395  0294                     _PWM_GP2:	
 11396                           
 11397                           ;incstack = 0
 11398                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11399                           ;PWM_GP2@duty stored from wreg
 11400  0294  0021               	movlb	1	; select bank1
 11401  0295  00D6               	movwf	PWM_GP2@duty^(0+128)
 11402                           
 11403                           ;PWM.c: 66: if (duty == 0) {
 11404  0296  0856               	movf	PWM_GP2@duty^(0+128),w
 11405  0297  1D03               	btfss	3,2
 11406  0298  2AAD               	goto	l7399
 11407                           
 11408                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 11409  0299  0022               	movlb	2	; select bank2
 11410  029A  170E               	bsf	14,6	;volatile
 11411                           
 11412                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11413  029B  3055               	movlw	85
 11414  029C  003C               	movlb	28	; select bank28
 11415  029D  008F               	movwf	15	;volsfr
 11416  029E  30AA               	movlw	170
 11417  029F  008F               	movwf	15	;volsfr
 11418  02A0  100F               	bcf	15,0	;volsfr
 11419                           
 11420                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 11421  02A1  30E0               	movlw	-32
 11422  02A2  003D               	movlb	29	; select bank29
 11423  02A3  05A6               	andwf	38,f	;volatile
 11424                           
 11425                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11426  02A4  3055               	movlw	85
 11427  02A5  003C               	movlb	28	; select bank28
 11428  02A6  008F               	movwf	15	;volsfr
 11429  02A7  30AA               	movlw	170
 11430  02A8  008F               	movwf	15	;volsfr
 11431  02A9  140F               	bsf	15,0	;volsfr
 11432                           
 11433                           ;PWM.c: 72: CCP4CON = 0;
 11434  02AA  0026               	movlb	6	; select bank6
 11435  02AB  0197               	clrf	23	;volatile
 11436  02AC  0008               	return
 11437  02AD                     l7399:	
 11438                           
 11439                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 11440  02AD  0026               	movlb	6	; select bank6
 11441  02AE  0817               	movf	23,w	;volatile
 11442  02AF  1D03               	btfss	3,2
 11443  02B0  2AC5               	goto	l1558
 11444                           
 11445                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11446  02B1  3055               	movlw	85
 11447  02B2  003C               	movlb	28	; select bank28
 11448  02B3  008F               	movwf	15	;volsfr
 11449  02B4  30AA               	movlw	170
 11450  02B5  008F               	movwf	15	;volsfr
 11451  02B6  100F               	bcf	15,0	;volsfr
 11452                           
 11453                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 11454  02B7  003D               	movlb	29	; select bank29
 11455  02B8  0826               	movf	38,w	;volatile
 11456  02B9  39E0               	andlw	-32
 11457  02BA  380F               	iorlw	15
 11458  02BB  00A6               	movwf	38	;volatile
 11459                           
 11460                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11461  02BC  3055               	movlw	85
 11462  02BD  003C               	movlb	28	; select bank28
 11463  02BE  008F               	movwf	15	;volsfr
 11464  02BF  30AA               	movlw	170
 11465  02C0  008F               	movwf	15	;volsfr
 11466  02C1  140F               	bsf	15,0	;volsfr
 11467                           
 11468                           ;PWM.c: 79: CCP4CON = 0x8F;
 11469  02C2  308F               	movlw	143
 11470  02C3  0026               	movlb	6	; select bank6
 11471  02C4  0097               	movwf	23	;volatile
 11472  02C5                     l1558:	
 11473                           
 11474                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 11475  02C5  0020               	movlb	0	; select bank0
 11476  02C6  083C               	movf	_GAMMAGP2,w	;volatile
 11477  02C7  1D03               	btfss	3,2
 11478  02C8  2AD9               	goto	l7417
 11479                           
 11480                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 11481  02C9  0021               	movlb	1	; select bank1
 11482  02CA  0956               	comf	PWM_GP2@duty^(0+128),w
 11483  02CB  00D0               	movwf	??_PWM_GP2^(0+128)
 11484  02CC  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 11485  02CD  35D0               	lslf	??_PWM_GP2^(0+128),f
 11486  02CE  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11487  02CF  35D0               	lslf	??_PWM_GP2^(0+128),f
 11488  02D0  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11489  02D1  0850               	movf	??_PWM_GP2^(0+128),w
 11490  02D2  0026               	movlb	6	; select bank6
 11491  02D3  0095               	movwf	21	;volatile
 11492  02D4  0021               	movlb	1	; select bank1
 11493  02D5  0851               	movf	(??_PWM_GP2+1)^(0+128),w
 11494  02D6  0026               	movlb	6	; select bank6
 11495  02D7  0096               	movwf	22	;volatile
 11496                           
 11497                           ;PWM.c: 85: } else {
 11498  02D8  0008               	return
 11499  02D9                     l7417:	
 11500                           
 11501                           ;PWM.c: 86: if (duty > 100)
 11502  02D9  3065               	movlw	101
 11503  02DA  0021               	movlb	1	; select bank1
 11504  02DB  0256               	subwf	PWM_GP2@duty^(0+128),w
 11505  02DC  1C03               	skipc
 11506  02DD  2AE0               	goto	l7421
 11507                           
 11508                           ;PWM.c: 87: duty = 100;
 11509  02DE  3064               	movlw	100
 11510  02DF  00D6               	movwf	PWM_GP2@duty^(0+128)
 11511  02E0                     l7421:	
 11512                           
 11513                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 11514  02E0  0856               	movf	PWM_GP2@duty^(0+128),w
 11515  02E1  00D0               	movwf	??_PWM_GP2^(0+128)
 11516  02E2  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 11517  02E3  35D0               	lslf	??_PWM_GP2^(0+128),f
 11518  02E4  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11519  02E5  0020               	movlb	0	; select bank0
 11520  02E6  083C               	movf	_GAMMAGP2,w	;volatile
 11521  02E7  0021               	movlb	1	; select bank1
 11522  02E8  00CA               	movwf	___wmul@multiplier^(0+128)
 11523  02E9  30C8               	movlw	200
 11524  02EA  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 11525  02EB  00CC               	movwf	___wmul@multiplicand^(0+128)
 11526  02EC  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 11527  02ED  261A               	fcall	___wmul
 11528  02EE  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 11529  02EF  00D2               	movwf	(??_PWM_GP2+2)^(0+128)
 11530  02F0  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 11531  02F1  00D3               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 11532  02F2  084A               	movf	?___wmul^(0+128),w
 11533  02F3  0752               	addwf	(??_PWM_GP2+2)^(0+128),w
 11534  02F4  00D4               	movwf	(??_PWM_GP2+4)^(0+128)
 11535  02F5  084B               	movf	(?___wmul+1)^(0+128),w
 11536  02F6  3D53               	addwfc	(??_PWM_GP2+3)^(0+128),w
 11537  02F7  00D5               	movwf	(??_PWM_GP2+5)^(0+128)
 11538  02F8  0854               	movf	(??_PWM_GP2+4)^(0+128),w
 11539  02F9  0750               	addwf	??_PWM_GP2^(0+128),w
 11540  02FA  0084               	movwf	4
 11541  02FB  0855               	movf	(??_PWM_GP2+5)^(0+128),w
 11542  02FC  3D51               	addwfc	(??_PWM_GP2+1)^(0+128),w
 11543  02FD  0085               	movwf	5
 11544  02FE  3F00               	moviw [0]fsr0
 11545  02FF  0026               	movlb	6	; select bank6
 11546  0300  0095               	movwf	21	;volatile
 11547  0301  3F01               	moviw [1]fsr0
 11548  0302  0096               	movwf	22	;volatile
 11549  0303  0008               	return
 11550  0304                     __end_of_PWM_GP2:	
 11551  0304                     __ptext38:	
 11552 ;; *************** function _EncoderStatusUpdate *****************
 11553 ;; Defined at:
 11554 ;;		line 134 in file "DataVariable.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  stat            1    wreg     enum E77
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  stat            1    0[BANK1 ] enum E77
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1    wreg      void 
 11561 ;; Registers used:
 11562 ;;		wreg, status,2, status,0
 11563 ;; Tracked objects:
 11564 ;;		On entry : 1F/1
 11565 ;;		On exit  : 1F/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;Total ram usage:        1 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:    7
 11575 ;; This function calls:
 11576 ;;		Nothing
 11577 ;; This function is called by:
 11578 ;;		_Int2StatusUpdate
 11579 ;;		_Encoder_PushButton_FSM
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           
 11584                           ;psect for function _EncoderStatusUpdate
 11585  0304                     _EncoderStatusUpdate:	
 11586                           
 11587                           ;incstack = 0
 11588                           ; Regs used in _EncoderStatusUpdate: [wreg+status,2+status,0]
 11589                           ;EncoderStatusUpdate@stat stored from wreg
 11590  0304  00CA               	movwf	EncoderStatusUpdate@stat^(0+128)
 11591                           
 11592                           ;DataVariable.c: 135: ESTATUS |= (uint8_t) stat;
 11593  0305  0020               	movlb	0	; select bank0
 11594  0306  04CA               	iorwf	_ESTATUS,f	;volatile
 11595  0307  0008               	return
 11596  0308                     __end_of_EncoderStatusUpdate:	
 11597  0308                     __ptext37:	
 11598 ;; *************** function _EncoderSwitch_GetValue *****************
 11599 ;; Defined at:
 11600 ;;		line 29 in file "Encoder.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      unsigned char 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2, status,0
 11609 ;; Tracked objects:
 11610 ;;		On entry : 18/1
 11611 ;;		On exit  : 1F/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:    7
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_EncoderSwitch_GetValueFiltered
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           
 11629                           ;psect for function _EncoderSwitch_GetValue
 11630  0308                     _EncoderSwitch_GetValue:	
 11631                           
 11632                           ;Encoder.c: 30: if (C_ETYPE == 1) {
 11633                           
 11634                           ;incstack = 0
 11635                           ; Regs used in _EncoderSwitch_GetValue: [wreg+status,2+status,0]
 11636  0308  0020               	movlb	0	; select bank0
 11637  0309  0B38               	decfsz	_C_ETYPE,w	;volatile
 11638  030A  2B0F               	goto	l7285
 11639                           
 11640                           ;Encoder.c: 31: return (PORTCbits.RC2);
 11641  030B  0C0E               	rrf	14,w	;volatile
 11642  030C  0C89               	rrf	9,f
 11643  030D  3901               	andlw	1
 11644  030E  0008               	return
 11645  030F                     l7285:	
 11646                           
 11647                           ;Encoder.c: 33: return ((bool)!PORTCbits.RC4);
 11648  030F  1003               	clrc
 11649  0310  1E0E               	btfss	14,4	;volatile
 11650  0311  1403               	setc
 11651  0312  3000               	movlw	0
 11652  0313  3D09               	addwfc	9,w
 11653  0314  0008               	return
 11654  0315                     __end_of_EncoderSwitch_GetValue:	
 11655  0315                     __ptext25:	
 11656 ;; *************** function _Encoder_FSM *****************
 11657 ;; Defined at:
 11658 ;;		line 308 in file "Encoder.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;		None
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 1F/1
 11669 ;;		On exit  : 1C/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        0 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:   11
 11679 ;; This function calls:
 11680 ;;		_Encoder_PushButton_FSM
 11681 ;;		_FADE_LEDS
 11682 ;; This function is called by:
 11683 ;;		_main
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           
 11688                           ;psect for function _Encoder_FSM
 11689  0315                     _Encoder_FSM:	
 11690                           
 11691                           ;Encoder.c: 309: if (en_deb < DEBOUNCE) {
 11692                           
 11693                           ;incstack = 0
 11694                           ; Regs used in _Encoder_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11695  0315  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 11696  0316  0221               	subwf	(_en_deb+1)^(0+128),w
 11697  0317  1D03               	skipz
 11698  0318  2B1B               	goto	u5755
 11699  0319  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 11700  031A  0220               	subwf	_en_deb^(0+128),w
 11701  031B                     u5755:	
 11702  031B  1803               	skipnc
 11703  031C  2B20               	goto	l8151
 11704                           
 11705                           ;Encoder.c: 310: en_deb++;
 11706  031D  0AA0               	incf	_en_deb^(0+128),f
 11707  031E  1903               	skipnz
 11708  031F  0AA1               	incf	(_en_deb+1)^(0+128),f
 11709  0320                     l8151:	
 11710                           
 11711                           ;Encoder.c: 311: };Encoder.c: 313: FADE_LEDS();
 11712  0320  243D  3180         	fcall	_FADE_LEDS
 11713                           
 11714                           ;Encoder.c: 314: Encoder_PushButton_FSM();
 11715  0322  28AD               	ljmp	l8053
 11716  0323                     __end_of_Encoder_FSM:	
 11717  0323                     __ptext5:	
 11718 ;; *************** function _TMR3_SetInterruptHandler *****************
 11719 ;; Defined at:
 11720 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11723 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 11724 ;; Auto vars:     Size  Location     Type
 11725 ;;		None
 11726 ;; Return value:  Size  Location     Type
 11727 ;;                  1    wreg      void 
 11728 ;; Registers used:
 11729 ;;		wreg
 11730 ;; Tracked objects:
 11731 ;;		On entry : 1F/1
 11732 ;;		On exit  : 1F/1
 11733 ;;		Unchanged: 0/0
 11734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11735 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;Total ram usage:        2 bytes
 11740 ;; Hardware stack levels used:    1
 11741 ;; Hardware stack levels required when called:    7
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_TMR3_Initialize
 11746 ;;		_main
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750                           
 11751                           ;psect for function _TMR3_SetInterruptHandler
 11752  0323                     _TMR3_SetInterruptHandler:	
 11753                           
 11754                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11755                           
 11756                           ;incstack = 0
 11757                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11758  0323  084B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11759  0324  00AB               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11760  0325  084A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11761  0326  00AA               	movwf	_TMR3_InterruptHandler^(0+128)
 11762  0327  0008               	return
 11763  0328                     __end_of_TMR3_SetInterruptHandler:	
 11764  0328                     __ptext2:	
 11765 ;; *************** function _SYSTEM_Initialize *****************
 11766 ;; Defined at:
 11767 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      void 
 11774 ;; Registers used:
 11775 ;;		wreg, status,2, status,0, pclath, cstack
 11776 ;; Tracked objects:
 11777 ;;		On entry : B1F/0
 11778 ;;		On exit  : 1F/8
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:    9
 11788 ;; This function calls:
 11789 ;;		_CLC1_Initialize
 11790 ;;		_CLC2_Initialize
 11791 ;;		_I2C1_AddressSet
 11792 ;;		_I2C1_Initialize
 11793 ;;		_OSCILLATOR_Initialize
 11794 ;;		_PIN_MANAGER_Initialize
 11795 ;;		_PMD_Initialize
 11796 ;;		_TMR2_Initialize
 11797 ;;		_TMR3_Initialize
 11798 ;;		_WDT_Initialize
 11799 ;; This function is called by:
 11800 ;;		_main
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           
 11805                           ;psect for function _SYSTEM_Initialize
 11806  0328                     _SYSTEM_Initialize:	
 11807                           
 11808                           ;mcc.c: 53: PMD_Initialize();
 11809                           
 11810                           ;incstack = 0
 11811                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11812  0328  2692  3180         	fcall	_PMD_Initialize
 11813                           
 11814                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 11815  032A  265C  3180         	fcall	_PIN_MANAGER_Initialize
 11816                           
 11817                           ;mcc.c: 55: OSCILLATOR_Initialize();
 11818  032C  2653  3180         	fcall	_OSCILLATOR_Initialize
 11819                           
 11820                           ;mcc.c: 56: WDT_Initialize();
 11821  032E  26A8  3180         	fcall	_WDT_Initialize
 11822                           
 11823                           ;mcc.c: 57: I2C1_AddressSet();
 11824  0330  262F  3180         	fcall	_I2C1_AddressSet
 11825                           
 11826                           ;mcc.c: 58: I2C1_Initialize();
 11827  0332  2642  3180         	fcall	_I2C1_Initialize
 11828                           
 11829                           ;mcc.c: 59: CLC2_Initialize();
 11830  0334  233B  3180         	fcall	_CLC2_Initialize
 11831                           
 11832                           ;mcc.c: 60: TMR2_Initialize();
 11833  0336  26A0  3180         	fcall	_TMR2_Initialize
 11834                           
 11835                           ;mcc.c: 61: CLC1_Initialize();
 11836  0338  26AF  3180         	fcall	_CLC1_Initialize
 11837                           
 11838                           ;mcc.c: 62: TMR3_Initialize();
 11839  033A  2EC4               	ljmp	l7707
 11840  033B                     __end_of_SYSTEM_Initialize:	
 11841  033B                     __ptext12:	
 11842 ;; *************** function _CLC2_Initialize *****************
 11843 ;; Defined at:
 11844 ;;		line 58 in file "mcc_generated_files/clc2.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2
 11853 ;; Tracked objects:
 11854 ;;		On entry : B1F/1
 11855 ;;		On exit  : B1F/1
 11856 ;;		Unchanged: B00/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    7
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_SYSTEM_Initialize
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           
 11873                           ;psect for function _CLC2_Initialize
 11874  033B                     _CLC2_Initialize:	
 11875                           
 11876                           ;clc2.c: 63: CLC2POL = 0x04;
 11877                           
 11878                           ;incstack = 0
 11879                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 11880  033B  3004               	movlw	4
 11881  033C  003E               	movlb	30	; select bank30
 11882  033D  009B               	movwf	27	;volatile
 11883                           
 11884                           ;clc2.c: 65: CLC2SEL0 = 0x01;
 11885  033E  3001               	movlw	1
 11886  033F  009C               	movwf	28	;volatile
 11887                           
 11888                           ;clc2.c: 67: CLC2SEL1 = 0x00;
 11889  0340  019D               	clrf	29	;volatile
 11890                           
 11891                           ;clc2.c: 69: CLC2SEL2 = 0x00;
 11892  0341  019E               	clrf	30	;volatile
 11893                           
 11894                           ;clc2.c: 71: CLC2SEL3 = 0x00;
 11895  0342  019F               	clrf	31	;volatile
 11896                           
 11897                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 11898  0343  3002               	movlw	2
 11899  0344  00A0               	movwf	32	;volatile
 11900                           
 11901                           ;clc2.c: 75: CLC2GLS1 = 0xA8;
 11902  0345  30A8               	movlw	168
 11903  0346  00A1               	movwf	33	;volatile
 11904                           
 11905                           ;clc2.c: 77: CLC2GLS2 = 0xA8;
 11906  0347  00A2               	movwf	34	;volatile
 11907                           
 11908                           ;clc2.c: 79: CLC2GLS3 = 0xA8;
 11909  0348  00A3               	movwf	35	;volatile
 11910                           
 11911                           ;clc2.c: 81: CLC2CON = 0x95;
 11912  0349  3095               	movlw	149
 11913  034A  009A               	movwf	26	;volatile
 11914                           
 11915                           ;clc2.c: 84: PIR3bits.CLC2IF = 0;
 11916  034B  0020               	movlb	0	; select bank0
 11917  034C  1093               	bcf	19,1	;volatile
 11918                           
 11919                           ;clc2.c: 86: PIE3bits.CLC2IE = 1;
 11920  034D  0021               	movlb	1	; select bank1
 11921  034E  1493               	bsf	19,1	;volatile
 11922  034F  0008               	return
 11923  0350                     __end_of_CLC2_Initialize:	
 11924  0350                     __ptext23:	
 11925 ;; *************** function _FADE_GP1 *****************
 11926 ;; Defined at:
 11927 ;;		line 26 in file "GPports.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;		None
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 1C/1
 11938 ;;		On exit  : 10/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;Total ram usage:        0 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:   10
 11948 ;; This function calls:
 11949 ;;		_FadeProcessClear
 11950 ;;		_FadeProcessSet
 11951 ;;		_PWM_GP1
 11952 ;; This function is called by:
 11953 ;;		_GP_Ports_FSM
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           
 11958                           ;psect for function _FADE_GP1
 11959  0350                     _FADE_GP1:	
 11960                           
 11961                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
 11962                           
 11963                           ;incstack = 0
 11964                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11965  0350  0020               	movlb	0	; select bank0
 11966  0351  0847               	movf	_GP1CONF,w	;volatile
 11967  0352  3903               	andlw	3
 11968  0353  1D03               	btfss	3,2
 11969  0354  0008               	return
 11970                           
 11971                           ;GPports.c: 31: if (FADEGP == 0) {
 11972  0355  083E               	movf	_FADEGP,w	;volatile
 11973  0356  1D03               	btfss	3,2
 11974  0357  2B5F               	goto	l7739
 11975                           
 11976                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
 11977  0358  0835               	movf	_temp_gp1,w
 11978  0359  0641               	xorwf	_GP1REG,w	;volatile
 11979  035A  1903               	skipnz
 11980  035B  0008               	return
 11981                           
 11982                           ;GPports.c: 33: temp_gp1 = GP1REG;
 11983  035C  0841               	movf	_GP1REG,w	;volatile
 11984  035D  00B5               	movwf	_temp_gp1
 11985                           
 11986                           ;GPports.c: 34: PWM_GP1(temp_gp1);
 11987  035E  2B7C               	ljmp	_PWM_GP1
 11988  035F                     l7739:	
 11989                           
 11990                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
 11991  035F  083E               	movf	_FADEGP,w	;volatile
 11992  0360  0021               	movlb	1	; select bank1
 11993  0361  0233               	subwf	_gp_fade_cnt^(0+128),w
 11994  0362  1C03               	skipc
 11995  0363  0008               	return
 11996                           
 11997                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
 11998  0364  0020               	movlb	0	; select bank0
 11999  0365  0835               	movf	_temp_gp1,w
 12000  0366  0641               	xorwf	_GP1REG,w	;volatile
 12001  0367  1903               	skipnz
 12002  0368  0008               	return
 12003                           
 12004                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
 12005  0369  0841               	movf	_GP1REG,w	;volatile
 12006  036A  0235               	subwf	_temp_gp1,w
 12007  036B  1C03               	btfss	3,0
 12008                           
 12009                           ;GPports.c: 43: temp_gp1++;
 12010  036C  0AB5               	incf	_temp_gp1,f
 12011                           
 12012                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
 12013  036D  0835               	movf	_temp_gp1,w
 12014  036E  0241               	subwf	_GP1REG,w	;volatile
 12015  036F  1C03               	btfss	3,0
 12016                           
 12017                           ;GPports.c: 46: temp_gp1--;
 12018  0370  03B5               	decf	_temp_gp1,f
 12019                           
 12020                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
 12021  0371  0835               	movf	_temp_gp1,w
 12022  0372  237C  3180         	fcall	_PWM_GP1
 12023                           
 12024                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
 12025  0374  0020               	movlb	0	; select bank0
 12026  0375  0835               	movf	_temp_gp1,w
 12027  0376  0641               	xorwf	_GP1REG,w	;volatile
 12028                           
 12029                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
 12030  0377  3008               	movlw	8
 12031  0378  1D03               	skipz
 12032  0379  2B7B               	goto	L3
 12033  037A  2CB5               	ljmp	_FadeProcessClear
 12034  037B                     L3:	
 12035                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
 12036                           
 12037                           ;GPports.c: 52: } else {
 12038                           
 12039  037B  2CBD               	ljmp	_FadeProcessSet
 12040  037C                     __end_of_FADE_GP1:	
 12041  037C                     __ptext24:	
 12042 ;; *************** function _PWM_GP1 *****************
 12043 ;; Defined at:
 12044 ;;		line 30 in file "PWM.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;  duty            1    wreg     unsigned char 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  duty            1   14[BANK1 ] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      void 
 12051 ;; Registers used:
 12052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 1F/0
 12055 ;;		On exit  : 1F/C
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;Total ram usage:        9 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:    8
 12065 ;; This function calls:
 12066 ;;		___wmul
 12067 ;; This function is called by:
 12068 ;;		_FADE_GP1
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           
 12073                           ;psect for function _PWM_GP1
 12074  037C                     _PWM_GP1:	
 12075                           
 12076                           ;incstack = 0
 12077                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12078                           ;PWM_GP1@duty stored from wreg
 12079  037C  0021               	movlb	1	; select bank1
 12080  037D  00D8               	movwf	PWM_GP1@duty^(0+128)
 12081                           
 12082                           ;PWM.c: 32: if (duty == 0) {
 12083  037E  0858               	movf	PWM_GP1@duty^(0+128),w
 12084  037F  1D03               	btfss	3,2
 12085  0380  2B95               	goto	l7353
 12086                           
 12087                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 12088  0381  0022               	movlb	2	; select bank2
 12089  0382  178E               	bsf	14,7	;volatile
 12090                           
 12091                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12092  0383  3055               	movlw	85
 12093  0384  003C               	movlb	28	; select bank28
 12094  0385  008F               	movwf	15	;volsfr
 12095  0386  30AA               	movlw	170
 12096  0387  008F               	movwf	15	;volsfr
 12097  0388  100F               	bcf	15,0	;volsfr
 12098                           
 12099                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 12100  0389  30E0               	movlw	-32
 12101  038A  003D               	movlb	29	; select bank29
 12102  038B  05A7               	andwf	39,f	;volatile
 12103                           
 12104                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12105  038C  3055               	movlw	85
 12106  038D  003C               	movlb	28	; select bank28
 12107  038E  008F               	movwf	15	;volsfr
 12108  038F  30AA               	movlw	170
 12109  0390  008F               	movwf	15	;volsfr
 12110  0391  140F               	bsf	15,0	;volsfr
 12111                           
 12112                           ;PWM.c: 38: PWM5CON = 0;
 12113  0392  002C               	movlb	12	; select bank12
 12114  0393  0199               	clrf	25	;volatile
 12115  0394  0008               	return
 12116  0395                     l7353:	
 12117                           
 12118                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 12119  0395  002C               	movlb	12	; select bank12
 12120  0396  0819               	movf	25,w	;volatile
 12121  0397  1D03               	btfss	3,2
 12122  0398  2BAD               	goto	l1548
 12123                           
 12124                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12125  0399  3055               	movlw	85
 12126  039A  003C               	movlb	28	; select bank28
 12127  039B  008F               	movwf	15	;volsfr
 12128  039C  30AA               	movlw	170
 12129  039D  008F               	movwf	15	;volsfr
 12130  039E  100F               	bcf	15,0	;volsfr
 12131                           
 12132                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 12133  039F  003D               	movlb	29	; select bank29
 12134  03A0  0827               	movf	39,w	;volatile
 12135  03A1  39E0               	andlw	-32
 12136  03A2  3802               	iorlw	2
 12137  03A3  00A7               	movwf	39	;volatile
 12138                           
 12139                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12140  03A4  3055               	movlw	85
 12141  03A5  003C               	movlb	28	; select bank28
 12142  03A6  008F               	movwf	15	;volsfr
 12143  03A7  30AA               	movlw	170
 12144  03A8  008F               	movwf	15	;volsfr
 12145  03A9  140F               	bsf	15,0	;volsfr
 12146                           
 12147                           ;PWM.c: 46: PWM5CON = 0x80;
 12148  03AA  3080               	movlw	128
 12149  03AB  002C               	movlb	12	; select bank12
 12150  03AC  0099               	movwf	25	;volatile
 12151  03AD                     l1548:	
 12152                           
 12153                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 12154  03AD  0020               	movlb	0	; select bank0
 12155  03AE  083D               	movf	_GAMMAGP1,w	;volatile
 12156  03AF  1D03               	btfss	3,2
 12157  03B0  2BB7               	goto	l7373
 12158                           
 12159                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 12160  03B1  0021               	movlb	1	; select bank1
 12161  03B2  0958               	comf	PWM_GP1@duty^(0+128),w
 12162  03B3  002C               	movlb	12	; select bank12
 12163  03B4  0098               	movwf	24	;volatile
 12164                           
 12165                           ;PWM.c: 51: PWM5DCL = 0;
 12166  03B5  0197               	clrf	23	;volatile
 12167                           
 12168                           ;PWM.c: 52: } else {
 12169  03B6  0008               	return
 12170  03B7                     l7373:	
 12171                           
 12172                           ;PWM.c: 53: if (duty > 100)
 12173  03B7  3065               	movlw	101
 12174  03B8  0021               	movlb	1	; select bank1
 12175  03B9  0258               	subwf	PWM_GP1@duty^(0+128),w
 12176  03BA  1C03               	skipc
 12177  03BB  2BBE               	goto	l7377
 12178                           
 12179                           ;PWM.c: 54: duty = 100;
 12180  03BC  3064               	movlw	100
 12181  03BD  00D8               	movwf	PWM_GP1@duty^(0+128)
 12182  03BE                     l7377:	
 12183                           
 12184                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 12185  03BE  0858               	movf	PWM_GP1@duty^(0+128),w
 12186  03BF  00D0               	movwf	??_PWM_GP1^(0+128)
 12187  03C0  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 12188  03C1  35D0               	lslf	??_PWM_GP1^(0+128),f
 12189  03C2  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 12190  03C3  0020               	movlb	0	; select bank0
 12191  03C4  083D               	movf	_GAMMAGP1,w	;volatile
 12192  03C5  0021               	movlb	1	; select bank1
 12193  03C6  00CA               	movwf	___wmul@multiplier^(0+128)
 12194  03C7  30C8               	movlw	200
 12195  03C8  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12196  03C9  00CC               	movwf	___wmul@multiplicand^(0+128)
 12197  03CA  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12198  03CB  261A  3180         	fcall	___wmul
 12199  03CD  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 12200  03CE  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 12201  03CF  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12202  03D0  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 12203  03D1  084A               	movf	?___wmul^(0+128),w
 12204  03D2  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 12205  03D3  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 12206  03D4  084B               	movf	(?___wmul+1)^(0+128),w
 12207  03D5  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 12208  03D6  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 12209  03D7  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 12210  03D8  0750               	addwf	??_PWM_GP1^(0+128),w
 12211  03D9  0084               	movwf	4
 12212  03DA  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 12213  03DB  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 12214  03DC  0085               	movwf	5
 12215  03DD  3F00               	moviw [0]fsr0
 12216  03DE  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 12217  03DF  3F01               	moviw [1]fsr0
 12218  03E0  00D7               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 12219  03E1  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 12220  03E2  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12221  03E3  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 12222  03E4  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12223  03E5  0856               	movf	(??_PWM_GP1+6)^(0+128),w
 12224  03E6  002C               	movlb	12	; select bank12
 12225  03E7  0098               	movwf	24	;volatile
 12226                           
 12227                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 12228  03E8  0021               	movlb	1	; select bank1
 12229  03E9  0858               	movf	PWM_GP1@duty^(0+128),w
 12230  03EA  00D0               	movwf	??_PWM_GP1^(0+128)
 12231  03EB  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 12232  03EC  35D0               	lslf	??_PWM_GP1^(0+128),f
 12233  03ED  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 12234  03EE  0020               	movlb	0	; select bank0
 12235  03EF  083D               	movf	_GAMMAGP1,w	;volatile
 12236  03F0  0021               	movlb	1	; select bank1
 12237  03F1  00CA               	movwf	___wmul@multiplier^(0+128)
 12238  03F2  30C8               	movlw	200
 12239  03F3  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12240  03F4  00CC               	movwf	___wmul@multiplicand^(0+128)
 12241  03F5  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12242  03F6  261A               	fcall	___wmul
 12243  03F7  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 12244  03F8  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 12245  03F9  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12246  03FA  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 12247  03FB  084A               	movf	?___wmul^(0+128),w
 12248  03FC  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 12249  03FD  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 12250  03FE  084B               	movf	(?___wmul+1)^(0+128),w
 12251  03FF  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 12252  0400  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 12253  0401  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 12254  0402  0750               	addwf	??_PWM_GP1^(0+128),w
 12255  0403  0084               	movwf	4
 12256  0404  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 12257  0405  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 12258  0406  0085               	movwf	5
 12259  0407  0800               	movf	0,w	;code access
 12260  0408  3903               	andlw	3
 12261  0409  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 12262  040A  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12263  040B  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12264  040C  0C56               	rrf	(??_PWM_GP1+6)^(0+128),w
 12265  040D  39C0               	andlw	192
 12266  040E  002C               	movlb	12	; select bank12
 12267  040F  0097               	movwf	23	;volatile
 12268  0410  0008               	return
 12269  0411                     __end_of_PWM_GP1:	
 12270  0411                     __ptext20:	
 12271 ;; *************** function _FADE_GP3 *****************
 12272 ;; Defined at:
 12273 ;;		line 101 in file "GPports.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 18/1
 12284 ;;		On exit  : 18/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:   10
 12294 ;; This function calls:
 12295 ;;		_FadeProcessClear
 12296 ;;		_FadeProcessSet
 12297 ;;		_PWM_GP3_RLED
 12298 ;; This function is called by:
 12299 ;;		_GP_Ports_FSM
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _FADE_GP3
 12305  0411                     _FADE_GP3:	
 12306                           
 12307                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12311  0411  0020               	movlb	0	; select bank0
 12312  0412  0845               	movf	_GP3CONF,w	;volatile
 12313  0413  3903               	andlw	3
 12314  0414  1D03               	btfss	3,2
 12315  0415  0008               	return
 12316                           
 12317                           ;GPports.c: 106: if (FADEGP == 0) {
 12318  0416  083E               	movf	_FADEGP,w	;volatile
 12319  0417  1D03               	btfss	3,2
 12320  0418  2C20               	goto	l7807
 12321                           
 12322                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 12323  0419  0833               	movf	_temp_gp3,w
 12324  041A  063F               	xorwf	_GP3REG,w	;volatile
 12325  041B  1903               	skipnz
 12326  041C  0008               	return
 12327                           
 12328                           ;GPports.c: 108: temp_gp3 = GP3REG;
 12329  041D  083F               	movf	_GP3REG,w	;volatile
 12330  041E  00B3               	movwf	_temp_gp3
 12331                           
 12332                           ;GPports.c: 109: PWM_GP3_RLED(temp_gp3);
 12333  041F  2D34               	ljmp	_PWM_GP3_RLED
 12334  0420                     l7807:	
 12335                           
 12336                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 12337  0420  083E               	movf	_FADEGP,w	;volatile
 12338  0421  0021               	movlb	1	; select bank1
 12339  0422  0233               	subwf	_gp_fade_cnt^(0+128),w
 12340  0423  1C03               	skipc
 12341  0424  0008               	return
 12342                           
 12343                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 12344  0425  0020               	movlb	0	; select bank0
 12345  0426  0833               	movf	_temp_gp3,w
 12346  0427  063F               	xorwf	_GP3REG,w	;volatile
 12347  0428  1903               	skipnz
 12348  0429  0008               	return
 12349                           
 12350                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 12351  042A  083F               	movf	_GP3REG,w	;volatile
 12352  042B  0233               	subwf	_temp_gp3,w
 12353  042C  1C03               	btfss	3,0
 12354                           
 12355                           ;GPports.c: 118: temp_gp3++;
 12356  042D  0AB3               	incf	_temp_gp3,f
 12357                           
 12358                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 12359  042E  0833               	movf	_temp_gp3,w
 12360  042F  023F               	subwf	_GP3REG,w	;volatile
 12361  0430  1C03               	btfss	3,0
 12362                           
 12363                           ;GPports.c: 121: temp_gp3--;
 12364  0431  03B3               	decf	_temp_gp3,f
 12365                           
 12366                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3_RLED(temp_gp3);
 12367  0432  0833               	movf	_temp_gp3,w
 12368  0433  2534  3180         	fcall	_PWM_GP3_RLED
 12369                           
 12370                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 12371  0435  0020               	movlb	0	; select bank0
 12372  0436  0833               	movf	_temp_gp3,w
 12373  0437  063F               	xorwf	_GP3REG,w	;volatile
 12374                           
 12375                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 12376  0438  3020               	movlw	32
 12377  0439  1D03               	skipz
 12378  043A  2C3C               	goto	L1
 12379  043B  2CB5               	ljmp	_FadeProcessClear
 12380  043C                     L1:	
 12381                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 12382                           
 12383                           ;GPports.c: 127: } else {
 12384                           
 12385  043C  2CBD               	ljmp	_FadeProcessSet
 12386  043D                     __end_of_FADE_GP3:	
 12387  043D                     __ptext26:	
 12388 ;; *************** function _FADE_LEDS *****************
 12389 ;; Defined at:
 12390 ;;		line 147 in file "Encoder.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;		None
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;		None
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  1    wreg      void 
 12397 ;; Registers used:
 12398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12399 ;; Tracked objects:
 12400 ;;		On entry : 1F/1
 12401 ;;		On exit  : 18/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;Total ram usage:        0 bytes
 12409 ;; Hardware stack levels used:    1
 12410 ;; Hardware stack levels required when called:   10
 12411 ;; This function calls:
 12412 ;;		_FadeProcessClear
 12413 ;;		_FadeProcessSet
 12414 ;;		_PWM_BLED
 12415 ;;		_PWM_GLED
 12416 ;;		_PWM_GP3_RLED
 12417 ;; This function is called by:
 12418 ;;		_Encoder_FSM
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           
 12423                           ;psect for function _FADE_LEDS
 12424  043D                     _FADE_LEDS:	
 12425                           
 12426                           ;Encoder.c: 149: if (C_ETYPE == 0)
 12427                           
 12428                           ;incstack = 0
 12429                           ; Regs used in _FADE_LEDS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12430  043D  0020               	movlb	0	; select bank0
 12431  043E  0838               	movf	_C_ETYPE,w	;volatile
 12432  043F  1903               	btfsc	3,2
 12433  0440  0008               	return
 12434                           
 12435                           ;Encoder.c: 152: if (FADERGB == 0) {
 12436  0441  0021               	movlb	1	; select bank1
 12437  0442  0844               	movf	_FADERGB^(0+128),w	;volatile
 12438  0443  1D03               	btfss	3,2
 12439  0444  2C5F               	goto	l7993
 12440                           
 12441                           ;Encoder.c: 153: if (temp_red != RLED) {
 12442  0445  0020               	movlb	0	; select bank0
 12443  0446  0832               	movf	_temp_red,w
 12444  0447  0644               	xorwf	_RLED,w	;volatile
 12445  0448  1903               	skipnz
 12446  0449  2C4E               	goto	l7979
 12447                           
 12448                           ;Encoder.c: 154: temp_red = RLED;
 12449  044A  0844               	movf	_RLED,w	;volatile
 12450  044B  00B2               	movwf	_temp_red
 12451                           
 12452                           ;Encoder.c: 155: PWM_GP3_RLED(temp_red);
 12453  044C  2534  3180         	fcall	_PWM_GP3_RLED
 12454  044E                     l7979:	
 12455                           
 12456                           ;Encoder.c: 156: };Encoder.c: 158: if (temp_green != GLED) {
 12457  044E  0020               	movlb	0	; select bank0
 12458  044F  0831               	movf	_temp_green,w
 12459  0450  0643               	xorwf	_GLED,w	;volatile
 12460  0451  1903               	skipnz
 12461  0452  2C57               	goto	l7985
 12462                           
 12463                           ;Encoder.c: 159: temp_green = GLED;
 12464  0453  0843               	movf	_GLED,w	;volatile
 12465  0454  00B1               	movwf	_temp_green
 12466                           
 12467                           ;Encoder.c: 160: PWM_GLED(temp_green);
 12468  0455  24C1  3180         	fcall	_PWM_GLED
 12469  0457                     l7985:	
 12470                           
 12471                           ;Encoder.c: 161: };Encoder.c: 163: if (temp_blu != BLED) {
 12472  0457  0020               	movlb	0	; select bank0
 12473  0458  0830               	movf	_temp_blu,w
 12474  0459  0642               	xorwf	_BLED,w	;volatile
 12475  045A  1903               	skipnz
 12476  045B  0008               	return
 12477                           
 12478                           ;Encoder.c: 164: temp_blu = BLED;
 12479  045C  0842               	movf	_BLED,w	;volatile
 12480  045D  00B0               	movwf	_temp_blu
 12481                           
 12482                           ;Encoder.c: 165: PWM_BLED(temp_blu);
 12483  045E  2DA7               	ljmp	_PWM_BLED
 12484  045F                     l7993:	
 12485                           
 12486                           ;Encoder.c: 168: };Encoder.c: 169: fade_cnt++;
 12487  045F  0AB0               	incf	_fade_cnt^(0+128),f
 12488                           
 12489                           ;Encoder.c: 170: if (fade_cnt >= FADERGB) {
 12490  0460  0844               	movf	_FADERGB^(0+128),w	;volatile
 12491  0461  0230               	subwf	_fade_cnt^(0+128),w
 12492  0462  1C03               	skipc
 12493  0463  0008               	return
 12494                           
 12495                           ;Encoder.c: 171: fade_cnt = 0;
 12496  0464  01B0               	clrf	_fade_cnt^(0+128)
 12497                           
 12498                           ;Encoder.c: 173: if (temp_red != RLED) {
 12499  0465  0020               	movlb	0	; select bank0
 12500  0466  0832               	movf	_temp_red,w
 12501  0467  0644               	xorwf	_RLED,w	;volatile
 12502  0468  1903               	skipnz
 12503  0469  2C81               	goto	l8017
 12504                           
 12505                           ;Encoder.c: 175: if (temp_red < RLED) {
 12506  046A  0844               	movf	_RLED,w	;volatile
 12507  046B  0232               	subwf	_temp_red,w
 12508  046C  1803               	skipnc
 12509  046D  2C6F               	goto	l8005
 12510                           
 12511                           ;Encoder.c: 176: temp_red++;
 12512  046E  0AB2               	incf	_temp_red,f
 12513  046F                     l8005:	
 12514                           
 12515                           ;Encoder.c: 177: };Encoder.c: 178: if (temp_red > RLED) {
 12516  046F  0832               	movf	_temp_red,w
 12517  0470  0244               	subwf	_RLED,w	;volatile
 12518  0471  1C03               	btfss	3,0
 12519                           
 12520                           ;Encoder.c: 179: temp_red--;
 12521  0472  03B2               	decf	_temp_red,f
 12522                           
 12523                           ;Encoder.c: 180: };Encoder.c: 182: PWM_GP3_RLED(temp_red);
 12524  0473  0832               	movf	_temp_red,w
 12525  0474  2534  3180         	fcall	_PWM_GP3_RLED
 12526                           
 12527                           ;Encoder.c: 183: if (temp_red == RLED) {
 12528  0476  0020               	movlb	0	; select bank0
 12529  0477  0832               	movf	_temp_red,w
 12530  0478  0644               	xorwf	_RLED,w	;volatile
 12531                           
 12532                           ;Encoder.c: 184: FadeProcessClear(F_FER);
 12533  0479  3001               	movlw	1
 12534  047A  1D03               	skipz
 12535  047B  2C7F               	goto	L4
 12536  047C  24B5  3180         	fcall	_FadeProcessClear
 12537                           
 12538                           ;Encoder.c: 185: } else {
 12539  047E  2C81               	goto	l8017
 12540  047F                     L4:	
 12541                           ;Encoder.c: 186: FadeProcessSet(F_FER);
 12542                           
 12543  047F  24BD  3180         	fcall	_FadeProcessSet
 12544  0481                     l8017:	
 12545                           
 12546                           ;Encoder.c: 187: };Encoder.c: 188: };Encoder.c: 190: if (temp_green != GLED) {
 12547  0481  0020               	movlb	0	; select bank0
 12548  0482  0831               	movf	_temp_green,w
 12549  0483  0643               	xorwf	_GLED,w	;volatile
 12550  0484  1903               	skipnz
 12551  0485  2C9D               	goto	l8035
 12552                           
 12553                           ;Encoder.c: 192: if (temp_green < GLED) {
 12554  0486  0843               	movf	_GLED,w	;volatile
 12555  0487  0231               	subwf	_temp_green,w
 12556  0488  1803               	skipnc
 12557  0489  2C8B               	goto	l8023
 12558                           
 12559                           ;Encoder.c: 193: temp_green++;
 12560  048A  0AB1               	incf	_temp_green,f
 12561  048B                     l8023:	
 12562                           
 12563                           ;Encoder.c: 194: };Encoder.c: 195: if (temp_green > GLED) {
 12564  048B  0831               	movf	_temp_green,w
 12565  048C  0243               	subwf	_GLED,w	;volatile
 12566  048D  1C03               	btfss	3,0
 12567                           
 12568                           ;Encoder.c: 196: temp_green--;
 12569  048E  03B1               	decf	_temp_green,f
 12570                           
 12571                           ;Encoder.c: 197: };Encoder.c: 199: PWM_GLED(temp_green);
 12572  048F  0831               	movf	_temp_green,w
 12573  0490  24C1  3180         	fcall	_PWM_GLED
 12574                           
 12575                           ;Encoder.c: 200: if (temp_green == GLED) {
 12576  0492  0020               	movlb	0	; select bank0
 12577  0493  0831               	movf	_temp_green,w
 12578  0494  0643               	xorwf	_GLED,w	;volatile
 12579                           
 12580                           ;Encoder.c: 201: FadeProcessClear(F_FEG);
 12581  0495  3002               	movlw	2
 12582  0496  1D03               	skipz
 12583  0497  2C9B               	goto	L5
 12584  0498  24B5  3180         	fcall	_FadeProcessClear
 12585                           
 12586                           ;Encoder.c: 202: } else {
 12587  049A  2C9D               	goto	l8035
 12588  049B                     L5:	
 12589                           ;Encoder.c: 203: FadeProcessSet(F_FEG);
 12590                           
 12591  049B  24BD  3180         	fcall	_FadeProcessSet
 12592  049D                     l8035:	
 12593                           
 12594                           ;Encoder.c: 205: };Encoder.c: 206: };Encoder.c: 209: if (temp_blu != BLED) {
 12595  049D  0020               	movlb	0	; select bank0
 12596  049E  0830               	movf	_temp_blu,w
 12597  049F  0642               	xorwf	_BLED,w	;volatile
 12598  04A0  1903               	skipnz
 12599  04A1  0008               	return
 12600                           
 12601                           ;Encoder.c: 211: if (temp_blu < BLED) {
 12602  04A2  0842               	movf	_BLED,w	;volatile
 12603  04A3  0230               	subwf	_temp_blu,w
 12604  04A4  1C03               	btfss	3,0
 12605                           
 12606                           ;Encoder.c: 212: temp_blu++;
 12607  04A5  0AB0               	incf	_temp_blu,f
 12608                           
 12609                           ;Encoder.c: 213: };Encoder.c: 214: if (temp_blu > BLED) {
 12610  04A6  0830               	movf	_temp_blu,w
 12611  04A7  0242               	subwf	_BLED,w	;volatile
 12612  04A8  1C03               	btfss	3,0
 12613                           
 12614                           ;Encoder.c: 215: temp_blu--;
 12615  04A9  03B0               	decf	_temp_blu,f
 12616                           
 12617                           ;Encoder.c: 216: };Encoder.c: 218: PWM_BLED(temp_blu);
 12618  04AA  0830               	movf	_temp_blu,w
 12619  04AB  25A7  3180         	fcall	_PWM_BLED
 12620                           
 12621                           ;Encoder.c: 219: if (temp_blu == BLED) {
 12622  04AD  0020               	movlb	0	; select bank0
 12623  04AE  0830               	movf	_temp_blu,w
 12624  04AF  0642               	xorwf	_BLED,w	;volatile
 12625                           
 12626                           ;Encoder.c: 220: FadeProcessClear(F_FEB);
 12627  04B0  3004               	movlw	4
 12628  04B1  1D03               	skipz
 12629  04B2  2CB4               	goto	L6
 12630  04B3  2CB5               	ljmp	_FadeProcessClear
 12631  04B4                     L6:	
 12632                           ;Encoder.c: 223: FadeProcessSet(F_FEB);
 12633                           
 12634                           ;Encoder.c: 221: } else {
 12635                           
 12636  04B4  2CBD               	ljmp	_FadeProcessSet
 12637  04B5                     __end_of_FADE_LEDS:	
 12638  04B5                     __ptext32:	
 12639 ;; *************** function _FadeProcessClear *****************
 12640 ;; Defined at:
 12641 ;;		line 159 in file "DataVariable.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  stat            1    wreg     enum E96
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;  stat            1    2[BANK1 ] enum E96
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  1    wreg      void 
 12648 ;; Registers used:
 12649 ;;		wreg, status,2, status,0, pclath, cstack
 12650 ;; Tracked objects:
 12651 ;;		On entry : 1F/0
 12652 ;;		On exit  : 1D/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;Total ram usage:        1 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    9
 12662 ;; This function calls:
 12663 ;;		_Int2StatusUpdate
 12664 ;;		_SetInterrupt
 12665 ;; This function is called by:
 12666 ;;		_FADE_GP1
 12667 ;;		_FADE_GP2
 12668 ;;		_FADE_GP3
 12669 ;;		_FADE_LEDS
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           
 12674                           ;psect for function _FadeProcessClear
 12675  04B5                     _FadeProcessClear:	
 12676                           
 12677                           ;incstack = 0
 12678                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 12679                           ;FadeProcessClear@stat stored from wreg
 12680  04B5  0021               	movlb	1	; select bank1
 12681  04B6  00CC               	movwf	FadeProcessClear@stat^(0+128)
 12682                           
 12683                           ;DataVariable.c: 160: FSTATUS &= ~(uint8_t) stat;
 12684  04B7  094C               	comf	FadeProcessClear@stat^(0+128),w
 12685  04B8  05C7               	andwf	_FSTATUS^(0+128),f	;volatile
 12686                           
 12687                           ;DataVariable.c: 161: Int2StatusUpdate(E_GPFADE);
 12688  04B9  3040               	movlw	64
 12689  04BA  2238  3180         	fcall	_Int2StatusUpdate
 12690                           
 12691                           ;DataVariable.c: 163: SetInterrupt();
 12692  04BC  2A3D               	ljmp	l7271
 12693  04BD                     __end_of_FadeProcessClear:	
 12694  04BD                     __ptext31:	
 12695 ;; *************** function _FadeProcessSet *****************
 12696 ;; Defined at:
 12697 ;;		line 151 in file "DataVariable.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  stat            1    wreg     enum E96
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;  stat            1    0[BANK1 ] enum E96
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  1    wreg      void 
 12704 ;; Registers used:
 12705 ;;		wreg, status,2, status,0
 12706 ;; Tracked objects:
 12707 ;;		On entry : 1F/0
 12708 ;;		On exit  : 1F/1
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;Total ram usage:        1 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; Hardware stack levels required when called:    7
 12718 ;; This function calls:
 12719 ;;		Nothing
 12720 ;; This function is called by:
 12721 ;;		_FADE_GP1
 12722 ;;		_FADE_GP2
 12723 ;;		_FADE_GP3
 12724 ;;		_FADE_LEDS
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728                           
 12729                           ;psect for function _FadeProcessSet
 12730  04BD                     _FadeProcessSet:	
 12731                           
 12732                           ;incstack = 0
 12733                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 12734                           ;FadeProcessSet@stat stored from wreg
 12735  04BD  0021               	movlb	1	; select bank1
 12736  04BE  00CA               	movwf	FadeProcessSet@stat^(0+128)
 12737                           
 12738                           ;DataVariable.c: 152: FSTATUS |= (uint8_t) stat;
 12739  04BF  04C7               	iorwf	_FSTATUS^(0+128),f	;volatile
 12740  04C0  0008               	return
 12741  04C1                     __end_of_FadeProcessSet:	
 12742  04C1                     __ptext28:	
 12743 ;; *************** function _PWM_GLED *****************
 12744 ;; Defined at:
 12745 ;;		line 130 in file "PWM.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  duty            1    wreg     unsigned char 
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;  duty            1   12[BANK1 ] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  1    wreg      void 
 12752 ;; Registers used:
 12753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12754 ;; Tracked objects:
 12755 ;;		On entry : 1F/0
 12756 ;;		On exit  : 1F/5
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:        7 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; Hardware stack levels required when called:    8
 12766 ;; This function calls:
 12767 ;;		___wmul
 12768 ;; This function is called by:
 12769 ;;		_FADE_LEDS
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773                           
 12774                           ;psect for function _PWM_GLED
 12775  04C1                     _PWM_GLED:	
 12776                           
 12777                           ;incstack = 0
 12778                           ; Regs used in _PWM_GLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12779                           ;PWM_GLED@duty stored from wreg
 12780  04C1  0021               	movlb	1	; select bank1
 12781  04C2  00D6               	movwf	PWM_GLED@duty^(0+128)
 12782                           
 12783                           ;PWM.c: 132: if (duty == 0) {
 12784  04C3  0856               	movf	PWM_GLED@duty^(0+128),w
 12785  04C4  1D03               	btfss	3,2
 12786  04C5  2CDA               	goto	l7501
 12787                           
 12788                           ;PWM.c: 134: do { LATCbits.LATC4 = 1; } while(0);
 12789  04C6  0022               	movlb	2	; select bank2
 12790  04C7  160E               	bsf	14,4	;volatile
 12791                           
 12792                           ;PWM.c: 135: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12793  04C8  3055               	movlw	85
 12794  04C9  003C               	movlb	28	; select bank28
 12795  04CA  008F               	movwf	15	;volsfr
 12796  04CB  30AA               	movlw	170
 12797  04CC  008F               	movwf	15	;volsfr
 12798  04CD  100F               	bcf	15,0	;volsfr
 12799                           
 12800                           ;PWM.c: 136: RC4PPSbits.RC4PPS = 0x00;
 12801  04CE  30E0               	movlw	-32
 12802  04CF  003D               	movlb	29	; select bank29
 12803  04D0  05A4               	andwf	36,f	;volatile
 12804                           
 12805                           ;PWM.c: 137: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12806  04D1  3055               	movlw	85
 12807  04D2  003C               	movlb	28	; select bank28
 12808  04D3  008F               	movwf	15	;volsfr
 12809  04D4  30AA               	movlw	170
 12810  04D5  008F               	movwf	15	;volsfr
 12811  04D6  140F               	bsf	15,0	;volsfr
 12812                           
 12813                           ;PWM.c: 138: CCP2CON = 0;
 12814  04D7  0025               	movlb	5	; select bank5
 12815  04D8  0197               	clrf	23	;volatile
 12816  04D9  0008               	return
 12817  04DA                     l7501:	
 12818                           
 12819                           ;PWM.c: 140: };PWM.c: 142: if (CCP2CON == 0) {
 12820  04DA  0025               	movlb	5	; select bank5
 12821  04DB  0817               	movf	23,w	;volatile
 12822  04DC  1D03               	btfss	3,2
 12823  04DD  2CF5               	goto	l1578
 12824                           
 12825                           ;PWM.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12826  04DE  3055               	movlw	85
 12827  04DF  003C               	movlb	28	; select bank28
 12828  04E0  008F               	movwf	15	;volsfr
 12829  04E1  30AA               	movlw	170
 12830  04E2  008F               	movwf	15	;volsfr
 12831  04E3  100F               	bcf	15,0	;volsfr
 12832                           
 12833                           ;PWM.c: 144: RC4PPSbits.RC4PPS = 0x0D;
 12834  04E4  003D               	movlb	29	; select bank29
 12835  04E5  0824               	movf	36,w	;volatile
 12836  04E6  39E0               	andlw	-32
 12837  04E7  380D               	iorlw	13
 12838  04E8  00A4               	movwf	36	;volatile
 12839                           
 12840                           ;PWM.c: 145: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12841  04E9  3055               	movlw	85
 12842  04EA  003C               	movlb	28	; select bank28
 12843  04EB  008F               	movwf	15	;volsfr
 12844  04EC  30AA               	movlw	170
 12845  04ED  008F               	movwf	15	;volsfr
 12846  04EE  140F               	bsf	15,0	;volsfr
 12847                           
 12848                           ;PWM.c: 146: CCP2CON = 0x8F;
 12849  04EF  308F               	movlw	143
 12850  04F0  0025               	movlb	5	; select bank5
 12851  04F1  0097               	movwf	23	;volatile
 12852                           
 12853                           ;PWM.c: 147: CCPR2 = 0xFFFF;
 12854  04F2  30FF               	movlw	255
 12855  04F3  0096               	movwf	22	;volatile
 12856  04F4  0095               	movwf	21	;volatile
 12857  04F5                     l1578:	
 12858                           
 12859                           ;PWM.c: 148: };PWM.c: 150: if (GAMMAGLED == 0) {
 12860  04F5  0020               	movlb	0	; select bank0
 12861  04F6  083A               	movf	_GAMMAGLED,w	;volatile
 12862  04F7  1D03               	btfss	3,2
 12863  04F8  2D09               	goto	l7521
 12864                           
 12865                           ;PWM.c: 151: CCPR2 = (uint16_t) (0xff - duty) << 2;
 12866  04F9  0021               	movlb	1	; select bank1
 12867  04FA  0956               	comf	PWM_GLED@duty^(0+128),w
 12868  04FB  00D0               	movwf	??_PWM_GLED^(0+128)
 12869  04FC  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 12870  04FD  35D0               	lslf	??_PWM_GLED^(0+128),f
 12871  04FE  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12872  04FF  35D0               	lslf	??_PWM_GLED^(0+128),f
 12873  0500  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12874  0501  0850               	movf	??_PWM_GLED^(0+128),w
 12875  0502  0025               	movlb	5	; select bank5
 12876  0503  0095               	movwf	21	;volatile
 12877  0504  0021               	movlb	1	; select bank1
 12878  0505  0851               	movf	(??_PWM_GLED+1)^(0+128),w
 12879  0506  0025               	movlb	5	; select bank5
 12880  0507  0096               	movwf	22	;volatile
 12881                           
 12882                           ;PWM.c: 153: } else {
 12883  0508  0008               	return
 12884  0509                     l7521:	
 12885                           
 12886                           ;PWM.c: 155: if (duty > 100)
 12887  0509  3065               	movlw	101
 12888  050A  0021               	movlb	1	; select bank1
 12889  050B  0256               	subwf	PWM_GLED@duty^(0+128),w
 12890  050C  1C03               	skipc
 12891  050D  2D10               	goto	l7525
 12892                           
 12893                           ;PWM.c: 156: duty = 100;
 12894  050E  3064               	movlw	100
 12895  050F  00D6               	movwf	PWM_GLED@duty^(0+128)
 12896  0510                     l7525:	
 12897                           
 12898                           ;PWM.c: 158: CCPR2 = gamma_table[GAMMAGLED - 1U][(duty - 1U)];
 12899  0510  0856               	movf	PWM_GLED@duty^(0+128),w
 12900  0511  00D0               	movwf	??_PWM_GLED^(0+128)
 12901  0512  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 12902  0513  35D0               	lslf	??_PWM_GLED^(0+128),f
 12903  0514  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12904  0515  0020               	movlb	0	; select bank0
 12905  0516  083A               	movf	_GAMMAGLED,w	;volatile
 12906  0517  0021               	movlb	1	; select bank1
 12907  0518  00CA               	movwf	___wmul@multiplier^(0+128)
 12908  0519  30C8               	movlw	200
 12909  051A  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12910  051B  00CC               	movwf	___wmul@multiplicand^(0+128)
 12911  051C  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12912  051D  261A               	fcall	___wmul
 12913  051E  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 12914  051F  00D2               	movwf	(??_PWM_GLED+2)^(0+128)
 12915  0520  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12916  0521  00D3               	movwf	((??_PWM_GLED+2)^(0+128)+1)
 12917  0522  084A               	movf	?___wmul^(0+128),w
 12918  0523  0752               	addwf	(??_PWM_GLED+2)^(0+128),w
 12919  0524  00D4               	movwf	(??_PWM_GLED+4)^(0+128)
 12920  0525  084B               	movf	(?___wmul+1)^(0+128),w
 12921  0526  3D53               	addwfc	(??_PWM_GLED+3)^(0+128),w
 12922  0527  00D5               	movwf	(??_PWM_GLED+5)^(0+128)
 12923  0528  0854               	movf	(??_PWM_GLED+4)^(0+128),w
 12924  0529  0750               	addwf	??_PWM_GLED^(0+128),w
 12925  052A  0084               	movwf	4
 12926  052B  0855               	movf	(??_PWM_GLED+5)^(0+128),w
 12927  052C  3D51               	addwfc	(??_PWM_GLED+1)^(0+128),w
 12928  052D  0085               	movwf	5
 12929  052E  3F00               	moviw [0]fsr0
 12930  052F  0025               	movlb	5	; select bank5
 12931  0530  0095               	movwf	21	;volatile
 12932  0531  3F01               	moviw [1]fsr0
 12933  0532  0096               	movwf	22	;volatile
 12934  0533  0008               	return
 12935  0534                     __end_of_PWM_GLED:	
 12936  0534                     __ptext27:	
 12937 ;; *************** function _PWM_GP3_RLED *****************
 12938 ;; Defined at:
 12939 ;;		line 95 in file "PWM.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  duty            1    wreg     unsigned char 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  duty            1   12[BANK1 ] unsigned char 
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 1F/0
 12950 ;;		On exit  : 1F/5
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;Total ram usage:        7 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    8
 12960 ;; This function calls:
 12961 ;;		___wmul
 12962 ;; This function is called by:
 12963 ;;		_FADE_GP3
 12964 ;;		_FADE_LEDS
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           
 12969                           ;psect for function _PWM_GP3_RLED
 12970  0534                     _PWM_GP3_RLED:	
 12971                           
 12972                           ;incstack = 0
 12973                           ; Regs used in _PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12974                           ;PWM_GP3_RLED@duty stored from wreg
 12975  0534  0021               	movlb	1	; select bank1
 12976  0535  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 12977                           
 12978                           ;PWM.c: 97: if (duty == 0) {
 12979  0536  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 12980  0537  1D03               	btfss	3,2
 12981  0538  2D4D               	goto	l7441
 12982                           
 12983                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 12984  0539  0022               	movlb	2	; select bank2
 12985  053A  168E               	bsf	14,5	;volatile
 12986                           
 12987                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12988  053B  3055               	movlw	85
 12989  053C  003C               	movlb	28	; select bank28
 12990  053D  008F               	movwf	15	;volsfr
 12991  053E  30AA               	movlw	170
 12992  053F  008F               	movwf	15	;volsfr
 12993  0540  100F               	bcf	15,0	;volsfr
 12994                           
 12995                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 12996  0541  30E0               	movlw	-32
 12997  0542  003D               	movlb	29	; select bank29
 12998  0543  05A5               	andwf	37,f	;volatile
 12999                           
 13000                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13001  0544  3055               	movlw	85
 13002  0545  003C               	movlb	28	; select bank28
 13003  0546  008F               	movwf	15	;volsfr
 13004  0547  30AA               	movlw	170
 13005  0548  008F               	movwf	15	;volsfr
 13006  0549  140F               	bsf	15,0	;volsfr
 13007                           
 13008                           ;PWM.c: 103: CCP1CON = 0;
 13009  054A  0025               	movlb	5	; select bank5
 13010  054B  0193               	clrf	19	;volatile
 13011  054C  0008               	return
 13012  054D                     l7441:	
 13013                           
 13014                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 13015  054D  0025               	movlb	5	; select bank5
 13016  054E  0813               	movf	19,w	;volatile
 13017  054F  1D03               	btfss	3,2
 13018  0550  2D68               	goto	l1568
 13019                           
 13020                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13021  0551  3055               	movlw	85
 13022  0552  003C               	movlb	28	; select bank28
 13023  0553  008F               	movwf	15	;volsfr
 13024  0554  30AA               	movlw	170
 13025  0555  008F               	movwf	15	;volsfr
 13026  0556  100F               	bcf	15,0	;volsfr
 13027                           
 13028                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 13029  0557  003D               	movlb	29	; select bank29
 13030  0558  0825               	movf	37,w	;volatile
 13031  0559  39E0               	andlw	-32
 13032  055A  380C               	iorlw	12
 13033  055B  00A5               	movwf	37	;volatile
 13034                           
 13035                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13036  055C  3055               	movlw	85
 13037  055D  003C               	movlb	28	; select bank28
 13038  055E  008F               	movwf	15	;volsfr
 13039  055F  30AA               	movlw	170
 13040  0560  008F               	movwf	15	;volsfr
 13041  0561  140F               	bsf	15,0	;volsfr
 13042                           
 13043                           ;PWM.c: 111: CCP1CON = 0x8F;
 13044  0562  308F               	movlw	143
 13045  0563  0025               	movlb	5	; select bank5
 13046  0564  0093               	movwf	19	;volatile
 13047                           
 13048                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 13049  0565  30FF               	movlw	255
 13050  0566  0092               	movwf	18	;volatile
 13051  0567  0091               	movwf	17	;volatile
 13052  0568                     l1568:	
 13053                           
 13054                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 13055  0568  0020               	movlb	0	; select bank0
 13056  0569  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 13057  056A  1D03               	btfss	3,2
 13058  056B  2D7C               	goto	l7461
 13059                           
 13060                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 13061  056C  0021               	movlb	1	; select bank1
 13062  056D  0956               	comf	PWM_GP3_RLED@duty^(0+128),w
 13063  056E  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 13064  056F  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 13065  0570  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13066  0571  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13067  0572  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13068  0573  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13069  0574  0850               	movf	??_PWM_GP3_RLED^(0+128),w
 13070  0575  0025               	movlb	5	; select bank5
 13071  0576  0091               	movwf	17	;volatile
 13072  0577  0021               	movlb	1	; select bank1
 13073  0578  0851               	movf	(??_PWM_GP3_RLED+1)^(0+128),w
 13074  0579  0025               	movlb	5	; select bank5
 13075  057A  0092               	movwf	18	;volatile
 13076                           
 13077                           ;PWM.c: 119: } else {
 13078  057B  0008               	return
 13079  057C                     l7461:	
 13080                           
 13081                           ;PWM.c: 120: if (duty > 100)
 13082  057C  3065               	movlw	101
 13083  057D  0021               	movlb	1	; select bank1
 13084  057E  0256               	subwf	PWM_GP3_RLED@duty^(0+128),w
 13085  057F  1C03               	skipc
 13086  0580  2D83               	goto	l7465
 13087                           
 13088                           ;PWM.c: 121: duty = 100;
 13089  0581  3064               	movlw	100
 13090  0582  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 13091  0583                     l7465:	
 13092                           
 13093                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 13094  0583  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 13095  0584  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 13096  0585  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 13097  0586  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13098  0587  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13099  0588  0020               	movlb	0	; select bank0
 13100  0589  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 13101  058A  0021               	movlb	1	; select bank1
 13102  058B  00CA               	movwf	___wmul@multiplier^(0+128)
 13103  058C  30C8               	movlw	200
 13104  058D  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 13105  058E  00CC               	movwf	___wmul@multiplicand^(0+128)
 13106  058F  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 13107  0590  261A               	fcall	___wmul
 13108  0591  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 13109  0592  00D2               	movwf	(??_PWM_GP3_RLED+2)^(0+128)
 13110  0593  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 13111  0594  00D3               	movwf	((??_PWM_GP3_RLED+2)^(0+128)+1)
 13112  0595  084A               	movf	?___wmul^(0+128),w
 13113  0596  0752               	addwf	(??_PWM_GP3_RLED+2)^(0+128),w
 13114  0597  00D4               	movwf	(??_PWM_GP3_RLED+4)^(0+128)
 13115  0598  084B               	movf	(?___wmul+1)^(0+128),w
 13116  0599  3D53               	addwfc	(??_PWM_GP3_RLED+3)^(0+128),w
 13117  059A  00D5               	movwf	(??_PWM_GP3_RLED+5)^(0+128)
 13118  059B  0854               	movf	(??_PWM_GP3_RLED+4)^(0+128),w
 13119  059C  0750               	addwf	??_PWM_GP3_RLED^(0+128),w
 13120  059D  0084               	movwf	4
 13121  059E  0855               	movf	(??_PWM_GP3_RLED+5)^(0+128),w
 13122  059F  3D51               	addwfc	(??_PWM_GP3_RLED+1)^(0+128),w
 13123  05A0  0085               	movwf	5
 13124  05A1  3F00               	moviw [0]fsr0
 13125  05A2  0025               	movlb	5	; select bank5
 13126  05A3  0091               	movwf	17	;volatile
 13127  05A4  3F01               	moviw [1]fsr0
 13128  05A5  0092               	movwf	18	;volatile
 13129  05A6  0008               	return
 13130  05A7                     __end_of_PWM_GP3_RLED:	
 13131  05A7                     __ptext29:	
 13132 ;; *************** function _PWM_BLED *****************
 13133 ;; Defined at:
 13134 ;;		line 165 in file "PWM.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;  duty            1    wreg     unsigned char 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;  duty            1   12[BANK1 ] unsigned char 
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  1    wreg      void 
 13141 ;; Registers used:
 13142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13143 ;; Tracked objects:
 13144 ;;		On entry : 1F/0
 13145 ;;		On exit  : 1F/6
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;Total ram usage:        7 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    8
 13155 ;; This function calls:
 13156 ;;		___wmul
 13157 ;; This function is called by:
 13158 ;;		_FADE_LEDS
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           
 13163                           ;psect for function _PWM_BLED
 13164  05A7                     _PWM_BLED:	
 13165                           
 13166                           ;incstack = 0
 13167                           ; Regs used in _PWM_BLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13168                           ;PWM_BLED@duty stored from wreg
 13169  05A7  0021               	movlb	1	; select bank1
 13170  05A8  00D6               	movwf	PWM_BLED@duty^(0+128)
 13171                           
 13172                           ;PWM.c: 167: if (duty == 0) {
 13173  05A9  0856               	movf	PWM_BLED@duty^(0+128),w
 13174  05AA  1D03               	btfss	3,2
 13175  05AB  2DC0               	goto	l7545
 13176                           
 13177                           ;PWM.c: 169: do { LATCbits.LATC3 = 1; } while(0);
 13178  05AC  0022               	movlb	2	; select bank2
 13179  05AD  158E               	bsf	14,3	;volatile
 13180                           
 13181                           ;PWM.c: 170: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13182  05AE  3055               	movlw	85
 13183  05AF  003C               	movlb	28	; select bank28
 13184  05B0  008F               	movwf	15	;volsfr
 13185  05B1  30AA               	movlw	170
 13186  05B2  008F               	movwf	15	;volsfr
 13187  05B3  100F               	bcf	15,0	;volsfr
 13188                           
 13189                           ;PWM.c: 171: RC3PPSbits.RC3PPS = 0x00;
 13190  05B4  30E0               	movlw	-32
 13191  05B5  003D               	movlb	29	; select bank29
 13192  05B6  05A3               	andwf	35,f	;volatile
 13193                           
 13194                           ;PWM.c: 172: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13195  05B7  3055               	movlw	85
 13196  05B8  003C               	movlb	28	; select bank28
 13197  05B9  008F               	movwf	15	;volsfr
 13198  05BA  30AA               	movlw	170
 13199  05BB  008F               	movwf	15	;volsfr
 13200  05BC  140F               	bsf	15,0	;volsfr
 13201                           
 13202                           ;PWM.c: 173: CCP3CON = 0;
 13203  05BD  0026               	movlb	6	; select bank6
 13204  05BE  0193               	clrf	19	;volatile
 13205  05BF  0008               	return
 13206  05C0                     l7545:	
 13207                           
 13208                           ;PWM.c: 175: };PWM.c: 178: if (CCP3CON == 0) {
 13209  05C0  0026               	movlb	6	; select bank6
 13210  05C1  0813               	movf	19,w	;volatile
 13211  05C2  1D03               	btfss	3,2
 13212  05C3  2DDB               	goto	l1588
 13213                           
 13214                           ;PWM.c: 179: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13215  05C4  3055               	movlw	85
 13216  05C5  003C               	movlb	28	; select bank28
 13217  05C6  008F               	movwf	15	;volsfr
 13218  05C7  30AA               	movlw	170
 13219  05C8  008F               	movwf	15	;volsfr
 13220  05C9  100F               	bcf	15,0	;volsfr
 13221                           
 13222                           ;PWM.c: 180: RC3PPSbits.RC3PPS = 0x0E;
 13223  05CA  003D               	movlb	29	; select bank29
 13224  05CB  0823               	movf	35,w	;volatile
 13225  05CC  39E0               	andlw	-32
 13226  05CD  380E               	iorlw	14
 13227  05CE  00A3               	movwf	35	;volatile
 13228                           
 13229                           ;PWM.c: 181: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13230  05CF  3055               	movlw	85
 13231  05D0  003C               	movlb	28	; select bank28
 13232  05D1  008F               	movwf	15	;volsfr
 13233  05D2  30AA               	movlw	170
 13234  05D3  008F               	movwf	15	;volsfr
 13235  05D4  140F               	bsf	15,0	;volsfr
 13236                           
 13237                           ;PWM.c: 182: CCP3CON = 0x8F;
 13238  05D5  308F               	movlw	143
 13239  05D6  0026               	movlb	6	; select bank6
 13240  05D7  0093               	movwf	19	;volatile
 13241                           
 13242                           ;PWM.c: 183: CCPR3 = 0xFFFF;
 13243  05D8  30FF               	movlw	255
 13244  05D9  0092               	movwf	18	;volatile
 13245  05DA  0091               	movwf	17	;volatile
 13246  05DB                     l1588:	
 13247                           
 13248                           ;PWM.c: 184: };PWM.c: 186: if (GAMMABLED == 0) {
 13249  05DB  0020               	movlb	0	; select bank0
 13250  05DC  0839               	movf	_GAMMABLED,w	;volatile
 13251  05DD  1D03               	btfss	3,2
 13252  05DE  2DEF               	goto	l7565
 13253                           
 13254                           ;PWM.c: 188: CCPR3 = (uint16_t) (0xff - duty) << 2;
 13255  05DF  0021               	movlb	1	; select bank1
 13256  05E0  0956               	comf	PWM_BLED@duty^(0+128),w
 13257  05E1  00D0               	movwf	??_PWM_BLED^(0+128)
 13258  05E2  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 13259  05E3  35D0               	lslf	??_PWM_BLED^(0+128),f
 13260  05E4  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13261  05E5  35D0               	lslf	??_PWM_BLED^(0+128),f
 13262  05E6  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13263  05E7  0850               	movf	??_PWM_BLED^(0+128),w
 13264  05E8  0026               	movlb	6	; select bank6
 13265  05E9  0091               	movwf	17	;volatile
 13266  05EA  0021               	movlb	1	; select bank1
 13267  05EB  0851               	movf	(??_PWM_BLED+1)^(0+128),w
 13268  05EC  0026               	movlb	6	; select bank6
 13269  05ED  0092               	movwf	18	;volatile
 13270                           
 13271                           ;PWM.c: 190: } else {
 13272  05EE  0008               	return
 13273  05EF                     l7565:	
 13274                           
 13275                           ;PWM.c: 192: if (duty > 100)
 13276  05EF  3065               	movlw	101
 13277  05F0  0021               	movlb	1	; select bank1
 13278  05F1  0256               	subwf	PWM_BLED@duty^(0+128),w
 13279  05F2  1C03               	skipc
 13280  05F3  2DF6               	goto	l7569
 13281                           
 13282                           ;PWM.c: 193: duty = 100;
 13283  05F4  3064               	movlw	100
 13284  05F5  00D6               	movwf	PWM_BLED@duty^(0+128)
 13285  05F6                     l7569:	
 13286                           
 13287                           ;PWM.c: 195: CCPR3 = gamma_table[GAMMABLED - 1U][(duty - 1U)];
 13288  05F6  0856               	movf	PWM_BLED@duty^(0+128),w
 13289  05F7  00D0               	movwf	??_PWM_BLED^(0+128)
 13290  05F8  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 13291  05F9  35D0               	lslf	??_PWM_BLED^(0+128),f
 13292  05FA  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13293  05FB  0020               	movlb	0	; select bank0
 13294  05FC  0839               	movf	_GAMMABLED,w	;volatile
 13295  05FD  0021               	movlb	1	; select bank1
 13296  05FE  00CA               	movwf	___wmul@multiplier^(0+128)
 13297  05FF  30C8               	movlw	200
 13298  0600  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 13299  0601  00CC               	movwf	___wmul@multiplicand^(0+128)
 13300  0602  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 13301  0603  261A               	fcall	___wmul
 13302  0604  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 13303  0605  00D2               	movwf	(??_PWM_BLED+2)^(0+128)
 13304  0606  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 13305  0607  00D3               	movwf	((??_PWM_BLED+2)^(0+128)+1)
 13306  0608  084A               	movf	?___wmul^(0+128),w
 13307  0609  0752               	addwf	(??_PWM_BLED+2)^(0+128),w
 13308  060A  00D4               	movwf	(??_PWM_BLED+4)^(0+128)
 13309  060B  084B               	movf	(?___wmul+1)^(0+128),w
 13310  060C  3D53               	addwfc	(??_PWM_BLED+3)^(0+128),w
 13311  060D  00D5               	movwf	(??_PWM_BLED+5)^(0+128)
 13312  060E  0854               	movf	(??_PWM_BLED+4)^(0+128),w
 13313  060F  0750               	addwf	??_PWM_BLED^(0+128),w
 13314  0610  0084               	movwf	4
 13315  0611  0855               	movf	(??_PWM_BLED+5)^(0+128),w
 13316  0612  3D51               	addwfc	(??_PWM_BLED+1)^(0+128),w
 13317  0613  0085               	movwf	5
 13318  0614  3F00               	moviw [0]fsr0
 13319  0615  0026               	movlb	6	; select bank6
 13320  0616  0091               	movwf	17	;volatile
 13321  0617  3F01               	moviw [1]fsr0
 13322  0618  0092               	movwf	18	;volatile
 13323  0619  0008               	return
 13324  061A                     __end_of_PWM_BLED:	
 13325  061A                     __ptext30:	
 13326 ;; *************** function ___wmul *****************
 13327 ;; Defined at:
 13328 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13331 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  product         2    4[BANK1 ] unsigned int 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  2    0[BANK1 ] unsigned int 
 13336 ;; Registers used:
 13337 ;;		wreg, status,2, status,0
 13338 ;; Tracked objects:
 13339 ;;		On entry : 1F/1
 13340 ;;		On exit  : 1F/1
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13343 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;Total ram usage:        6 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    7
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_PWM_GP1
 13354 ;;		_PWM_GP2
 13355 ;;		_PWM_GP3_RLED
 13356 ;;		_PWM_GLED
 13357 ;;		_PWM_BLED
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           
 13362                           ;psect for function ___wmul
 13363  061A                     ___wmul:	
 13364                           
 13365                           ;incstack = 0
 13366                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13367  061A  01CE               	clrf	___wmul@product^(0+128)
 13368  061B  01CF               	clrf	(___wmul@product+1)^(0+128)
 13369  061C                     l7291:	
 13370  061C  1C4A               	btfss	___wmul@multiplier^(0+128),0
 13371  061D  2E22               	goto	l7295
 13372  061E  084C               	movf	___wmul@multiplicand^(0+128),w
 13373  061F  07CE               	addwf	___wmul@product^(0+128),f
 13374  0620  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
 13375  0621  3DCF               	addwfc	(___wmul@product+1)^(0+128),f
 13376  0622                     l7295:	
 13377  0622  35CC               	lslf	___wmul@multiplicand^(0+128),f
 13378  0623  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
 13379  0624  36CB               	lsrf	(___wmul@multiplier+1)^(0+128),f
 13380  0625  0CCA               	rrf	___wmul@multiplier^(0+128),f
 13381  0626  084A               	movf	___wmul@multiplier^(0+128),w
 13382  0627  044B               	iorwf	(___wmul@multiplier+1)^(0+128),w
 13383  0628  1D03               	btfss	3,2
 13384  0629  2E1C               	goto	l7291
 13385  062A  084F               	movf	(___wmul@product+1)^(0+128),w
 13386  062B  00CB               	movwf	(?___wmul+1)^(0+128)
 13387  062C  084E               	movf	___wmul@product^(0+128),w
 13388  062D  00CA               	movwf	?___wmul^(0+128)
 13389  062E  0008               	return
 13390  062F                     __end_of___wmul:	
 13391  062F                     __ptext11:	
 13392 ;; *************** function _I2C1_AddressSet *****************
 13393 ;; Defined at:
 13394 ;;		line 20 in file "i2c_register.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;		None
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;		None
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  1    wreg      void 
 13401 ;; Registers used:
 13402 ;;		wreg, status,2, status,0
 13403 ;; Tracked objects:
 13404 ;;		On entry : B1F/1
 13405 ;;		On exit  : B1F/0
 13406 ;;		Unchanged: B00/0
 13407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;Total ram usage:        0 bytes
 13413 ;; Hardware stack levels used:    1
 13414 ;; Hardware stack levels required when called:    7
 13415 ;; This function calls:
 13416 ;;		Nothing
 13417 ;; This function is called by:
 13418 ;;		_SYSTEM_Initialize
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           
 13423                           ;psect for function _I2C1_AddressSet
 13424  062F                     _I2C1_AddressSet:	
 13425                           
 13426                           ;i2c_register.c: 26: i2c_address = 0x00;
 13427                           
 13428                           ;incstack = 0
 13429                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 13430  062F  0020               	movlb	0	; select bank0
 13431  0630  01CB               	clrf	_i2c_address	;volatile
 13432                           
 13433                           ;i2c_register.c: 28: if (!PORTAbits.RA0)
 13434  0631  1C0C               	btfss	12,0	;volatile
 13435                           
 13436                           ;i2c_register.c: 29: i2c_address |= 0x01;
 13437  0632  144B               	bsf	_i2c_address,0	;volatile
 13438                           
 13439                           ;i2c_register.c: 31: if (!PORTAbits.RA1)
 13440  0633  1C8C               	btfss	12,1	;volatile
 13441                           
 13442                           ;i2c_register.c: 32: i2c_address |= 0x02;
 13443  0634  14CB               	bsf	_i2c_address,1	;volatile
 13444                           
 13445                           ;i2c_register.c: 34: if (!PORTAbits.RA2)
 13446  0635  1D0C               	btfss	12,2	;volatile
 13447                           
 13448                           ;i2c_register.c: 35: i2c_address |= 0x04;
 13449  0636  154B               	bsf	_i2c_address,2	;volatile
 13450                           
 13451                           ;i2c_register.c: 37: if (!PORTAbits.RA3)
 13452  0637  1D8C               	btfss	12,3	;volatile
 13453                           
 13454                           ;i2c_register.c: 38: i2c_address |= 0x08;
 13455  0638  15CB               	bsf	_i2c_address,3	;volatile
 13456                           
 13457                           ;i2c_register.c: 40: if (!PORTAbits.RA4)
 13458  0639  1E0C               	btfss	12,4	;volatile
 13459                           
 13460                           ;i2c_register.c: 41: i2c_address |= 0x10;
 13461  063A  164B               	bsf	_i2c_address,4	;volatile
 13462                           
 13463                           ;i2c_register.c: 43: if (!PORTAbits.RA5)
 13464  063B  1E8C               	btfss	12,5	;volatile
 13465                           
 13466                           ;i2c_register.c: 44: i2c_address |= 0x20;
 13467  063C  16CB               	bsf	_i2c_address,5	;volatile
 13468                           
 13469                           ;i2c_register.c: 46: if (!PORTBbits.RB4)
 13470  063D  1E0D               	btfss	13,4	;volatile
 13471                           
 13472                           ;i2c_register.c: 47: i2c_address |= 0x40;
 13473  063E  174B               	bsf	_i2c_address,6	;volatile
 13474                           
 13475                           ;i2c_register.c: 49: i2c_address = (uint8_t) (i2c_address << 1);
 13476  063F  354B               	lslf	_i2c_address,w	;volatile
 13477  0640  00CB               	movwf	_i2c_address	;volatile
 13478  0641  0008               	return
 13479  0642                     __end_of_I2C1_AddressSet:	
 13480  0642                     __ptext10:	
 13481 ;; *************** function _I2C1_Initialize *****************
 13482 ;; Defined at:
 13483 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;		None
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1    wreg      void 
 13490 ;; Registers used:
 13491 ;;		wreg, status,2
 13492 ;; Tracked objects:
 13493 ;;		On entry : B1F/0
 13494 ;;		On exit  : B1F/1
 13495 ;;		Unchanged: B00/0
 13496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;Total ram usage:        0 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    7
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		_SYSTEM_Initialize
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           
 13512                           ;psect for function _I2C1_Initialize
 13513  0642                     _I2C1_Initialize:	
 13514                           
 13515                           ;i2c1.c: 78: SSP1STAT = 0x00;
 13516                           
 13517                           ;incstack = 0
 13518                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 13519  0642  0024               	movlb	4	; select bank4
 13520  0643  0194               	clrf	20	;volatile
 13521                           
 13522                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 13523  0644  3026               	movlw	38
 13524  0645  0095               	movwf	21	;volatile
 13525                           
 13526                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 13527  0646  0196               	clrf	22	;volatile
 13528                           
 13529                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 13530  0647  0197               	clrf	23	;volatile
 13531                           
 13532                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 13533  0648  30FE               	movlw	254
 13534  0649  0093               	movwf	19	;volatile
 13535                           
 13536                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 13537  064A  0020               	movlb	0	; select bank0
 13538  064B  084B               	movf	_i2c_address,w	;volatile
 13539  064C  0024               	movlb	4	; select bank4
 13540  064D  0092               	movwf	18	;volatile
 13541                           
 13542                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 13543  064E  0020               	movlb	0	; select bank0
 13544  064F  1191               	bcf	17,3	;volatile
 13545                           
 13546                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 13547  0650  0021               	movlb	1	; select bank1
 13548  0651  1591               	bsf	17,3	;volatile
 13549  0652  0008               	return
 13550  0653                     __end_of_I2C1_Initialize:	
 13551  0653                     __ptext9:	
 13552 ;; *************** function _OSCILLATOR_Initialize *****************
 13553 ;; Defined at:
 13554 ;;		line 66 in file "mcc_generated_files/mcc.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;		None
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;		None
 13559 ;; Return value:  Size  Location     Type
 13560 ;;                  1    wreg      void 
 13561 ;; Registers used:
 13562 ;;		wreg, status,2
 13563 ;; Tracked objects:
 13564 ;;		On entry : B1F/1D
 13565 ;;		On exit  : B1F/12
 13566 ;;		Unchanged: B00/0
 13567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;Total ram usage:        0 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:    7
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_SYSTEM_Initialize
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           
 13583                           ;psect for function _OSCILLATOR_Initialize
 13584  0653                     _OSCILLATOR_Initialize:	
 13585                           
 13586                           ;mcc.c: 69: OSCCON1 = 0x60;
 13587                           
 13588                           ;incstack = 0
 13589                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13590  0653  3060               	movlw	96
 13591  0654  0032               	movlb	18	; select bank18
 13592  0655  0099               	movwf	25	;volatile
 13593                           
 13594                           ;mcc.c: 71: OSCCON3 = 0x00;
 13595  0656  019B               	clrf	27	;volatile
 13596                           
 13597                           ;mcc.c: 73: OSCEN = 0x00;
 13598  0657  019D               	clrf	29	;volatile
 13599                           
 13600                           ;mcc.c: 75: OSCFRQ = 0x07;
 13601  0658  3007               	movlw	7
 13602  0659  009F               	movwf	31	;volatile
 13603                           
 13604                           ;mcc.c: 77: OSCTUNE = 0x00;
 13605  065A  019E               	clrf	30	;volatile
 13606  065B  0008               	return
 13607  065C                     __end_of_OSCILLATOR_Initialize:	
 13608  065C                     __ptext8:	
 13609 ;; *************** function _PIN_MANAGER_Initialize *****************
 13610 ;; Defined at:
 13611 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;		None
 13614 ;; Auto vars:     Size  Location     Type
 13615 ;;		None
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg, status,2, status,0
 13620 ;; Tracked objects:
 13621 ;;		On entry : B1F/12
 13622 ;;		On exit  : B1F/1D
 13623 ;;		Unchanged: B00/0
 13624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;Total ram usage:        0 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:    7
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_SYSTEM_Initialize
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           
 13640                           ;psect for function _PIN_MANAGER_Initialize
 13641  065C                     _PIN_MANAGER_Initialize:	
 13642                           
 13643                           ;pin_manager.c: 62: LATA = 0x00;
 13644                           
 13645                           ;incstack = 0
 13646                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13647  065C  0022               	movlb	2	; select bank2
 13648  065D  018C               	clrf	12	;volatile
 13649                           
 13650                           ;pin_manager.c: 63: LATB = 0x00;
 13651  065E  018D               	clrf	13	;volatile
 13652                           
 13653                           ;pin_manager.c: 64: LATC = 0x00;
 13654  065F  018E               	clrf	14	;volatile
 13655                           
 13656                           ;pin_manager.c: 69: TRISA = 0x37;
 13657  0660  3037               	movlw	55
 13658  0661  0021               	movlb	1	; select bank1
 13659  0662  008C               	movwf	12	;volatile
 13660                           
 13661                           ;pin_manager.c: 70: TRISB = 0xD0;
 13662  0663  30D0               	movlw	208
 13663  0664  008D               	movwf	13	;volatile
 13664                           
 13665                           ;pin_manager.c: 71: TRISC = 0xFF;
 13666  0665  30FF               	movlw	255
 13667  0666  008E               	movwf	14	;volatile
 13668                           
 13669                           ;pin_manager.c: 76: ANSELC = 0x00;
 13670  0667  0023               	movlb	3	; select bank3
 13671  0668  018E               	clrf	14	;volatile
 13672                           
 13673                           ;pin_manager.c: 77: ANSELB = 0x20;
 13674  0669  3020               	movlw	32
 13675  066A  008D               	movwf	13	;volatile
 13676                           
 13677                           ;pin_manager.c: 78: ANSELA = 0x00;
 13678  066B  018C               	clrf	12	;volatile
 13679                           
 13680                           ;pin_manager.c: 83: WPUB = 0x10;
 13681  066C  3010               	movlw	16
 13682  066D  0024               	movlb	4	; select bank4
 13683  066E  008D               	movwf	13	;volatile
 13684                           
 13685                           ;pin_manager.c: 84: WPUA = 0x3F;
 13686  066F  303F               	movlw	63
 13687  0670  008C               	movwf	12	;volatile
 13688                           
 13689                           ;pin_manager.c: 85: WPUC = 0x00;
 13690  0671  018E               	clrf	14	;volatile
 13691                           
 13692                           ;pin_manager.c: 90: ODCONA = 0x00;
 13693  0672  0025               	movlb	5	; select bank5
 13694  0673  018C               	clrf	12	;volatile
 13695                           
 13696                           ;pin_manager.c: 91: ODCONB = 0x20;
 13697  0674  3020               	movlw	32
 13698  0675  008D               	movwf	13	;volatile
 13699                           
 13700                           ;pin_manager.c: 92: ODCONC = 0x00;
 13701  0676  018E               	clrf	14	;volatile
 13702                           
 13703                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 13704  0677  003C               	movlb	28	; select bank28
 13705  0678  0820               	movf	32,w	;volatile
 13706  0679  39E0               	andlw	-32
 13707  067A  380E               	iorlw	14
 13708  067B  00A0               	movwf	32	;volatile
 13709                           
 13710                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 13711  067C  0821               	movf	33,w	;volatile
 13712  067D  39E0               	andlw	-32
 13713  067E  380F               	iorlw	15
 13714  067F  00A1               	movwf	33	;volatile
 13715                           
 13716                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 13717  0680  0829               	movf	41,w	;volatile
 13718  0681  39E0               	andlw	-32
 13719  0682  3811               	iorlw	17
 13720  0683  00A9               	movwf	41	;volatile
 13721                           
 13722                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 13723  0684  0828               	movf	40,w	;volatile
 13724  0685  39E0               	andlw	-32
 13725  0686  3810               	iorlw	16
 13726  0687  00A8               	movwf	40	;volatile
 13727                           
 13728                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 13729  0688  003D               	movlb	29	; select bank29
 13730  0689  081F               	movf	31,w	;volatile
 13731  068A  39E0               	andlw	-32
 13732  068B  3819               	iorlw	25
 13733  068C  009F               	movwf	31	;volatile
 13734                           
 13735                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 13736  068D  081E               	movf	30,w	;volatile
 13737  068E  39E0               	andlw	-32
 13738  068F  3818               	iorlw	24
 13739  0690  009E               	movwf	30	;volatile
 13740  0691  0008               	return
 13741  0692                     __end_of_PIN_MANAGER_Initialize:	
 13742  0692                     __ptext7:	
 13743 ;; *************** function _PMD_Initialize *****************
 13744 ;; Defined at:
 13745 ;;		line 86 in file "mcc_generated_files/mcc.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;		None
 13748 ;; Auto vars:     Size  Location     Type
 13749 ;;		None
 13750 ;; Return value:  Size  Location     Type
 13751 ;;                  1    wreg      void 
 13752 ;; Registers used:
 13753 ;;		wreg
 13754 ;; Tracked objects:
 13755 ;;		On entry : B1F/0
 13756 ;;		On exit  : B1F/12
 13757 ;;		Unchanged: B00/0
 13758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;Total ram usage:        0 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; Hardware stack levels required when called:    7
 13766 ;; This function calls:
 13767 ;;		Nothing
 13768 ;; This function is called by:
 13769 ;;		_SYSTEM_Initialize
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           
 13774                           ;psect for function _PMD_Initialize
 13775  0692                     _PMD_Initialize:	
 13776                           
 13777                           ;mcc.c: 89: PMD0 = 0x40;
 13778                           
 13779                           ;incstack = 0
 13780                           ; Regs used in _PMD_Initialize: [wreg]
 13781  0692  3040               	movlw	64
 13782  0693  0032               	movlb	18	; select bank18
 13783  0694  0091               	movwf	17	;volatile
 13784                           
 13785                           ;mcc.c: 91: PMD1 = 0xF2;
 13786  0695  30F2               	movlw	242
 13787  0696  0092               	movwf	18	;volatile
 13788                           
 13789                           ;mcc.c: 93: PMD2 = 0x66;
 13790  0697  3066               	movlw	102
 13791  0698  0093               	movwf	19	;volatile
 13792                           
 13793                           ;mcc.c: 95: PMD3 = 0xE0;
 13794  0699  30E0               	movlw	224
 13795  069A  0094               	movwf	20	;volatile
 13796                           
 13797                           ;mcc.c: 97: PMD4 = 0x20;
 13798  069B  3020               	movlw	32
 13799  069C  0095               	movwf	21	;volatile
 13800                           
 13801                           ;mcc.c: 99: PMD5 = 0x19;
 13802  069D  3019               	movlw	25
 13803  069E  0096               	movwf	22	;volatile
 13804  069F  0008               	return
 13805  06A0                     __end_of_PMD_Initialize:	
 13806  06A0                     __ptext6:	
 13807 ;; *************** function _TMR2_Initialize *****************
 13808 ;; Defined at:
 13809 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2
 13818 ;; Tracked objects:
 13819 ;;		On entry : B1F/1
 13820 ;;		On exit  : B1F/0
 13821 ;;		Unchanged: B00/0
 13822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    7
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_SYSTEM_Initialize
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _TMR2_Initialize
 13839  06A0                     _TMR2_Initialize:	
 13840                           
 13841                           ;tmr2.c: 67: PR2 = 0xFF;
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13845  06A0  30FF               	movlw	255
 13846  06A1  0020               	movlb	0	; select bank0
 13847  06A2  009E               	movwf	30	;volatile
 13848                           
 13849                           ;tmr2.c: 70: TMR2 = 0x00;
 13850  06A3  019D               	clrf	29	;volatile
 13851                           
 13852                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 13853  06A4  1091               	bcf	17,1	;volatile
 13854                           
 13855                           ;tmr2.c: 76: T2CON = 0x04;
 13856  06A5  3004               	movlw	4
 13857  06A6  009F               	movwf	31	;volatile
 13858  06A7  0008               	return
 13859  06A8                     __end_of_TMR2_Initialize:	
 13860  06A8                     __ptext3:	
 13861 ;; *************** function _WDT_Initialize *****************
 13862 ;; Defined at:
 13863 ;;		line 80 in file "mcc_generated_files/mcc.c"
 13864 ;; Parameters:    Size  Location     Type
 13865 ;;		None
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;		None
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  1    wreg      void 
 13870 ;; Registers used:
 13871 ;;		wreg
 13872 ;; Tracked objects:
 13873 ;;		On entry : B1F/12
 13874 ;;		On exit  : B1F/1
 13875 ;;		Unchanged: B00/0
 13876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;Total ram usage:        0 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:    7
 13884 ;; This function calls:
 13885 ;;		Nothing
 13886 ;; This function is called by:
 13887 ;;		_SYSTEM_Initialize
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           
 13892                           ;psect for function _WDT_Initialize
 13893  06A8                     _WDT_Initialize:	
 13894                           
 13895                           ;mcc.c: 83: WDTCON = 0x16;
 13896                           
 13897                           ;incstack = 0
 13898                           ; Regs used in _WDT_Initialize: [wreg]
 13899  06A8  3016               	movlw	22
 13900  06A9  0021               	movlb	1	; select bank1
 13901  06AA  0097               	movwf	23	;volatile
 13902  06AB  0008               	return
 13903  06AC                     __end_of_WDT_Initialize:	
 13904  06AC                     __ptext1:	
 13905 ;; *************** function _TMR3_StartTimer *****************
 13906 ;; Defined at:
 13907 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;		None
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;		None
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  1    wreg      void 
 13914 ;; Registers used:
 13915 ;;		None
 13916 ;; Tracked objects:
 13917 ;;		On entry : 1F/1
 13918 ;;		On exit  : 1F/8
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;Total ram usage:        0 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; Hardware stack levels required when called:    7
 13928 ;; This function calls:
 13929 ;;		Nothing
 13930 ;; This function is called by:
 13931 ;;		_main
 13932 ;; This function uses a non-reentrant model
 13933 ;;
 13934                           
 13935                           
 13936                           ;psect for function _TMR3_StartTimer
 13937  06AC                     _TMR3_StartTimer:	
 13938                           
 13939                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 13940                           
 13941                           ;incstack = 0
 13942                           ; Regs used in _TMR3_StartTimer: []
 13943  06AC  0028               	movlb	8	; select bank8
 13944  06AD  1413               	bsf	19,0	;volatile
 13945  06AE  0008               	return
 13946  06AF                     __end_of_TMR3_StartTimer:	
 13947  06AF                     __ptext13:	
 13948 ;; *************** function _CLC1_Initialize *****************
 13949 ;; Defined at:
 13950 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;		None
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      void 
 13957 ;; Registers used:
 13958 ;;		wreg, status,2
 13959 ;; Tracked objects:
 13960 ;;		On entry : B1F/0
 13961 ;;		On exit  : B1F/1
 13962 ;;		Unchanged: B00/0
 13963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13968 ;;Total ram usage:        0 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:    7
 13971 ;; This function calls:
 13972 ;;		Nothing
 13973 ;; This function is called by:
 13974 ;;		_SYSTEM_Initialize
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           
 13978                           
 13979                           ;psect for function _CLC1_Initialize
 13980  06AF                     _CLC1_Initialize:	
 13981                           
 13982                           ;clc1.c: 63: CLC1POL = 0x04;
 13983                           
 13984                           ;incstack = 0
 13985                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 13986  06AF  3004               	movlw	4
 13987  06B0  003E               	movlb	30	; select bank30
 13988  06B1  0091               	movwf	17	;volatile
 13989                           
 13990                           ;clc1.c: 65: CLC1SEL0 = 0x00;
 13991  06B2  0192               	clrf	18	;volatile
 13992                           
 13993                           ;clc1.c: 67: CLC1SEL1 = 0x01;
 13994  06B3  3001               	movlw	1
 13995  06B4  0093               	movwf	19	;volatile
 13996                           
 13997                           ;clc1.c: 69: CLC1SEL2 = 0x01;
 13998  06B5  0094               	movwf	20	;volatile
 13999                           
 14000                           ;clc1.c: 71: CLC1SEL3 = 0x01;
 14001  06B6  0095               	movwf	21	;volatile
 14002                           
 14003                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 14004  06B7  3002               	movlw	2
 14005  06B8  0096               	movwf	22	;volatile
 14006                           
 14007                           ;clc1.c: 75: CLC1GLS1 = 0xA8;
 14008  06B9  30A8               	movlw	168
 14009  06BA  0097               	movwf	23	;volatile
 14010                           
 14011                           ;clc1.c: 77: CLC1GLS2 = 0xA8;
 14012  06BB  0098               	movwf	24	;volatile
 14013                           
 14014                           ;clc1.c: 79: CLC1GLS3 = 0xA8;
 14015  06BC  0099               	movwf	25	;volatile
 14016                           
 14017                           ;clc1.c: 81: CLC1CON = 0x95;
 14018  06BD  3095               	movlw	149
 14019  06BE  0090               	movwf	16	;volatile
 14020                           
 14021                           ;clc1.c: 84: PIR3bits.CLC1IF = 0;
 14022  06BF  0020               	movlb	0	; select bank0
 14023  06C0  1013               	bcf	19,0	;volatile
 14024                           
 14025                           ;clc1.c: 86: PIE3bits.CLC1IE = 1;
 14026  06C1  0021               	movlb	1	; select bank1
 14027  06C2  1413               	bsf	19,0	;volatile
 14028  06C3  0008               	return
 14029  06C4                     __end_of_CLC1_Initialize:	
 14030  06C4                     __ptext4:	
 14031 ;; *************** function _TMR3_Initialize *****************
 14032 ;; Defined at:
 14033 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 14034 ;; Parameters:    Size  Location     Type
 14035 ;;		None
 14036 ;; Auto vars:     Size  Location     Type
 14037 ;;		None
 14038 ;; Return value:  Size  Location     Type
 14039 ;;                  1    wreg      void 
 14040 ;; Registers used:
 14041 ;;		wreg, status,2, status,0, pclath, cstack
 14042 ;; Tracked objects:
 14043 ;;		On entry : B1F/1
 14044 ;;		On exit  : 1F/8
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;Total ram usage:        0 bytes
 14052 ;; Hardware stack levels used:    1
 14053 ;; Hardware stack levels required when called:    8
 14054 ;; This function calls:
 14055 ;;		_TMR3_SetInterruptHandler
 14056 ;; This function is called by:
 14057 ;;		_SYSTEM_Initialize
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           
 14062                           ;psect for function _TMR3_Initialize
 14063  06C4                     _TMR3_Initialize:	
 14064  06C4                     l7707:	
 14065                           ;incstack = 0
 14066                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14067                           
 14068                           
 14069                           ;tmr3.c: 69: T3GCON = 0x00;
 14070  06C4  0028               	movlb	8	; select bank8
 14071  06C5  0194               	clrf	20	;volatile
 14072                           
 14073                           ;tmr3.c: 72: TMR3H = 0xE0;
 14074  06C6  30E0               	movlw	224
 14075  06C7  0092               	movwf	18	;volatile
 14076                           
 14077                           ;tmr3.c: 75: TMR3L = 0xC0;
 14078  06C8  30C0               	movlw	192
 14079  06C9  0091               	movwf	17	;volatile
 14080                           
 14081                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14082  06CA  0812               	movf	18,w	;volatile
 14083  06CB  0021               	movlb	1	; select bank1
 14084  06CC  00AD               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 14085  06CD  01AC               	clrf	_timer3ReloadVal^(0+128)	;volatile
 14086  06CE  0028               	movlb	8	; select bank8
 14087  06CF  0811               	movf	17,w	;volatile
 14088  06D0  0021               	movlb	1	; select bank1
 14089  06D1  04AC               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 14090                           
 14091                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 14092  06D2  0020               	movlb	0	; select bank0
 14093  06D3  1213               	bcf	19,4	;volatile
 14094                           
 14095                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 14096  06D4  0021               	movlb	1	; select bank1
 14097  06D5  1613               	bsf	19,4	;volatile
 14098                           
 14099                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 14100  06D6  3003               	movlw	low _TMR3_DefaultInterruptHandler
 14101  06D7  00CA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 14102  06D8  3000               	movlw	high _TMR3_DefaultInterruptHandler
 14103  06D9  00CB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14104  06DA  2323               	fcall	_TMR3_SetInterruptHandler
 14105                           
 14106                           ;tmr3.c: 90: T3CON = 0x01;
 14107  06DB  3001               	movlw	1
 14108  06DC  0028               	movlb	8	; select bank8
 14109  06DD  0093               	movwf	19	;volatile
 14110  06DE  0008               	return
 14111  06DF                     __end_of_TMR3_Initialize:	
 14112                           
 14113                           	psect	bssBANK0
 14114  0020                     __pbssBANK0:	
 14115  0020                     _ISTEP:	
 14116  0020                     	ds	4
 14117  0024                     _CMIN:	
 14118  0024                     	ds	4
 14119  0028                     _CMAX:	
 14120  0028                     	ds	4
 14121  002C                     _CVAL:	
 14122  002C                     	ds	4
 14123  0030                     _temp_blu:	
 14124  0030                     	ds	1
 14125  0031                     _temp_green:	
 14126  0031                     	ds	1
 14127  0032                     _temp_red:	
 14128  0032                     	ds	1
 14129  0033                     _temp_gp3:	
 14130  0033                     	ds	1
 14131  0034                     _temp_gp2:	
 14132  0034                     	ds	1
 14133  0035                     _temp_gp1:	
 14134  0035                     	ds	1
 14135  0036                     _S_RELATIVE:	
 14136  0036                     	ds	1
 14137  0037                     _C_WRAPE:	
 14138  0037                     	ds	1
 14139  0038                     _C_ETYPE:	
 14140  0038                     	ds	1
 14141  0039                     _GAMMABLED:	
 14142  0039                     	ds	1
 14143  003A                     _GAMMAGLED:	
 14144  003A                     	ds	1
 14145  003B                     _GAMMAGP3_RLED:	
 14146  003B                     	ds	1
 14147  003C                     _GAMMAGP2:	
 14148  003C                     	ds	1
 14149  003D                     _GAMMAGP1:	
 14150  003D                     	ds	1
 14151  003E                     _FADEGP:	
 14152  003E                     	ds	1
 14153  003F                     _GP3REG:	
 14154  003F                     	ds	1
 14155  0040                     _GP2REG:	
 14156  0040                     	ds	1
 14157  0041                     _GP1REG:	
 14158  0041                     	ds	1
 14159  0042                     _BLED:	
 14160  0042                     	ds	1
 14161  0043                     _GLED:	
 14162  0043                     	ds	1
 14163  0044                     _RLED:	
 14164  0044                     	ds	1
 14165  0045                     _GP3CONF:	
 14166  0045                     	ds	1
 14167  0046                     _GP2CONF:	
 14168  0046                     	ds	1
 14169  0047                     _GP1CONF:	
 14170  0047                     	ds	1
 14171  0048                     _GCONF:	
 14172  0048                     	ds	1
 14173  0049                     _INTCONF:	
 14174  0049                     	ds	1
 14175  004A                     _ESTATUS:	
 14176  004A                     	ds	1
 14177  004B                     _i2c_address:	
 14178  004B                     	ds	1
 14179                           
 14180                           	psect	bssBANK1
 14181  00A0                     __pbssBANK1:	
 14182  00A0                     _en_deb:	
 14183  00A0                     	ds	2
 14184  00A2                     _double_push_delay:	
 14185  00A2                     	ds	2
 14186  00A4                     _double_push_cnt:	
 14187  00A4                     	ds	2
 14188  00A6                     _DoublePush:	
 14189  00A6                     	ds	2
 14190  00A8                     _DEBOUNCE:	
 14191  00A8                     	ds	2
 14192  00AA                     _TMR3_InterruptHandler:	
 14193  00AA                     	ds	2
 14194  00AC                     _timer3ReloadVal:	
 14195  00AC                     	ds	2
 14196  00AE                     EncoderSwitch_GetValueFiltered@pb_status:	
 14197  00AE                     	ds	1
 14198  00AF                     _en_prev:	
 14199  00AF                     	ds	1
 14200  00B0                     _fade_cnt:	
 14201  00B0                     	ds	1
 14202  00B1                     _pb_cnt:	
 14203  00B1                     	ds	1
 14204  00B2                     _pb_fsm:	
 14205  00B2                     	ds	1
 14206  00B3                     _gp_fade_cnt:	
 14207  00B3                     	ds	1
 14208  00B4                     _gp3_fsm:	
 14209  00B4                     	ds	1
 14210  00B5                     _gp2_fsm:	
 14211  00B5                     	ds	1
 14212  00B6                     _gp1_fsm:	
 14213  00B6                     	ds	1
 14214  00B7                     _gp_timer:	
 14215  00B7                     	ds	1
 14216  00B8                     I2C1_StatusCallback@slaveWriteType:	
 14217  00B8                     	ds	1
 14218  00B9                     _int2clear:	
 14219  00B9                     	ds	1
 14220  00BA                     _intclear:	
 14221  00BA                     	ds	1
 14222  00BB                     _EncoderReg:	
 14223  00BB                     	ds	1
 14224  00BC                     _S_CKSRC:	
 14225  00BC                     	ds	1
 14226  00BD                     _C_DTYPE:	
 14227  00BD                     	ds	1
 14228  00BE                     _C_DIRE:	
 14229  00BE                     	ds	1
 14230  00BF                     _C_IPUD:	
 14231  00BF                     	ds	1
 14232  00C0                     _C_RMOD:	
 14233  00C0                     	ds	1
 14234  00C1                     _C_MBANK:	
 14235  00C1                     	ds	1
 14236  00C2                     _C_RESET:	
 14237  00C2                     	ds	1
 14238  00C3                     _GCONF2:	
 14239  00C3                     	ds	1
 14240  00C4                     _FADERGB:	
 14241  00C4                     	ds	1
 14242  00C5                     _DPPERIOD:	
 14243  00C5                     	ds	1
 14244  00C6                     _ANTBOUNC:	
 14245  00C6                     	ds	1
 14246  00C7                     _FSTATUS:	
 14247  00C7                     	ds	1
 14248  00C8                     _I2STATUS:	
 14249  00C8                     	ds	1
 14250  00C9                     _fsm_tmr:	
 14251  00C9                     	ds	1
 14252                           
 14253                           	psect	dataBANK1
 14254  00DA                     __pdataBANK1:	
 14255  00DA                     _I2C1_slaveWriteData:	
 14256  00DA                     	ds	1
 14257                           
 14258                           	psect	clrtext
 14259  1130                     clear_ram0:	
 14260                           ;	Called with FSR0 containing the base address, and
 14261                           ;	WREG with the size to clear
 14262                           
 14263  1130  0064               	clrwdt	;clear the watchdog before getting into this loop
 14264  1131                     clrloop0:	
 14265  1131  0180               	clrf	0	;clear RAM location pointed to by FSR
 14266  1132  3101               	addfsr 0,1
 14267  1133  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 14268  1134  2931               	goto	clrloop0	;have we reached the end yet?
 14269  1135  3400               	retlw	0	;all done for this memory range, return
 14270                           
 14271                           	psect	cstackBANK1
 14272  00CA                     __pcstackBANK1:	
 14273  00CA                     ??_PMD_Initialize:	
 14274  00CA                     ??_PIN_MANAGER_Initialize:	
 14275                           ; 1 bytes @ 0x0
 14276                           
 14277  00CA                     ??_OSCILLATOR_Initialize:	
 14278                           ; 1 bytes @ 0x0
 14279                           
 14280  00CA                     ??_WDT_Initialize:	
 14281                           ; 1 bytes @ 0x0
 14282                           
 14283  00CA                     ??_I2C1_AddressSet:	
 14284                           ; 1 bytes @ 0x0
 14285                           
 14286  00CA                     ??_I2C1_Initialize:	
 14287                           ; 1 bytes @ 0x0
 14288                           
 14289  00CA                     ??_CLC2_Initialize:	
 14290                           ; 1 bytes @ 0x0
 14291                           
 14292  00CA                     ??_TMR2_Initialize:	
 14293                           ; 1 bytes @ 0x0
 14294                           
 14295  00CA                     ??_CLC1_Initialize:	
 14296                           ; 1 bytes @ 0x0
 14297                           
 14298  00CA                     ?_TMR3_SetInterruptHandler:	
 14299                           ; 1 bytes @ 0x0
 14300                           
 14301  00CA                     ??_DataInitSet:	
 14302                           ; 1 bytes @ 0x0
 14303                           
 14304  00CA                     ??_ADC_Initialize:	
 14305                           ; 1 bytes @ 0x0
 14306                           
 14307  00CA                     ??_TMR3_StartTimer:	
 14308                           ; 1 bytes @ 0x0
 14309                           
 14310  00CA                     ??_SetInterrupt:	
 14311                           ; 1 bytes @ 0x0
 14312                           
 14313  00CA                     ??_ClearInterrupt:	
 14314                           ; 1 bytes @ 0x0
 14315                           
 14316  00CA                     ??_EncoderStatusUpdate:	
 14317                           ; 1 bytes @ 0x0
 14318                           
 14319  00CA                     ??_FadeProcessSet:	
 14320                           ; 1 bytes @ 0x0
 14321                           
 14322  00CA                     ??_EncoderSwitch_GetValue:	
 14323                           ; 1 bytes @ 0x0
 14324                           
 14325  00CA                     ??_EncoderSwitch_GetValueFiltered:	
 14326                           ; 1 bytes @ 0x0
 14327                           
 14328  00CA                     ?_ADC_GetConversion:	
 14329                           ; 1 bytes @ 0x0
 14330                           
 14331  00CA                     ?___wmul:	
 14332                           ; 2 bytes @ 0x0
 14333                           
 14334  00CA                     EncoderStatusUpdate@stat:	
 14335                           ; 2 bytes @ 0x0
 14336                           
 14337  00CA                     FadeProcessSet@stat:	
 14338                           ; 1 bytes @ 0x0
 14339                           
 14340  00CA                     TMR3_SetInterruptHandler@InterruptHandler:	
 14341                           ; 1 bytes @ 0x0
 14342                           
 14343  00CA                     ___wmul@multiplier:	
 14344                           ; 2 bytes @ 0x0
 14345                           
 14346                           
 14347                           ; 2 bytes @ 0x0
 14348  00CA                     	ds	1
 14349  00CB                     ??_Int2StatusUpdate:	
 14350  00CB                     ??_Encoder_PushButton_FSM:	
 14351                           ; 1 bytes @ 0x1
 14352                           
 14353  00CB                     Int2StatusUpdate@stat:	
 14354                           ; 1 bytes @ 0x1
 14355                           
 14356                           
 14357                           ; 1 bytes @ 0x1
 14358  00CB                     	ds	1
 14359  00CC                     ??_TMR3_Initialize:	
 14360  00CC                     ??_TMR3_SetInterruptHandler:	
 14361                           ; 1 bytes @ 0x2
 14362                           
 14363  00CC                     ??_SYSTEM_Initialize:	
 14364                           ; 1 bytes @ 0x2
 14365                           
 14366  00CC                     ??_ADC_GetConversion:	
 14367                           ; 1 bytes @ 0x2
 14368                           
 14369  00CC                     ??_FadeProcessClear:	
 14370                           ; 1 bytes @ 0x2
 14371                           
 14372  00CC                     FadeProcessClear@stat:	
 14373                           ; 1 bytes @ 0x2
 14374                           
 14375  00CC                     ___wmul@multiplicand:	
 14376                           ; 1 bytes @ 0x2
 14377                           
 14378                           
 14379                           ; 2 bytes @ 0x2
 14380  00CC                     	ds	1
 14381  00CD                     ADC_GetConversion@channel:	
 14382                           
 14383                           ; 1 bytes @ 0x3
 14384  00CD                     	ds	1
 14385  00CE                     ??_GP1_FSM:	
 14386  00CE                     ??_GP2_FSM:	
 14387                           ; 1 bytes @ 0x4
 14388                           
 14389  00CE                     ??_GP3_FSM:	
 14390                           ; 1 bytes @ 0x4
 14391                           
 14392  00CE                     ??___wmul:	
 14393                           ; 1 bytes @ 0x4
 14394                           
 14395  00CE                     ___wmul@product:	
 14396                           ; 1 bytes @ 0x4
 14397                           
 14398                           
 14399                           ; 2 bytes @ 0x4
 14400  00CE                     	ds	2
 14401  00D0                     ??_PWM_GP1:	
 14402  00D0                     ??_PWM_GP2:	
 14403                           ; 1 bytes @ 0x6
 14404                           
 14405  00D0                     ??_PWM_GP3_RLED:	
 14406                           ; 1 bytes @ 0x6
 14407                           
 14408  00D0                     ??_PWM_GLED:	
 14409                           ; 1 bytes @ 0x6
 14410                           
 14411  00D0                     ??_PWM_BLED:	
 14412                           ; 1 bytes @ 0x6
 14413                           
 14414                           
 14415                           ; 1 bytes @ 0x6
 14416  00D0                     	ds	6
 14417  00D6                     PWM_GP2@duty:	
 14418  00D6                     PWM_GP3_RLED@duty:	
 14419                           ; 1 bytes @ 0xC
 14420                           
 14421  00D6                     PWM_GLED@duty:	
 14422                           ; 1 bytes @ 0xC
 14423                           
 14424  00D6                     PWM_BLED@duty:	
 14425                           ; 1 bytes @ 0xC
 14426                           
 14427                           
 14428                           ; 1 bytes @ 0xC
 14429  00D6                     	ds	1
 14430  00D7                     ??_Encoder_FSM:	
 14431  00D7                     ??_FADE_GP2:	
 14432                           ; 1 bytes @ 0xD
 14433                           
 14434  00D7                     ??_FADE_GP3:	
 14435                           ; 1 bytes @ 0xD
 14436                           
 14437  00D7                     ??_FADE_LEDS:	
 14438                           ; 1 bytes @ 0xD
 14439                           
 14440                           
 14441                           ; 1 bytes @ 0xD
 14442  00D7                     	ds	1
 14443  00D8                     PWM_GP1@duty:	
 14444                           
 14445                           ; 1 bytes @ 0xE
 14446  00D8                     	ds	1
 14447  00D9                     ??_GP_Ports_FSM:	
 14448  00D9                     ??_FADE_GP1:	
 14449                           ; 1 bytes @ 0xF
 14450                           
 14451                           
 14452                           ; 1 bytes @ 0xF
 14453  00D9                     	ds	1
 14454  00DA                     ??_main:	
 14455                           
 14456                           	psect	cstackCOMMON
 14457  0070                     __pcstackCOMMON:	
 14458                           ; 1 bytes @ 0x10
 14459                           
 14460  0070                     ?___flge:	
 14461  0070                     ?_PMD_Initialize:	
 14462                           ; 1 bit 
 14463                           
 14464  0070                     ?_PIN_MANAGER_Initialize:	
 14465                           ; 1 bytes @ 0x0
 14466                           
 14467  0070                     ?_OSCILLATOR_Initialize:	
 14468                           ; 1 bytes @ 0x0
 14469                           
 14470  0070                     ?_WDT_Initialize:	
 14471                           ; 1 bytes @ 0x0
 14472                           
 14473  0070                     ?_I2C1_AddressSet:	
 14474                           ; 1 bytes @ 0x0
 14475                           
 14476  0070                     ?_I2C1_Initialize:	
 14477                           ; 1 bytes @ 0x0
 14478                           
 14479  0070                     ?_CLC2_Initialize:	
 14480                           ; 1 bytes @ 0x0
 14481                           
 14482  0070                     ?_TMR2_Initialize:	
 14483                           ; 1 bytes @ 0x0
 14484                           
 14485  0070                     ?_CLC1_Initialize:	
 14486                           ; 1 bytes @ 0x0
 14487                           
 14488  0070                     ?_TMR3_Initialize:	
 14489                           ; 1 bytes @ 0x0
 14490                           
 14491  0070                     ?_CLC2_ISR:	
 14492                           ; 1 bytes @ 0x0
 14493                           
 14494  0070                     ?_CLC1_ISR:	
 14495                           ; 1 bytes @ 0x0
 14496                           
 14497  0070                     ?_I2C1_ISR:	
 14498                           ; 1 bytes @ 0x0
 14499                           
 14500  0070                     ?_TMR3_ISR:	
 14501                           ; 1 bytes @ 0x0
 14502                           
 14503  0070                     ?_CLC_2_Interrupt:	
 14504                           ; 1 bytes @ 0x0
 14505                           
 14506  0070                     ?_I2C1_StatusCallback:	
 14507                           ; 1 bytes @ 0x0
 14508                           
 14509  0070                     ?_CLC_1_Interrupt:	
 14510                           ; 1 bytes @ 0x0
 14511                           
 14512  0070                     ?_TMR3_DefaultInterruptHandler:	
 14513                           ; 1 bytes @ 0x0
 14514                           
 14515  0070                     ??_TMR3_DefaultInterruptHandler:	
 14516                           ; 1 bytes @ 0x0
 14517                           
 14518  0070                     ?_TMR3_CallBack:	
 14519                           ; 1 bytes @ 0x0
 14520                           
 14521  0070                     ??_TMR3_CallBack:	
 14522                           ; 1 bytes @ 0x0
 14523                           
 14524  0070                     ?_DataInitSet:	
 14525                           ; 1 bytes @ 0x0
 14526                           
 14527  0070                     ?_Encoder_FSM:	
 14528                           ; 1 bytes @ 0x0
 14529                           
 14530  0070                     ?_GP_Ports_FSM:	
 14531                           ; 1 bytes @ 0x0
 14532                           
 14533  0070                     ?_RegisterRead:	
 14534                           ; 1 bytes @ 0x0
 14535                           
 14536  0070                     ?_FirstConfig:	
 14537                           ; 1 bytes @ 0x0
 14538                           
 14539  0070                     ??_FirstConfig:	
 14540                           ; 1 bytes @ 0x0
 14541                           
 14542  0070                     ?_Config_GP1:	
 14543                           ; 1 bytes @ 0x0
 14544                           
 14545  0070                     ?_Config_GP2:	
 14546                           ; 1 bytes @ 0x0
 14547                           
 14548  0070                     ?_Config_GP3:	
 14549                           ; 1 bytes @ 0x0
 14550                           
 14551  0070                     ?_UpdateOut_GP1:	
 14552                           ; 1 bytes @ 0x0
 14553                           
 14554  0070                     ??_UpdateOut_GP1:	
 14555                           ; 1 bytes @ 0x0
 14556                           
 14557  0070                     ?_UpdateOut_GP2:	
 14558                           ; 1 bytes @ 0x0
 14559                           
 14560  0070                     ??_UpdateOut_GP2:	
 14561                           ; 1 bytes @ 0x0
 14562                           
 14563  0070                     ?_UpdateOut_GP3:	
 14564                           ; 1 bytes @ 0x0
 14565                           
 14566  0070                     ??_UpdateOut_GP3:	
 14567                           ; 1 bytes @ 0x0
 14568                           
 14569  0070                     ?_SecondConfig:	
 14570                           ; 1 bytes @ 0x0
 14571                           
 14572  0070                     ??_SecondConfig:	
 14573                           ; 1 bytes @ 0x0
 14574                           
 14575  0070                     ?_eeprom_write:	
 14576                           ; 1 bytes @ 0x0
 14577                           
 14578  0070                     ?_eeprom_read:	
 14579                           ; 1 bytes @ 0x0
 14580                           
 14581  0070                     ??_eeprom_read:	
 14582                           ; 1 bytes @ 0x0
 14583                           
 14584  0070                     ?_RGB_EncoderMode:	
 14585                           ; 1 bytes @ 0x0
 14586                           
 14587  0070                     ??_RGB_EncoderMode:	
 14588                           ; 1 bytes @ 0x0
 14589                           
 14590  0070                     ?_STD_EncoderMode:	
 14591                           ; 1 bytes @ 0x0
 14592                           
 14593  0070                     ??_STD_EncoderMode:	
 14594                           ; 1 bytes @ 0x0
 14595                           
 14596  0070                     ?_PWM_GP1:	
 14597                           ; 1 bytes @ 0x0
 14598                           
 14599  0070                     ?_PWM_GP2:	
 14600                           ; 1 bytes @ 0x0
 14601                           
 14602  0070                     ?_PWM_GP3_RLED:	
 14603                           ; 1 bytes @ 0x0
 14604                           
 14605  0070                     ?_PWM_GLED:	
 14606                           ; 1 bytes @ 0x0
 14607                           
 14608  0070                     ?_PWM_BLED:	
 14609                           ; 1 bytes @ 0x0
 14610                           
 14611  0070                     ?_SYSTEM_Initialize:	
 14612                           ; 1 bytes @ 0x0
 14613                           
 14614  0070                     ?_INTERRUPT_InterruptManager:	
 14615                           ; 1 bytes @ 0x0
 14616                           
 14617  0070                     ?_I2C1_Initialize_ClockStreach:	
 14618                           ; 1 bytes @ 0x0
 14619                           
 14620  0070                     ??_I2C1_Initialize_ClockStreach:	
 14621                           ; 1 bytes @ 0x0
 14622                           
 14623  0070                     ?_PWM5_Initialize:	
 14624                           ; 1 bytes @ 0x0
 14625                           
 14626  0070                     ??_PWM5_Initialize:	
 14627                           ; 1 bytes @ 0x0
 14628                           
 14629  0070                     ?_PWM3_Initialize:	
 14630                           ; 1 bytes @ 0x0
 14631                           
 14632  0070                     ??_PWM3_Initialize:	
 14633                           ; 1 bytes @ 0x0
 14634                           
 14635  0070                     ?_PWM4_Initialize:	
 14636                           ; 1 bytes @ 0x0
 14637                           
 14638  0070                     ??_PWM4_Initialize:	
 14639                           ; 1 bytes @ 0x0
 14640                           
 14641  0070                     ?_ADC_Initialize:	
 14642                           ; 1 bytes @ 0x0
 14643                           
 14644  0070                     ?_PWM1_Initialize:	
 14645                           ; 1 bytes @ 0x0
 14646                           
 14647  0070                     ??_PWM1_Initialize:	
 14648                           ; 1 bytes @ 0x0
 14649                           
 14650  0070                     ?_PWM2_Initialize:	
 14651                           ; 1 bytes @ 0x0
 14652                           
 14653  0070                     ??_PWM2_Initialize:	
 14654                           ; 1 bytes @ 0x0
 14655                           
 14656  0070                     ?_TMR3_StartTimer:	
 14657                           ; 1 bytes @ 0x0
 14658                           
 14659  0070                     ?_TMR3_WriteTimer:	
 14660                           ; 1 bytes @ 0x0
 14661                           
 14662  0070                     ?_SetInterrupt:	
 14663                           ; 1 bytes @ 0x0
 14664                           
 14665  0070                     ?_ClearInterrupt:	
 14666                           ; 1 bytes @ 0x0
 14667                           
 14668  0070                     ?_TimerInt:	
 14669                           ; 1 bytes @ 0x0
 14670                           
 14671  0070                     ??_TimerInt:	
 14672                           ; 1 bytes @ 0x0
 14673                           
 14674  0070                     ?_main:	
 14675                           ; 1 bytes @ 0x0
 14676                           
 14677  0070                     ?_FirstDataSplit:	
 14678                           ; 1 bytes @ 0x0
 14679                           
 14680  0070                     ??_FirstDataSplit:	
 14681                           ; 1 bytes @ 0x0
 14682                           
 14683  0070                     ?_SecondDataSplit:	
 14684                           ; 1 bytes @ 0x0
 14685                           
 14686  0070                     ??_SecondDataSplit:	
 14687                           ; 1 bytes @ 0x0
 14688                           
 14689  0070                     ?_EncoderStatusUpdate:	
 14690                           ; 1 bytes @ 0x0
 14691                           
 14692  0070                     ?_Int2StatusUpdate:	
 14693                           ; 1 bytes @ 0x0
 14694                           
 14695  0070                     ?_FadeProcessSet:	
 14696                           ; 1 bytes @ 0x0
 14697                           
 14698  0070                     ?_FadeProcessClear:	
 14699                           ; 1 bytes @ 0x0
 14700                           
 14701  0070                     ?_FADE_GP1:	
 14702                           ; 1 bytes @ 0x0
 14703                           
 14704  0070                     ?_FADE_GP2:	
 14705                           ; 1 bytes @ 0x0
 14706                           
 14707  0070                     ?_FADE_GP3:	
 14708                           ; 1 bytes @ 0x0
 14709                           
 14710  0070                     ?_GP1_FSM:	
 14711                           ; 1 bytes @ 0x0
 14712                           
 14713  0070                     ?_GP2_FSM:	
 14714                           ; 1 bytes @ 0x0
 14715                           
 14716  0070                     ?_GP3_FSM:	
 14717                           ; 1 bytes @ 0x0
 14718                           
 14719  0070                     ?_EncoderSwitch_GetValue:	
 14720                           ; 1 bytes @ 0x0
 14721                           
 14722  0070                     ?_EncoderSwitch_GetValueFiltered:	
 14723                           ; 1 bytes @ 0x0
 14724                           
 14725  0070                     ?_FADE_LEDS:	
 14726                           ; 1 bytes @ 0x0
 14727                           
 14728  0070                     ?_Encoder_PushButton_FSM:	
 14729                           ; 1 bytes @ 0x0
 14730                           
 14731  0070                     ?i1_I2C1_Initialize:	
 14732                           ; 1 bytes @ 0x0
 14733                           
 14734  0070                     ??i1_I2C1_Initialize:	
 14735                           ; 1 bytes @ 0x0
 14736                           
 14737  0070                     ?i1_SetInterrupt:	
 14738                           ; 1 bytes @ 0x0
 14739                           
 14740  0070                     ??i1_SetInterrupt:	
 14741                           ; 1 bytes @ 0x0
 14742                           
 14743  0070                     ?i1_EncoderStatusUpdate:	
 14744                           ; 1 bytes @ 0x0
 14745                           
 14746  0070                     ??i1_EncoderStatusUpdate:	
 14747                           ; 1 bytes @ 0x0
 14748                           
 14749  0070                     ?i1_PWM_GP1:	
 14750                           ; 1 bytes @ 0x0
 14751                           
 14752  0070                     ?i1_PWM_GP2:	
 14753                           ; 1 bytes @ 0x0
 14754                           
 14755  0070                     ?i1_PWM_GP3_RLED:	
 14756                           ; 1 bytes @ 0x0
 14757                           
 14758  0070                     ?i1___wmul:	
 14759                           ; 1 bytes @ 0x0
 14760                           
 14761  0070                     ?___fladd:	
 14762                           ; 2 bytes @ 0x0
 14763                           
 14764  0070                     eeprom_read@addr:	
 14765                           ; 4 bytes @ 0x0
 14766                           
 14767  0070                     eeprom_write@value:	
 14768                           ; 1 bytes @ 0x0
 14769                           
 14770  0070                     i1EncoderStatusUpdate@stat:	
 14771                           ; 1 bytes @ 0x0
 14772                           
 14773  0070                     TMR3_WriteTimer@timerVal:	
 14774                           ; 1 bytes @ 0x0
 14775                           
 14776  0070                     i1___wmul@multiplier:	
 14777                           ; 2 bytes @ 0x0
 14778                           
 14779  0070                     ___flge@ff1:	
 14780                           ; 2 bytes @ 0x0
 14781                           
 14782  0070                     ___fladd@b:	
 14783                           ; 4 bytes @ 0x0
 14784                           
 14785                           
 14786                           ; 4 bytes @ 0x0
 14787  0070                     	ds	1
 14788  0071                     ??_RegisterRead:	
 14789  0071                     ??_eeprom_write:	
 14790                           ; 1 bytes @ 0x1
 14791                           
 14792  0071                     RegisterRead@add:	
 14793                           ; 1 bytes @ 0x1
 14794                           
 14795  0071                     eeprom_write@addr:	
 14796                           ; 1 bytes @ 0x1
 14797                           
 14798                           
 14799                           ; 1 bytes @ 0x1
 14800  0071                     	ds	1
 14801  0072                     ??_TMR3_ISR:	
 14802  0072                     ??_TMR3_WriteTimer:	
 14803                           ; 1 bytes @ 0x2
 14804                           
 14805  0072                     RegisterRead@return_value:	
 14806                           ; 1 bytes @ 0x2
 14807                           
 14808  0072                     i1___wmul@multiplicand:	
 14809                           ; 1 bytes @ 0x2
 14810                           
 14811                           
 14812                           ; 2 bytes @ 0x2
 14813  0072                     	ds	2
 14814  0074                     ??i1___wmul:	
 14815  0074                     i1___wmul@product:	
 14816                           ; 1 bytes @ 0x4
 14817                           
 14818  0074                     ___flge@ff2:	
 14819                           ; 2 bytes @ 0x4
 14820                           
 14821  0074                     ___fladd@a:	
 14822                           ; 4 bytes @ 0x4
 14823                           
 14824                           
 14825                           ; 4 bytes @ 0x4
 14826  0074                     	ds	2
 14827  0076                     ??i1_PWM_GP1:	
 14828  0076                     ??i1_PWM_GP2:	
 14829                           ; 1 bytes @ 0x6
 14830                           
 14831  0076                     ??i1_PWM_GP3_RLED:	
 14832                           ; 1 bytes @ 0x6
 14833                           
 14834                           
 14835                           ; 1 bytes @ 0x6
 14836  0076                     	ds	2
 14837  0078                     ??___flge:	
 14838  0078                     ___fladd@signs:	
 14839                           ; 1 bytes @ 0x8
 14840                           
 14841                           
 14842                           ; 1 bytes @ 0x8
 14843  0078                     	ds	1
 14844  0079                     ___fladd@aexp:	
 14845                           
 14846                           ; 1 bytes @ 0x9
 14847  0079                     	ds	1
 14848  007A                     ___fladd@bexp:	
 14849                           
 14850                           ; 1 bytes @ 0xA
 14851  007A                     	ds	1
 14852  007B                     ___fladd@grs:	
 14853                           
 14854                           ; 1 bytes @ 0xB
 14855  007B                     	ds	1
 14856  007C                     ??_CLC2_ISR:	
 14857  007C                     ??_CLC1_ISR:	
 14858                           ; 1 bytes @ 0xC
 14859                           
 14860  007C                     ??___flsub:	
 14861                           ; 1 bytes @ 0xC
 14862                           
 14863  007C                     i1PWM_GP2@duty:	
 14864                           ; 1 bytes @ 0xC
 14865                           
 14866  007C                     i1PWM_GP3_RLED@duty:	
 14867                           ; 1 bytes @ 0xC
 14868                           
 14869                           
 14870                           ; 1 bytes @ 0xC
 14871  007C                     	ds	2
 14872  007E                     ??_I2C1_ISR:	
 14873  007E                     ??_I2C1_StatusCallback:	
 14874                           ; 1 bytes @ 0xE
 14875                           
 14876  007E                     ??_RegisterWrite:	
 14877                           ; 1 bytes @ 0xE
 14878                           
 14879  007E                     ??_INTERRUPT_InterruptManager:	
 14880                           ; 1 bytes @ 0xE
 14881                           
 14882                           
 14883                           	psect	cstackBANK0
 14884  004C                     __pcstackBANK0:	
 14885                           ; 1 bytes @ 0xE
 14886                           
 14887  004C                     ??_Config_GP2:	
 14888  004C                     ??_Config_GP3:	
 14889                           ; 1 bytes @ 0x0
 14890                           
 14891  004C                     ??___fladd:	
 14892                           ; 1 bytes @ 0x0
 14893                           
 14894  004C                     i1PWM_GP1@duty:	
 14895                           ; 1 bytes @ 0x0
 14896                           
 14897                           
 14898                           ; 1 bytes @ 0x0
 14899  004C                     	ds	1
 14900  004D                     ??_Config_GP1:	
 14901                           
 14902                           ; 1 bytes @ 0x1
 14903  004D                     	ds	2
 14904  004F                     ?_RegisterWrite:	
 14905  004F                     RegisterWrite@data:	
 14906                           ; 1 bytes @ 0x3
 14907                           
 14908                           
 14909                           ; 1 bytes @ 0x3
 14910  004F                     	ds	1
 14911  0050                     RegisterWrite@add:	
 14912                           
 14913                           ; 1 bytes @ 0x4
 14914  0050                     	ds	1
 14915  0051                     I2C1_StatusCallback@i2c_bus_state:	
 14916                           
 14917                           ; 1 bytes @ 0x5
 14918  0051                     	ds	1
 14919  0052                     I2C1_ISR@i2c_data:	
 14920                           
 14921                           ; 1 bytes @ 0x6
 14922  0052                     	ds	2
 14923  0054                     ??_CLC_1_Interrupt:	
 14924  0054                     ?___flsub:	
 14925                           ; 1 bytes @ 0x8
 14926                           
 14927  0054                     ___flsub@a:	
 14928                           ; 4 bytes @ 0x8
 14929                           
 14930                           
 14931                           ; 4 bytes @ 0x8
 14932  0054                     	ds	4
 14933  0058                     ___flsub@b:	
 14934                           
 14935                           ; 4 bytes @ 0xC
 14936  0058                     	ds	4
 14937  005C                     ??_CLC_2_Interrupt:	
 14938                           
 14939                           ; 1 bytes @ 0x10
 14940  005C                     	ds	4
 14941                           
 14942                           	psect	swtext1
 14943  10F2                     __pswtext1:	
 14944  10F2                     S8541:	
 14945  10F2  3181  29EC         	ljmp	l7923
 14946  10F4  3182  2A03         	ljmp	l7937
 14947  10F6  3182  2A11         	ljmp	l1328
 14948  10F8  3182  2A20         	ljmp	l1331
 14949                           
 14950                           	psect	swtext2
 14951  1100                     __pswtext2:	
 14952  1100                     S8543:	
 14953  1100  3181  299C         	ljmp	l7875
 14954  1102  3181  29B3         	ljmp	l7889
 14955  1104  3181  29C1         	ljmp	l1312
 14956  1106  3181  29D0         	ljmp	l1315
 14957                           
 14958                           	psect	swtext3
 14959  1108                     __pswtext3:	
 14960  1108                     S8545:	
 14961  1108  3181  2951         	ljmp	l7829
 14962  110A  3181  2968         	ljmp	l7843
 14963  110C  3181  2976         	ljmp	l1297
 14964  110E  3181  2984         	ljmp	l1300
 14965                           
 14966                           	psect	swtext4
 14967  10E4                     __pswtext4:	
 14968  10E4                     S8547:	
 14969  10E4  3180  28BD         	ljmp	l8059
 14970  10E6  3180  28C7         	ljmp	l8065
 14971  10E8  3180  28CF         	ljmp	l8069
 14972  10EA  3180  28D7         	ljmp	l8073
 14973  10EC  3180  28E5         	ljmp	l8083
 14974  10EE  3180  28F5         	ljmp	l8091
 14975  10F0  3181  2902         	ljmp	l8105
 14976                           
 14977                           	psect	intentry
 14978  0004                     __pintentry:	
 14979 ;; *************** function _INTERRUPT_InterruptManager *****************
 14980 ;; Defined at:
 14981 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;		None
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;Total ram usage:        0 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    6
 15002 ;; This function calls:
 15003 ;;		_CLC1_ISR
 15004 ;;		_CLC2_ISR
 15005 ;;		_I2C1_ISR
 15006 ;;		_TMR3_ISR
 15007 ;; This function is called by:
 15008 ;;		Interrupt level 1
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012  0004                     _INTERRUPT_InterruptManager:	
 15013                           
 15014                           ;incstack = 0
 15015  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15016                           
 15017                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15018  0005  3180               	pagesel	$
 15019                           
 15020                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 15021  0006  1F0B               	btfss	11,6	;volatile
 15022  0007  282E               	goto	i1l89
 15023                           
 15024                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 15025  0008  0021               	movlb	1	; select bank1
 15026  0009  1C93               	btfss	19,1	;volatile
 15027  000A  2812               	goto	i1l80
 15028  000B  0020               	movlb	0	; select bank0
 15029  000C  1C93               	btfss	19,1	;volatile
 15030  000D  2812               	goto	i1l80
 15031                           
 15032                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 15033  000E  318D  2515  3180   	fcall	_CLC2_ISR
 15034                           
 15035                           ;interrupt_manager.c: 60: }
 15036  0011  282E               	goto	i1l89
 15037  0012                     i1l80:	
 15038                           
 15039                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 15040  0012  0021               	movlb	1	; select bank1
 15041  0013  1C13               	btfss	19,0	;volatile
 15042  0014  281C               	goto	i1l82
 15043  0015  0020               	movlb	0	; select bank0
 15044  0016  1C13               	btfss	19,0	;volatile
 15045  0017  281C               	goto	i1l82
 15046                           
 15047                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 15048  0018  318D  2519  3180   	fcall	_CLC1_ISR
 15049                           
 15050                           ;interrupt_manager.c: 64: }
 15051  001B  282E               	goto	i1l89
 15052  001C                     i1l82:	
 15053                           
 15054                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 15055  001C  0021               	movlb	1	; select bank1
 15056  001D  1D91               	btfss	17,3	;volatile
 15057  001E  2826               	goto	i1l84
 15058  001F  0020               	movlb	0	; select bank0
 15059  0020  1D91               	btfss	17,3	;volatile
 15060  0021  2826               	goto	i1l84
 15061                           
 15062                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 15063  0022  3192  22F4  3180   	fcall	_I2C1_ISR
 15064                           
 15065                           ;interrupt_manager.c: 68: }
 15066  0025  282E               	goto	i1l89
 15067  0026                     i1l84:	
 15068                           
 15069                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 15070  0026  0021               	movlb	1	; select bank1
 15071  0027  1E13               	btfss	19,4	;volatile
 15072  0028  282E               	goto	i1l89
 15073  0029  0020               	movlb	0	; select bank0
 15074  002A  1E13               	btfss	19,4	;volatile
 15075  002B  282E               	goto	i1l89
 15076                           
 15077                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 15078  002C  3191  21FC         	fcall	_TMR3_ISR
 15079  002E                     i1l89:	
 15080                           ;interrupt_manager.c: 72: }
 15081                           
 15082  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15083  002F  0009               	retfie
 15084  0030                     __end_of_INTERRUPT_InterruptManager:	
 15085                           
 15086                           	psect	text42
 15087  11FC                     __ptext42:	
 15088 ;; *************** function _TMR3_ISR *****************
 15089 ;; Defined at:
 15090 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 15091 ;; Parameters:    Size  Location     Type
 15092 ;;		None
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;		None
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, status,2, status,0, pclath, cstack
 15099 ;; Tracked objects:
 15100 ;;		On entry : 1F/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15108 ;;Total ram usage:        0 bytes
 15109 ;; Hardware stack levels used:    1
 15110 ;; Hardware stack levels required when called:    2
 15111 ;; This function calls:
 15112 ;;		_TMR3_CallBack
 15113 ;;		_TMR3_WriteTimer
 15114 ;; This function is called by:
 15115 ;;		_INTERRUPT_InterruptManager
 15116 ;; This function uses a non-reentrant model
 15117 ;;
 15118                           
 15119                           
 15120                           ;psect for function _TMR3_ISR
 15121  11FC                     _TMR3_ISR:	
 15122                           
 15123                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 15124                           
 15125                           ;incstack = 0
 15126                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 15127  11FC  1213               	bcf	19,4	;volatile
 15128                           
 15129                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 15130  11FD  0021               	movlb	1	; select bank1
 15131  11FE  082D               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 15132  11FF  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 15133  1200  082C               	movf	_timer3ReloadVal^(0+128),w	;volatile
 15134  1201  00F0               	movwf	TMR3_WriteTimer@timerVal
 15135  1202  2210  3191         	fcall	_TMR3_WriteTimer
 15136                           
 15137                           ;tmr3.c: 166: TMR3_CallBack();
 15138  1204  2A05               	ljmp	i1l6395
 15139  1205                     __end_of_TMR3_ISR:	
 15140  1205                     __ptext44:	
 15141 ;; *************** function _TMR3_CallBack *****************
 15142 ;; Defined at:
 15143 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, status,2, status,0, pclath, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 1F/8
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    1
 15164 ;; This function calls:
 15165 ;;		Absolute function
 15166 ;;		_TMR3_DefaultInterruptHandler
 15167 ;;		_TimerInt
 15168 ;; This function is called by:
 15169 ;;		_TMR3_ISR
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           
 15174                           ;psect for function _TMR3_CallBack
 15175  1205                     _TMR3_CallBack:	
 15176  1205                     i1l6395:	
 15177                           ;incstack = 0
 15178                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15179                           
 15180                           
 15181                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 15182  1205  0021               	movlb	1	; select bank1
 15183  1206  082A               	movf	_TMR3_InterruptHandler^(0+128),w
 15184  1207  042B               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 15185  1208  1903               	btfsc	3,2
 15186  1209  0008               	return
 15187                           
 15188                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 15189  120A  082B               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 15190  120B  008A               	movwf	10
 15191  120C  082A               	movf	_TMR3_InterruptHandler^(0+128),w
 15192  120D  000A               	callw
 15193  120E  3191               	pagesel	$
 15194  120F  0008               	return
 15195  1210                     __end_of_TMR3_CallBack:	
 15196  1210                     __ptext43:	
 15197 ;; *************** function _TMR3_WriteTimer *****************
 15198 ;; Defined at:
 15199 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;  timerVal        2    0[COMMON] unsigned int 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg
 15208 ;; Tracked objects:
 15209 ;;		On entry : 1F/1
 15210 ;;		On exit  : 1F/8
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;Total ram usage:        2 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; This function calls:
 15220 ;;		Nothing
 15221 ;; This function is called by:
 15222 ;;		_TMR3_ISR
 15223 ;; This function uses a non-reentrant model
 15224 ;;
 15225                           
 15226                           
 15227                           ;psect for function _TMR3_WriteTimer
 15228  1210                     _TMR3_WriteTimer:	
 15229                           
 15230                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 15231                           
 15232                           ;incstack = 0
 15233                           ; Regs used in _TMR3_WriteTimer: [wreg]
 15234  1210  0028               	movlb	8	; select bank8
 15235  1211  1D13               	btfss	19,2	;volatile
 15236  1212  2A1A               	goto	i1l6393
 15237                           
 15238                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 15239  1213  1013               	bcf	19,0	;volatile
 15240                           
 15241                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 15242  1214  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15243  1215  0092               	movwf	18	;volatile
 15244                           
 15245                           ;tmr3.c: 129: TMR3L = timerVal;
 15246  1216  0870               	movf	TMR3_WriteTimer@timerVal,w
 15247  1217  0091               	movwf	17	;volatile
 15248                           
 15249                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 15250  1218  1413               	bsf	19,0	;volatile
 15251                           
 15252                           ;tmr3.c: 133: }
 15253  1219  0008               	return
 15254  121A                     i1l6393:	
 15255                           
 15256                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 15257  121A  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15258  121B  0092               	movwf	18	;volatile
 15259                           
 15260                           ;tmr3.c: 138: TMR3L = timerVal;
 15261  121C  0870               	movf	TMR3_WriteTimer@timerVal,w
 15262  121D  0091               	movwf	17	;volatile
 15263  121E  0008               	return
 15264  121F                     __end_of_TMR3_WriteTimer:	
 15265                           
 15266                           	psect	text45
 15267  0003                     __ptext45:	
 15268 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 15269 ;; Defined at:
 15270 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;		None
 15273 ;; Auto vars:     Size  Location     Type
 15274 ;;		None
 15275 ;; Return value:  Size  Location     Type
 15276 ;;                  1    wreg      void 
 15277 ;; Registers used:
 15278 ;;		None
 15279 ;; Tracked objects:
 15280 ;;		On entry : 1F/1
 15281 ;;		On exit  : 1F/1
 15282 ;;		Unchanged: 1F/0
 15283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;Total ram usage:        0 bytes
 15289 ;; Hardware stack levels used:    1
 15290 ;; This function calls:
 15291 ;;		Nothing
 15292 ;; This function is called by:
 15293 ;;		_TMR3_Initialize
 15294 ;;		_TMR3_CallBack
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           
 15299                           ;psect for function _TMR3_DefaultInterruptHandler
 15300  0003                     _TMR3_DefaultInterruptHandler:	
 15301                           
 15302                           ;incstack = 0
 15303                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 15304  0003  0008               	return
 15305  0004                     __end_of_TMR3_DefaultInterruptHandler:	
 15306                           
 15307                           	psect	text46
 15308  1136                     __ptext46:	
 15309 ;; *************** function _TimerInt *****************
 15310 ;; Defined at:
 15311 ;;		line 73 in file "main.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;		None
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;		None
 15316 ;; Return value:  Size  Location     Type
 15317 ;;                  1    wreg      void 
 15318 ;; Registers used:
 15319 ;;		None
 15320 ;; Tracked objects:
 15321 ;;		On entry : 1F/1
 15322 ;;		On exit  : 1F/1
 15323 ;;		Unchanged: 0/0
 15324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;Total ram usage:        0 bytes
 15330 ;; Hardware stack levels used:    1
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		_main
 15335 ;;		_TMR3_CallBack
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           
 15340                           ;psect for function _TimerInt
 15341  1136                     _TimerInt:	
 15342                           
 15343                           ;main.c: 74: fsm_tmr = 1;
 15344                           
 15345                           ;incstack = 0
 15346                           ; Regs used in _TimerInt: []
 15347  1136  01C9               	clrf	_fsm_tmr^(0+128)
 15348  1137  0AC9               	incf	_fsm_tmr^(0+128),f
 15349  1138  0008               	return
 15350  1139                     __end_of_TimerInt:	
 15351                           
 15352                           	psect	text47
 15353  12F4                     __ptext47:	
 15354 ;; *************** function _I2C1_ISR *****************
 15355 ;; Defined at:
 15356 ;;		line 121 in file "mcc_generated_files/i2c1.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;		None
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  1    wreg      void 
 15363 ;; Registers used:
 15364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15365 ;; Tracked objects:
 15366 ;;		On entry : 1F/0
 15367 ;;		On exit  : 1F/4
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;Total ram usage:        1 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:    5
 15377 ;; This function calls:
 15378 ;;		_I2C1_StatusCallback
 15379 ;; This function is called by:
 15380 ;;		_INTERRUPT_InterruptManager
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           
 15385                           ;psect for function _I2C1_ISR
 15386  12F4                     _I2C1_ISR:	
 15387                           
 15388                           ;i2c1.c: 129: PIR1bits.SSP1IF = 0;
 15389                           
 15390                           ;incstack = 0
 15391                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15392  12F4  1191               	bcf	17,3	;volatile
 15393                           
 15394                           ;i2c1.c: 130: i2c_data = SSP1BUF;
 15395  12F5  0024               	movlb	4	; select bank4
 15396  12F6  0811               	movf	17,w	;volatile
 15397  12F7  0020               	movlb	0	; select bank0
 15398  12F8  00D2               	movwf	I2C1_ISR@i2c_data
 15399                           
 15400                           ;i2c1.c: 131: if(1 == SSP1STATbits.R_nW)
 15401  12F9  0024               	movlb	4	; select bank4
 15402  12FA  1D14               	btfss	20,2	;volatile
 15403  12FB  2B03               	goto	i1l165
 15404                           
 15405                           ;i2c1.c: 132: {;i2c1.c: 133: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
 15406  12FC  1A94               	btfsc	20,5	;volatile
 15407  12FD  1F16               	btfss	22,6	;volatile
 15408  12FE  2B01               	goto	i1l6819
 15409                           
 15410                           ;i2c1.c: 134: {;i2c1.c: 136: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 15411  12FF  3003               	movlw	3
 15412  1300  2B0C               	goto	L8
 15413  1301                     i1l6819:	
 15414                           ;i2c1.c: 137: }
 15415                           
 15416                           
 15417                           ;i2c1.c: 138: else;i2c1.c: 139: {;i2c1.c: 141: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUE
      +                          ST);
 15418  1301  3001               	movlw	1
 15419  1302  2B0C               	goto	L8
 15420  1303                     i1l165:	
 15421                           
 15422                           ;i2c1.c: 144: else if(0 == SSP1STATbits.D_nA)
 15423  1303  1A94               	btfsc	20,5	;volatile
 15424  1304  2B07               	goto	i1l6823
 15425                           
 15426                           ;i2c1.c: 145: {;i2c1.c: 149: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 15427  1305  3000               	movlw	0
 15428  1306  2B0C               	goto	L8
 15429  1307                     i1l6823:	
 15430                           ;i2c1.c: 150: }
 15431                           
 15432                           
 15433                           ;i2c1.c: 151: else;i2c1.c: 152: {;i2c1.c: 153: I2C1_slaveWriteData = i2c_data;
 15434  1307  0020               	movlb	0	; select bank0
 15435  1308  0852               	movf	I2C1_ISR@i2c_data,w
 15436  1309  0021               	movlb	1	; select bank1
 15437  130A  00DA               	movwf	_I2C1_slaveWriteData^(0+128)	;volatile
 15438                           
 15439                           ;i2c1.c: 156: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 15440  130B  3002               	movlw	2
 15441  130C                     L8:	
 15442  130C  2310               	fcall	_I2C1_StatusCallback
 15443                           
 15444                           ;i2c1.c: 157: };i2c1.c: 159: SSP1CON1bits.CKP = 1;
 15445  130D  0024               	movlb	4	; select bank4
 15446  130E  1615               	bsf	21,4	;volatile
 15447  130F  0008               	return
 15448  1310                     __end_of_I2C1_ISR:	
 15449  1310                     __ptext48:	
 15450 ;; *************** function _I2C1_StatusCallback *****************
 15451 ;; Defined at:
 15452 ;;		line 56 in file "i2c_register.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  i2c_bus_stat    1    wreg     enum E75
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  i2c_bus_stat    1    5[BANK0 ] enum E75
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 1A/4
 15463 ;;		On exit  : 1E/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;Total ram usage:        1 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    4
 15473 ;; This function calls:
 15474 ;;		_RegisterRead
 15475 ;;		_RegisterWrite
 15476 ;; This function is called by:
 15477 ;;		_I2C1_ISR
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           
 15482                           ;psect for function _I2C1_StatusCallback
 15483  1310                     _I2C1_StatusCallback:	
 15484                           
 15485                           ;incstack = 0
 15486                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15487                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 15488  1310  0020               	movlb	0	; select bank0
 15489  1311  00D1               	movwf	I2C1_StatusCallback@i2c_bus_state
 15490                           
 15491                           ;i2c_register.c: 57: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          59: switch (i2c_bus_state) {
 15492  1312  2B38               	goto	i1l6341
 15493  1313                     i1l819:	
 15494                           ;i2c_register.c: 60: case I2C1_SLAVE_WRITE_REQUEST:
 15495                           
 15496                           
 15497                           ;i2c_register.c: 62: slaveWriteType = SLAVE_DATA_ADDRESS;
 15498  1313  0021               	movlb	1	; select bank1
 15499  1314  01B8               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 15500  1315  0AB8               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 15501                           
 15502                           ;i2c_register.c: 63: break;
 15503  1316  0008               	return
 15504  1317                     i1l6323:	
 15505                           
 15506                           ;i2c_register.c: 70: EncoderReg = I2C1_slaveWriteData;
 15507  1317  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 15508  1318  00BB               	movwf	_EncoderReg^(0+128)	;volatile
 15509                           
 15510                           ;i2c_register.c: 71: break;
 15511  1319  2B2E               	goto	i1l6333
 15512  131A                     i1l6325:	
 15513                           
 15514                           ;i2c_register.c: 75: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 15515  131A  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 15516  131B  0020               	movlb	0	; select bank0
 15517  131C  00CF               	movwf	RegisterWrite@data
 15518  131D  0021               	movlb	1	; select bank1
 15519  131E  083B               	movf	_EncoderReg^(0+128),w	;volatile
 15520  131F  3194  2497  3192   	fcall	_RegisterWrite
 15521                           
 15522                           ;i2c_register.c: 76: EncoderReg++;
 15523  1322  0021               	movlb	1	; select bank1
 15524  1323  0ABB               	incf	_EncoderReg^(0+128),f	;volatile
 15525                           
 15526                           ;i2c_register.c: 77: break;
 15527  1324  2B2E               	goto	i1l6333
 15528  1325                     i1l6331:	
 15529  1325  0021               	movlb	1	; select bank1
 15530  1326  0838               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 15531                           
 15532                           ; Switch size 1, requested type "speed"
 15533                           ; Number of cases is 2, Range of values is 0 to 1
 15534                           ; switch strategies available:
 15535                           ; Name         Instructions Cycles
 15536                           ; simple_byte            7     4 (average)
 15537                           ; direct_byte           10     6 (fixed)
 15538                           ; jumptable            260     6 (fixed)
 15539                           ;	Chosen strategy is simple_byte
 15540  1327  3A00               	xorlw	0	; case 0
 15541  1328  1903               	skipnz
 15542  1329  2B1A               	goto	i1l6325
 15543  132A  3A01               	xorlw	1	; case 1
 15544  132B  1903               	skipnz
 15545  132C  2B17               	goto	i1l6323
 15546  132D  2B1A               	goto	i1l6325
 15547  132E                     i1l6333:	
 15548                           
 15549                           ;i2c_register.c: 81: slaveWriteType = SLAVE_NORMAL_DATA;
 15550  132E  01B8               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 15551                           
 15552                           ;i2c_register.c: 82: break;
 15553  132F  0008               	return
 15554  1330                     i1l6335:	
 15555                           
 15556                           ;i2c_register.c: 85: SSP1BUF = RegisterRead(EncoderReg);
 15557  1330  0021               	movlb	1	; select bank1
 15558  1331  083B               	movf	_EncoderReg^(0+128),w	;volatile
 15559  1332  2343               	fcall	_RegisterRead
 15560  1333  0024               	movlb	4	; select bank4
 15561  1334  0091               	movwf	17	;volatile
 15562                           
 15563                           ;i2c_register.c: 86: EncoderReg++;
 15564  1335  0021               	movlb	1	; select bank1
 15565  1336  0ABB               	incf	_EncoderReg^(0+128),f	;volatile
 15566                           
 15567                           ;i2c_register.c: 87: break;
 15568  1337  0008               	return
 15569  1338                     i1l6341:	
 15570  1338  0851               	movf	I2C1_StatusCallback@i2c_bus_state,w
 15571                           
 15572                           ; Switch size 1, requested type "speed"
 15573                           ; Number of cases is 4, Range of values is 0 to 3
 15574                           ; switch strategies available:
 15575                           ; Name         Instructions Cycles
 15576                           ; direct_byte           14     6 (fixed)
 15577                           ; simple_byte           13     7 (average)
 15578                           ; jumptable            260     6 (fixed)
 15579                           ;	Chosen strategy is direct_byte
 15580  1339  0084               	movwf	4
 15581  133A  3004               	movlw	4
 15582  133B  0204               	subwf	4,w
 15583  133C  1803               	skipnc
 15584  133D  0008               	return
 15585  133E  3191               	movlp	high i1S8549
 15586  133F  3504               	lslf	4,w
 15587  1340  3E10               	addlw	low i1S8549
 15588  1341  0082               	movwf	2
 15589  1342                     i1l830:	
 15590  1342  0008               	return
 15591  1343                     __end_of_I2C1_StatusCallback:	
 15592  1343                     __ptext74:	
 15593 ;; *************** function _RegisterRead *****************
 15594 ;; Defined at:
 15595 ;;		line 303 in file "i2c_register.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;  add             1    wreg     unsigned char 
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;  add             1    1[COMMON] unsigned char 
 15600 ;;  return_value    1    2[COMMON] unsigned char 
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  1    wreg      unsigned char 
 15603 ;; Registers used:
 15604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15605 ;; Tracked objects:
 15606 ;;		On entry : 1F/1
 15607 ;;		On exit  : C/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15614 ;;Total ram usage:        2 bytes
 15615 ;; Hardware stack levels used:    1
 15616 ;; Hardware stack levels required when called:    1
 15617 ;; This function calls:
 15618 ;;		_eeprom_read
 15619 ;; This function is called by:
 15620 ;;		_I2C1_StatusCallback
 15621 ;; This function uses a non-reentrant model
 15622 ;;
 15623                           
 15624                           
 15625                           ;psect for function _RegisterRead
 15626  1343                     _RegisterRead:	
 15627                           
 15628                           ;incstack = 0
 15629                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15630                           ;RegisterRead@add stored from wreg
 15631  1343  00F1               	movwf	RegisterRead@add
 15632                           
 15633                           ;i2c_register.c: 306: switch (add) {
 15634  1344  2BDF               	goto	i1l5845
 15635  1345                     i1l5725:	
 15636                           
 15637                           ;i2c_register.c: 308: return_value = GCONF;
 15638  1345  0020               	movlb	0	; select bank0
 15639  1346  0848               	movf	_GCONF,w	;volatile
 15640  1347  2BDD               	goto	L46
 15641  1348                     i1l5727:	
 15642                           ;i2c_register.c: 309: break;
 15643                           
 15644                           
 15645                           ;i2c_register.c: 312: return_value = GP1CONF;
 15646  1348  0020               	movlb	0	; select bank0
 15647  1349  0847               	movf	_GP1CONF,w	;volatile
 15648  134A  2BDD               	goto	L46
 15649  134B                     i1l5729:	
 15650                           ;i2c_register.c: 313: break;
 15651                           
 15652                           
 15653                           ;i2c_register.c: 316: return_value = GP2CONF;
 15654  134B  0020               	movlb	0	; select bank0
 15655  134C  0846               	movf	_GP2CONF,w	;volatile
 15656  134D  2BDD               	goto	L46
 15657  134E                     i1l5731:	
 15658                           ;i2c_register.c: 317: break;
 15659                           
 15660                           
 15661                           ;i2c_register.c: 320: if (C_ETYPE == 0) {
 15662  134E  0020               	movlb	0	; select bank0
 15663  134F  0838               	movf	_C_ETYPE,w	;volatile
 15664  1350  1D03               	btfss	3,2
 15665  1351  2B54               	goto	i1l5735
 15666                           
 15667                           ;i2c_register.c: 321: return_value = GP3CONF;
 15668  1352  0845               	movf	_GP3CONF,w	;volatile
 15669  1353  2BDD               	goto	L46
 15670  1354                     i1l5735:	
 15671                           ;i2c_register.c: 322: } else {
 15672                           
 15673                           
 15674                           ;i2c_register.c: 323: return_value = 0;
 15675  1354  01F2               	clrf	RegisterRead@return_value
 15676  1355  2BE9               	goto	i1l5847
 15677  1356                     i1l5737:	
 15678                           
 15679                           ;i2c_register.c: 328: return_value = INTCONF;
 15680  1356  0020               	movlb	0	; select bank0
 15681  1357  0849               	movf	_INTCONF,w	;volatile
 15682  1358  2BDD               	goto	L46
 15683  1359                     i1l5739:	
 15684                           ;i2c_register.c: 329: break;
 15685                           
 15686                           
 15687                           ;i2c_register.c: 332: return_value = ESTATUS;
 15688  1359  0020               	movlb	0	; select bank0
 15689  135A  084A               	movf	_ESTATUS,w	;volatile
 15690  135B  00F2               	movwf	RegisterRead@return_value
 15691                           
 15692                           ;i2c_register.c: 333: ESTATUS = 0;
 15693  135C  01CA               	clrf	_ESTATUS	;volatile
 15694  135D  0022               	movlb	2	; select bank2
 15695  135E  168D               	bsf	13,5	;volatile
 15696  135F  2BE9               	goto	i1l5847
 15697  1360                     i1l5745:	
 15698                           
 15699                           ;i2c_register.c: 338: return_value = I2STATUS;
 15700  1360  0848               	movf	_I2STATUS^(0+128),w	;volatile
 15701  1361  00F2               	movwf	RegisterRead@return_value
 15702                           
 15703                           ;i2c_register.c: 339: I2STATUS = 0;
 15704  1362  01C8               	clrf	_I2STATUS^(0+128)	;volatile
 15705                           
 15706                           ;i2c_register.c: 340: break;
 15707  1363  2BE9               	goto	i1l5847
 15708  1364                     i1l5749:	
 15709                           
 15710                           ;i2c_register.c: 343: return_value = FSTATUS;
 15711  1364  0847               	movf	_FSTATUS^(0+128),w	;volatile
 15712  1365  2BDD               	goto	L46
 15713  1366                     i1l5751:	
 15714                           ;i2c_register.c: 344: break;
 15715                           
 15716                           
 15717                           ;i2c_register.c: 348: return_value = CVAL.bval[3];
 15718  1366  0020               	movlb	0	; select bank0
 15719  1367  082F               	movf	_CVAL+3,w	;volatile
 15720  1368  00F2               	movwf	RegisterRead@return_value
 15721                           
 15722                           ;i2c_register.c: 349: if (S_RELATIVE == 1)
 15723  1369  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15724  136A  2BE9               	goto	i1l5847
 15725  136B  2B85               	goto	L17
 15726  136C                     i1l5757:	
 15727                           ;i2c_register.c: 350: CVAL.bval[3] = 0;
 15728                           
 15729                           
 15730                           ;i2c_register.c: 353: return_value = CVAL.bval[2];
 15731  136C  0020               	movlb	0	; select bank0
 15732  136D  082E               	movf	_CVAL+2,w	;volatile
 15733  136E  00F2               	movwf	RegisterRead@return_value
 15734                           
 15735                           ;i2c_register.c: 354: if (S_RELATIVE == 1){
 15736  136F  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15737  1370  2BE9               	goto	i1l5847
 15738                           
 15739                           ;i2c_register.c: 355: CVAL.bval[3] = 0;
 15740  1371  01AF               	clrf	_CVAL+3	;volatile
 15741                           
 15742                           ;i2c_register.c: 356: CVAL.bval[2] = 0;
 15743  1372  01AE               	clrf	_CVAL+2	;volatile
 15744  1373  2BE9               	goto	i1l5847
 15745  1374                     i1l5763:	
 15746                           
 15747                           ;i2c_register.c: 360: return_value = CVAL.bval[1];
 15748  1374  0020               	movlb	0	; select bank0
 15749  1375  082D               	movf	_CVAL+1,w	;volatile
 15750  1376  00F2               	movwf	RegisterRead@return_value
 15751                           
 15752                           ;i2c_register.c: 361: if (S_RELATIVE == 1){
 15753  1377  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15754  1378  2BE9               	goto	i1l5847
 15755                           
 15756                           ;i2c_register.c: 362: CVAL.bval[3] = 0;
 15757  1379  01AF               	clrf	_CVAL+3	;volatile
 15758                           
 15759                           ;i2c_register.c: 363: CVAL.bval[2] = 0;
 15760  137A  01AE               	clrf	_CVAL+2	;volatile
 15761                           
 15762                           ;i2c_register.c: 364: CVAL.bval[1] = 0;
 15763  137B  01AD               	clrf	_CVAL+1	;volatile
 15764  137C  2BE9               	goto	i1l5847
 15765  137D                     i1l5769:	
 15766                           
 15767                           ;i2c_register.c: 368: return_value = CVAL.bval[0];
 15768  137D  0020               	movlb	0	; select bank0
 15769  137E  082C               	movf	_CVAL,w	;volatile
 15770  137F  00F2               	movwf	RegisterRead@return_value
 15771                           
 15772                           ;i2c_register.c: 369: if (S_RELATIVE == 1)
 15773  1380  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15774  1381  2BE9               	goto	i1l5847
 15775                           
 15776                           ;i2c_register.c: 370: CVAL.val = 0;
 15777  1382  01AC               	clrf	_CVAL	;volatile
 15778  1383  01AD               	clrf	_CVAL+1	;volatile
 15779  1384  01AE               	clrf	_CVAL+2	;volatile
 15780  1385                     L17:	
 15781  1385  01AF               	clrf	_CVAL+3	;volatile
 15782  1386  2BE9               	goto	i1l5847
 15783  1387                     i1l5775:	
 15784                           
 15785                           ;i2c_register.c: 375: return_value = CMAX.bval[3];
 15786  1387  0020               	movlb	0	; select bank0
 15787  1388  082B               	movf	_CMAX+3,w	;volatile
 15788  1389  2BDD               	goto	L46
 15789  138A                     i1l5777:	
 15790                           ;i2c_register.c: 376: break;
 15791                           
 15792                           
 15793                           ;i2c_register.c: 378: return_value = CMAX.bval[2];
 15794  138A  0020               	movlb	0	; select bank0
 15795  138B  082A               	movf	_CMAX+2,w	;volatile
 15796  138C  2BDD               	goto	L46
 15797  138D                     i1l5779:	
 15798                           ;i2c_register.c: 379: break;
 15799                           
 15800                           
 15801                           ;i2c_register.c: 381: return_value = CMAX.bval[1];
 15802  138D  0020               	movlb	0	; select bank0
 15803  138E  0829               	movf	_CMAX+1,w	;volatile
 15804  138F  2BDD               	goto	L46
 15805  1390                     i1l5781:	
 15806                           ;i2c_register.c: 382: break;
 15807                           
 15808                           
 15809                           ;i2c_register.c: 384: return_value = CMAX.bval[0];
 15810  1390  0020               	movlb	0	; select bank0
 15811  1391  0828               	movf	_CMAX,w	;volatile
 15812  1392  2BDD               	goto	L46
 15813  1393                     i1l5783:	
 15814                           ;i2c_register.c: 385: break;
 15815                           
 15816                           
 15817                           ;i2c_register.c: 389: return_value = CMIN.bval[3];
 15818  1393  0020               	movlb	0	; select bank0
 15819  1394  0827               	movf	_CMIN+3,w	;volatile
 15820  1395  2BDD               	goto	L46
 15821  1396                     i1l5785:	
 15822                           ;i2c_register.c: 390: break;
 15823                           
 15824                           
 15825                           ;i2c_register.c: 392: return_value = CMIN.bval[2];
 15826  1396  0020               	movlb	0	; select bank0
 15827  1397  0826               	movf	_CMIN+2,w	;volatile
 15828  1398  2BDD               	goto	L46
 15829  1399                     i1l5787:	
 15830                           ;i2c_register.c: 393: break;
 15831                           
 15832                           
 15833                           ;i2c_register.c: 395: return_value = CMIN.bval[1];
 15834  1399  0020               	movlb	0	; select bank0
 15835  139A  0825               	movf	_CMIN+1,w	;volatile
 15836  139B  2BDD               	goto	L46
 15837  139C                     i1l5789:	
 15838                           ;i2c_register.c: 396: break;
 15839                           
 15840                           
 15841                           ;i2c_register.c: 398: return_value = CMIN.bval[0];
 15842  139C  0020               	movlb	0	; select bank0
 15843  139D  0824               	movf	_CMIN,w	;volatile
 15844  139E  2BDD               	goto	L46
 15845  139F                     i1l5791:	
 15846                           ;i2c_register.c: 399: break;
 15847                           
 15848                           
 15849                           ;i2c_register.c: 403: return_value = ISTEP.bval[3];
 15850  139F  0020               	movlb	0	; select bank0
 15851  13A0  0823               	movf	_ISTEP+3,w	;volatile
 15852  13A1  2BDD               	goto	L46
 15853  13A2                     i1l5793:	
 15854                           ;i2c_register.c: 404: break;
 15855                           
 15856                           
 15857                           ;i2c_register.c: 406: return_value = ISTEP.bval[2];
 15858  13A2  0020               	movlb	0	; select bank0
 15859  13A3  0822               	movf	_ISTEP+2,w	;volatile
 15860  13A4  2BDD               	goto	L46
 15861  13A5                     i1l5795:	
 15862                           ;i2c_register.c: 407: break;
 15863                           
 15864                           
 15865                           ;i2c_register.c: 409: return_value = ISTEP.bval[1];
 15866  13A5  0020               	movlb	0	; select bank0
 15867  13A6  0821               	movf	_ISTEP+1,w	;volatile
 15868  13A7  2BDD               	goto	L46
 15869  13A8                     i1l5797:	
 15870                           ;i2c_register.c: 410: break;
 15871                           
 15872                           
 15873                           ;i2c_register.c: 412: return_value = ISTEP.bval[0];
 15874  13A8  0020               	movlb	0	; select bank0
 15875  13A9  0820               	movf	_ISTEP,w	;volatile
 15876  13AA  2BDD               	goto	L46
 15877  13AB                     i1l5799:	
 15878                           ;i2c_register.c: 413: break;
 15879                           
 15880                           
 15881                           ;i2c_register.c: 417: return_value = RLED;
 15882  13AB  0020               	movlb	0	; select bank0
 15883  13AC  0844               	movf	_RLED,w	;volatile
 15884  13AD  2BDD               	goto	L46
 15885  13AE                     i1l5801:	
 15886                           ;i2c_register.c: 418: break;
 15887                           
 15888                           
 15889                           ;i2c_register.c: 421: return_value = GLED;
 15890  13AE  0020               	movlb	0	; select bank0
 15891  13AF  0843               	movf	_GLED,w	;volatile
 15892  13B0  2BDD               	goto	L46
 15893  13B1                     i1l5803:	
 15894                           ;i2c_register.c: 422: break;
 15895                           
 15896                           
 15897                           ;i2c_register.c: 425: return_value = BLED;
 15898  13B1  0020               	movlb	0	; select bank0
 15899  13B2  0842               	movf	_BLED,w	;volatile
 15900  13B3  2BDD               	goto	L46
 15901  13B4                     i1l5805:	
 15902                           ;i2c_register.c: 426: break;
 15903                           
 15904                           
 15905                           ;i2c_register.c: 429: return_value = GP1REG;
 15906  13B4  0020               	movlb	0	; select bank0
 15907  13B5  0841               	movf	_GP1REG,w	;volatile
 15908  13B6  2BDD               	goto	L46
 15909  13B7                     i1l5807:	
 15910                           ;i2c_register.c: 430: break;
 15911                           
 15912                           
 15913                           ;i2c_register.c: 433: return_value = GP2REG;
 15914  13B7  0020               	movlb	0	; select bank0
 15915  13B8  0840               	movf	_GP2REG,w	;volatile
 15916  13B9  2BDD               	goto	L46
 15917  13BA                     i1l5809:	
 15918                           ;i2c_register.c: 434: break;
 15919                           
 15920                           
 15921                           ;i2c_register.c: 437: if (C_ETYPE == 0) {
 15922  13BA  0020               	movlb	0	; select bank0
 15923  13BB  0838               	movf	_C_ETYPE,w	;volatile
 15924  13BC  1D03               	btfss	3,2
 15925  13BD  2B54               	goto	i1l5735
 15926                           
 15927                           ;i2c_register.c: 438: return_value = GP3REG;
 15928  13BE  083F               	movf	_GP3REG,w	;volatile
 15929  13BF  2BDD               	goto	L46
 15930  13C0                     i1l5815:	
 15931                           ;i2c_register.c: 439: } else {
 15932                           
 15933                           
 15934                           ;i2c_register.c: 445: return_value = ANTBOUNC;
 15935  13C0  0846               	movf	_ANTBOUNC^(0+128),w	;volatile
 15936  13C1  2BDD               	goto	L46
 15937  13C2                     i1l5817:	
 15938                           ;i2c_register.c: 446: break;
 15939                           
 15940                           
 15941                           ;i2c_register.c: 449: return_value = DPPERIOD;
 15942  13C2  0845               	movf	_DPPERIOD^(0+128),w	;volatile
 15943  13C3  2BDD               	goto	L46
 15944  13C4                     i1l5819:	
 15945                           ;i2c_register.c: 450: break;
 15946                           
 15947                           
 15948                           ;i2c_register.c: 453: return_value = FADERGB;
 15949  13C4  0844               	movf	_FADERGB^(0+128),w	;volatile
 15950  13C5  2BDD               	goto	L46
 15951  13C6                     i1l5821:	
 15952                           ;i2c_register.c: 454: break;
 15953                           
 15954                           
 15955                           ;i2c_register.c: 457: return_value = FADEGP;
 15956  13C6  0020               	movlb	0	; select bank0
 15957  13C7  083E               	movf	_FADEGP,w	;volatile
 15958  13C8  2BDD               	goto	L46
 15959  13C9                     i1l5823:	
 15960                           ;i2c_register.c: 458: break;
 15961                           
 15962                           
 15963                           ;i2c_register.c: 462: return_value = GAMMAGP3_RLED;
 15964  13C9  0020               	movlb	0	; select bank0
 15965  13CA  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 15966  13CB  2BDD               	goto	L46
 15967  13CC                     i1l5825:	
 15968                           ;i2c_register.c: 463: break;
 15969                           
 15970                           
 15971                           ;i2c_register.c: 466: return_value = GAMMAGLED;
 15972  13CC  0020               	movlb	0	; select bank0
 15973  13CD  083A               	movf	_GAMMAGLED,w	;volatile
 15974  13CE  2BDD               	goto	L46
 15975  13CF                     i1l5827:	
 15976                           ;i2c_register.c: 467: break;
 15977                           
 15978                           
 15979                           ;i2c_register.c: 470: return_value = GAMMABLED;
 15980  13CF  0020               	movlb	0	; select bank0
 15981  13D0  0839               	movf	_GAMMABLED,w	;volatile
 15982  13D1  2BDD               	goto	L46
 15983  13D2                     i1l5829:	
 15984                           ;i2c_register.c: 471: break;
 15985                           
 15986                           
 15987                           ;i2c_register.c: 474: return_value = GAMMAGP1;
 15988  13D2  0020               	movlb	0	; select bank0
 15989  13D3  083D               	movf	_GAMMAGP1,w	;volatile
 15990  13D4  2BDD               	goto	L46
 15991  13D5                     i1l5831:	
 15992                           ;i2c_register.c: 475: break;
 15993                           
 15994                           
 15995                           ;i2c_register.c: 478: return_value = GAMMAGP2;
 15996  13D5  0020               	movlb	0	; select bank0
 15997  13D6  083C               	movf	_GAMMAGP2,w	;volatile
 15998  13D7  2BDD               	goto	L46
 15999  13D8                     i1l5835:	
 16000                           ;i2c_register.c: 479: break;
 16001                           
 16002                           
 16003                           ;i2c_register.c: 486: return_value = GCONF2;
 16004  13D8  0843               	movf	_GCONF2^(0+128),w	;volatile
 16005  13D9  2BDD               	goto	L46
 16006  13DA                     i1l5837:	
 16007                           ;i2c_register.c: 487: break;
 16008                           
 16009                           
 16010                           ;i2c_register.c: 490: return_value = 0x53;;
 16011  13DA  3053               	movlw	83
 16012  13DB  2BDD               	goto	L46
 16013  13DC                     i1l5839:	
 16014                           ;i2c_register.c: 491: break;
 16015                           
 16016                           
 16017                           ;i2c_register.c: 494: return_value = 0x21;
 16018  13DC  3021               	movlw	33
 16019  13DD                     L46:	
 16020  13DD  00F2               	movwf	RegisterRead@return_value
 16021                           
 16022                           ;i2c_register.c: 495: break;
 16023  13DE  2BE9               	goto	i1l5847
 16024  13DF                     i1l5845:	
 16025  13DF  0871               	movf	RegisterRead@add,w
 16026                           
 16027                           ; Switch size 1, requested type "speed"
 16028                           ; Number of cases is 43, Range of values is 0 to 113
 16029                           ; switch strategies available:
 16030                           ; Name         Instructions Cycles
 16031                           ; direct_byte          234     6 (fixed)
 16032                           ; simple_byte          130    66 (average)
 16033                           ; jumptable            260     6 (fixed)
 16034                           ;	Chosen strategy is direct_byte
 16035  13E0  0084               	movwf	4
 16036  13E1  3072               	movlw	114
 16037  13E2  0204               	subwf	4,w
 16038  13E3  1803               	skipnc
 16039  13E4  2B54               	goto	i1l5735
 16040  13E5  3190               	movlp	high i1S8571
 16041  13E6  3504               	lslf	4,w
 16042  13E7  3E00               	addlw	low i1S8571
 16043  13E8  0082               	movwf	2
 16044  13E9                     i1l5847:	
 16045                           
 16046                           ;i2c_register.c: 502: if (add >= REG_EEPROMS) {
 16047  13E9  3080               	movlw	128
 16048  13EA  0271               	subwf	RegisterRead@add,w
 16049  13EB  1C03               	skipc
 16050  13EC  2BF7               	goto	i1l5855
 16051                           
 16052                           ;i2c_register.c: 503: if (C_MBANK == 0) {
 16053  13ED  0021               	movlb	1	; select bank1
 16054  13EE  0841               	movf	_C_MBANK^(0+128),w	;volatile
 16055  13EF  1D03               	btfss	3,2
 16056  13F0  2BF4               	goto	i1l5853
 16057                           
 16058                           ;i2c_register.c: 504: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 16059  13F1  0871               	movf	RegisterRead@add,w
 16060  13F2  3E80               	addlw	128
 16061  13F3  2BF5               	goto	L47
 16062  13F4                     i1l5853:	
 16063                           ;i2c_register.c: 505: } else {
 16064                           
 16065                           
 16066                           ;i2c_register.c: 506: return_value = eeprom_read(add);
 16067  13F4  0871               	movf	RegisterRead@add,w
 16068  13F5                     L47:	
 16069  13F5  23F9               	fcall	_eeprom_read
 16070  13F6  00F2               	movwf	RegisterRead@return_value
 16071  13F7                     i1l5855:	
 16072                           
 16073                           ;i2c_register.c: 507: };i2c_register.c: 508: };i2c_register.c: 509: return return_value;
 16074  13F7  0872               	movf	RegisterRead@return_value,w
 16075  13F8  0008               	return
 16076  13F9                     __end_of_RegisterRead:	
 16077  13F9                     __ptext75:	
 16078 ;; *************** function _eeprom_read *****************
 16079 ;; Defined at:
 16080 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;  addr            1    wreg     unsigned char 
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;  addr            1    0[COMMON] unsigned char 
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      unsigned char 
 16087 ;; Registers used:
 16088 ;;		wreg
 16089 ;; Tracked objects:
 16090 ;;		On entry : 1F/1
 16091 ;;		On exit  : 1F/11
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;Total ram usage:        1 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		_RegisterRead
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           
 16108                           ;psect for function _eeprom_read
 16109  13F9                     _eeprom_read:	
 16110                           
 16111                           ;incstack = 0
 16112                           ; Regs used in _eeprom_read: [wreg]
 16113                           ;eeprom_read@addr stored from wreg
 16114  13F9  00F0               	movwf	eeprom_read@addr
 16115  13FA  2BFC               	goto	i1l1750
 16116  13FB                     u271_21:	
 16117  13FB  0021               	movlb	1	; select bank1
 16118  13FC                     i1l1750:	
 16119                           ;__eeread.c: 8: do
 16120                           
 16121  13FC  0064               	clrwdt	;# 
 16122                           
 16123                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 16124  13FD  0031               	movlb	17	; select bank17
 16125  13FE  1895               	btfsc	21,1	;volsfr
 16126  13FF  2BFB               	goto	u271_21
 16127                           
 16128                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 16129  1400  1715               	bsf	21,6	;volsfr
 16130  1401  0870               	movf	eeprom_read@addr,w
 16131  1402  0091               	movwf	17	;volatile
 16132  1403  3070               	movlw	112
 16133  1404  0092               	movwf	18	;volatile
 16134  1405  1415               	bsf	21,0	;volsfr
 16135  1406  0813               	movf	19,w	;volatile
 16136  1407  0008               	return
 16137  1408                     __end_of_eeprom_read:	
 16138                           
 16139                           	psect	swtext5
 16140  1110                     __pswtext5:	
 16141  1110                     i1S8549:	
 16142  1110  3193  2B13         	ljmp	i1l819
 16143  1112  3193  2B30         	ljmp	i1l6335
 16144  1114  3193  2B25         	ljmp	i1l6331
 16145  1116  3193  2B42         	ljmp	i1l830
 16146                           
 16147                           	psect	swtext6
 16148  0C57                     __pswtext6:	
 16149  0C57                     i1S8551:	
 16150  0C57  3194  2C9A         	ljmp	i1l5589
 16151  0C59  3194  2CA3         	ljmp	i1l5595
 16152  0C5B  3194  2CA8         	ljmp	i1l5599
 16153  0C5D  3194  2CAD         	ljmp	i1l5603
 16154  0C5F  3194  2CB5         	ljmp	i1l5609
 16155  0C61  3195  2D6E         	ljmp	i1l5709
 16156  0C63  3195  2D6E         	ljmp	i1l5709
 16157  0C65  3195  2D6E         	ljmp	i1l5709
 16158  0C67  3194  2CB8         	ljmp	i1l5611
 16159  0C69  3194  2CBB         	ljmp	i1l5613
 16160  0C6B  3194  2CBE         	ljmp	i1l5615
 16161  0C6D  3194  2CC1         	ljmp	i1l5617
 16162  0C6F  3194  2CC4         	ljmp	i1l5619
 16163  0C71  3194  2CC7         	ljmp	i1l5621
 16164  0C73  3194  2CCA         	ljmp	i1l5623
 16165  0C75  3194  2CCD         	ljmp	i1l5625
 16166  0C77  3194  2CD0         	ljmp	i1l5627
 16167  0C79  3194  2CD3         	ljmp	i1l5629
 16168  0C7B  3194  2CD6         	ljmp	i1l5631
 16169  0C7D  3194  2CD9         	ljmp	i1l5633
 16170  0C7F  3194  2CDC         	ljmp	i1l5635
 16171  0C81  3194  2CDF         	ljmp	i1l5637
 16172  0C83  3194  2CE2         	ljmp	i1l5639
 16173  0C85  3194  2CE5         	ljmp	i1l5641
 16174  0C87  3194  2CE8         	ljmp	i1l5643
 16175  0C89  3194  2CEB         	ljmp	i1l5645
 16176  0C8B  3194  2CEE         	ljmp	i1l5647
 16177  0C8D  3194  2CF1         	ljmp	i1l5649
 16178  0C8F  3194  2CF6         	ljmp	i1l5653
 16179  0C91  3194  2CFC         	ljmp	i1l5657
 16180  0C93  3195  2D05         	ljmp	i1l5663
 16181  0C95  3195  2D16         	ljmp	i1l5667
 16182  0C97  3195  2D27         	ljmp	i1l5671
 16183  0C99  3195  2D2B         	ljmp	i1l5673
 16184  0C9B  3195  2D6E         	ljmp	i1l5709
 16185  0C9D  3195  2D6E         	ljmp	i1l5709
 16186  0C9F  3195  2D6E         	ljmp	i1l5709
 16187  0CA1  3195  2D6E         	ljmp	i1l5709
 16188  0CA3  3195  2D6E         	ljmp	i1l5709
 16189  0CA5  3195  2D2E         	ljmp	i1l5675
 16190  0CA7  3195  2D37         	ljmp	i1l5679
 16191  0CA9  3195  2D40         	ljmp	i1l5683
 16192  0CAB  3195  2D49         	ljmp	i1l5687
 16193  0CAD  3195  2D52         	ljmp	i1l5691
 16194  0CAF  3195  2D5B         	ljmp	i1l5695
 16195  0CB1  3195  2D6E         	ljmp	i1l5709
 16196  0CB3  3195  2D6E         	ljmp	i1l5709
 16197  0CB5  3195  2D6E         	ljmp	i1l5709
 16198  0CB7  3195  2D5C         	ljmp	i1l5699
 16199                           
 16200                           	psect	text50
 16201  11E0                     __ptext50:	
 16202 ;; *************** function _eeprom_write *****************
 16203 ;; Defined at:
 16204 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c"
 16205 ;; Parameters:    Size  Location     Type
 16206 ;;  addr            1    wreg     unsigned char 
 16207 ;;  value           1    0[COMMON] unsigned char 
 16208 ;; Auto vars:     Size  Location     Type
 16209 ;;  addr            1    1[COMMON] unsigned char 
 16210 ;; Return value:  Size  Location     Type
 16211 ;;                  1    wreg      void 
 16212 ;; Registers used:
 16213 ;;		wreg, status,2
 16214 ;; Tracked objects:
 16215 ;;		On entry : 1F/0
 16216 ;;		On exit  : 1F/11
 16217 ;;		Unchanged: 0/0
 16218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;Total ram usage:        2 bytes
 16224 ;; Hardware stack levels used:    1
 16225 ;; This function calls:
 16226 ;;		Nothing
 16227 ;; This function is called by:
 16228 ;;		_RegisterWrite
 16229 ;; This function uses a non-reentrant model
 16230 ;;
 16231                           
 16232                           
 16233                           ;psect for function _eeprom_write
 16234  11E0                     _eeprom_write:	
 16235                           
 16236                           ;incstack = 0
 16237                           ; Regs used in _eeprom_write: [wreg+status,2]
 16238                           ;eeprom_write@addr stored from wreg
 16239  11E0  00F1               	movwf	eeprom_write@addr
 16240  11E1                     i1l1772:	
 16241                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 16242                           
 16243  11E1  0031               	movlb	17	; select bank17
 16244  11E2  1895               	btfsc	21,1	;volsfr
 16245  11E3  29E1               	goto	i1l1772
 16246  11E4  1715               	bsf	21,6	;volsfr
 16247  11E5  0871               	movf	eeprom_write@addr,w
 16248  11E6  0091               	movwf	17	;volatile
 16249  11E7  3070               	movlw	112
 16250  11E8  0092               	movwf	18	;volatile
 16251  11E9  0194               	clrf	20	;volatile
 16252  11EA  0870               	movf	eeprom_write@value,w
 16253  11EB  0093               	movwf	19	;volatile
 16254  11EC  1003               	bcf	3,0	;volatile
 16255  11ED  1B8B               	btfsc	11,7	;volatile
 16256  11EE  1403               	bsf	3,0	;volatile
 16257  11EF  138B               	bcf	11,7	;volatile
 16258  11F0  1515               	bsf	21,2	;volsfr
 16259  11F1  3055               	movlw	85
 16260  11F2  0096               	movwf	22	;volsfr
 16261  11F3  30AA               	movlw	170
 16262  11F4  0096               	movwf	22	;volsfr
 16263  11F5  1495               	bsf	21,1	;volsfr
 16264  11F6                     i1l1776:	
 16265  11F6  1895               	btfsc	21,1	;volsfr
 16266  11F7  29F6               	goto	i1l1776
 16267  11F8  1115               	bcf	21,2	;volsfr
 16268  11F9  1803               	btfsc	3,0	;volatile
 16269  11FA  178B               	bsf	11,7	;volatile
 16270  11FB  0008               	return
 16271  11FC                     __end_of_eeprom_write:	
 16272                           
 16273                           	psect	text51
 16274  0CB9                     __ptext51:	
 16275 ;; *************** function _UpdateOut_GP3 *****************
 16276 ;; Defined at:
 16277 ;;		line 376 in file "GPports.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;		None
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;		None
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1    wreg      void 
 16284 ;; Registers used:
 16285 ;;		wreg, status,2, status,0
 16286 ;; Tracked objects:
 16287 ;;		On entry : 1F/0
 16288 ;;		On exit  : 1D/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16295 ;;Total ram usage:        1 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; This function calls:
 16298 ;;		Nothing
 16299 ;; This function is called by:
 16300 ;;		_RegisterWrite
 16301 ;; This function uses a non-reentrant model
 16302 ;;
 16303                           
 16304                           
 16305                           ;psect for function _UpdateOut_GP3
 16306  0CB9                     _UpdateOut_GP3:	
 16307                           
 16308                           ;GPports.c: 377: if (C_ETYPE == 1)
 16309                           
 16310                           ;incstack = 0
 16311                           ; Regs used in _UpdateOut_GP3: [wreg+status,2+status,0]
 16312  0CB9  0B38               	decfsz	_C_ETYPE,w	;volatile
 16313  0CBA  2CBC               	goto	i1l5313
 16314  0CBB  0008               	return
 16315  0CBC                     i1l5313:	
 16316                           
 16317                           ;GPports.c: 380: if ((GP3CONF & 0x03) == 0x01) {
 16318  0CBC  3003               	movlw	3
 16319  0CBD  0545               	andwf	_GP3CONF,w	;volatile
 16320  0CBE  00F0               	movwf	??_UpdateOut_GP3
 16321  0CBF  0B70               	decfsz	??_UpdateOut_GP3,w
 16322  0CC0  0008               	return
 16323                           
 16324                           ;GPports.c: 381: if (GP3REG == 0) {
 16325  0CC1  083F               	movf	_GP3REG,w	;volatile
 16326  0CC2  1D03               	btfss	3,2
 16327  0CC3  2CC7               	goto	i1l1286
 16328                           
 16329                           ;GPports.c: 382: LATCbits.LATC5 = 0;
 16330  0CC4  0022               	movlb	2	; select bank2
 16331  0CC5  128E               	bcf	14,5	;volatile
 16332                           
 16333                           ;GPports.c: 383: } else {
 16334  0CC6  0008               	return
 16335  0CC7                     i1l1286:	
 16336                           
 16337                           ;GPports.c: 384: LATCbits.LATC5 = 1;
 16338  0CC7  0022               	movlb	2	; select bank2
 16339  0CC8  168E               	bsf	14,5	;volatile
 16340                           
 16341                           ;GPports.c: 385: GP3REG = 1;
 16342  0CC9  3001               	movlw	1
 16343  0CCA  0020               	movlb	0	; select bank0
 16344  0CCB  00BF               	movwf	_GP3REG	;volatile
 16345  0CCC  0008               	return
 16346  0CCD                     __end_of_UpdateOut_GP3:	
 16347                           
 16348                           	psect	text52
 16349  11BB                     __ptext52:	
 16350 ;; *************** function _UpdateOut_GP2 *****************
 16351 ;; Defined at:
 16352 ;;		line 360 in file "GPports.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;		None
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      void 
 16359 ;; Registers used:
 16360 ;;		wreg, status,2, status,0
 16361 ;; Tracked objects:
 16362 ;;		On entry : 1F/0
 16363 ;;		On exit  : 1D/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;Total ram usage:        1 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_RegisterWrite
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           
 16380                           ;psect for function _UpdateOut_GP2
 16381  11BB                     _UpdateOut_GP2:	
 16382                           
 16383                           ;GPports.c: 361: if ((GP2CONF & 0x03) == 0x01) {
 16384                           
 16385                           ;incstack = 0
 16386                           ; Regs used in _UpdateOut_GP2: [wreg+status,2+status,0]
 16387  11BB  3003               	movlw	3
 16388  11BC  0546               	andwf	_GP2CONF,w	;volatile
 16389  11BD  00F0               	movwf	??_UpdateOut_GP2
 16390  11BE  0B70               	decfsz	??_UpdateOut_GP2,w
 16391  11BF  0008               	return
 16392                           
 16393                           ;GPports.c: 362: if (GP2REG == 0) {
 16394  11C0  0840               	movf	_GP2REG,w	;volatile
 16395  11C1  1D03               	btfss	3,2
 16396  11C2  29C6               	goto	i1l1278
 16397                           
 16398                           ;GPports.c: 363: LATCbits.LATC6 = 0;
 16399  11C3  0022               	movlb	2	; select bank2
 16400  11C4  130E               	bcf	14,6	;volatile
 16401                           
 16402                           ;GPports.c: 364: } else {
 16403  11C5  0008               	return
 16404  11C6                     i1l1278:	
 16405                           
 16406                           ;GPports.c: 366: LATCbits.LATC6 = 1;
 16407  11C6  0022               	movlb	2	; select bank2
 16408  11C7  170E               	bsf	14,6	;volatile
 16409                           
 16410                           ;GPports.c: 367: GP2REG = 1;
 16411  11C8  3001               	movlw	1
 16412  11C9  0020               	movlb	0	; select bank0
 16413  11CA  00C0               	movwf	_GP2REG	;volatile
 16414  11CB  0008               	return
 16415  11CC                     __end_of_UpdateOut_GP2:	
 16416                           
 16417                           	psect	text56
 16418  11AA                     __ptext56:	
 16419 ;; *************** function i1_I2C1_Initialize *****************
 16420 ;; Defined at:
 16421 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;		None
 16424 ;; Auto vars:     Size  Location     Type
 16425 ;;		None
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  1    wreg      void 
 16428 ;; Registers used:
 16429 ;;		wreg, status,2
 16430 ;; Tracked objects:
 16431 ;;		On entry : 1F/1
 16432 ;;		On exit  : 1F/1
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;Total ram usage:        0 bytes
 16440 ;; Hardware stack levels used:    1
 16441 ;; This function calls:
 16442 ;;		Nothing
 16443 ;; This function is called by:
 16444 ;;		_SecondConfig
 16445 ;; This function uses a non-reentrant model
 16446 ;;
 16447                           
 16448                           
 16449                           ;psect for function i1_I2C1_Initialize
 16450  11AA                     i1_I2C1_Initialize:	
 16451                           
 16452                           ;i2c1.c: 78: SSP1STAT = 0x00;
 16453                           
 16454                           ;incstack = 0
 16455                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 16456  11AA  0024               	movlb	4	; select bank4
 16457  11AB  0194               	clrf	20	;volatile
 16458                           
 16459                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 16460  11AC  3026               	movlw	38
 16461  11AD  0095               	movwf	21	;volatile
 16462                           
 16463                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 16464  11AE  0196               	clrf	22	;volatile
 16465                           
 16466                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 16467  11AF  0197               	clrf	23	;volatile
 16468                           
 16469                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 16470  11B0  30FE               	movlw	254
 16471  11B1  0093               	movwf	19	;volatile
 16472                           
 16473                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 16474  11B2  0020               	movlb	0	; select bank0
 16475  11B3  084B               	movf	_i2c_address,w	;volatile
 16476  11B4  0024               	movlb	4	; select bank4
 16477  11B5  0092               	movwf	18	;volatile
 16478                           
 16479                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 16480  11B6  0020               	movlb	0	; select bank0
 16481  11B7  1191               	bcf	17,3	;volatile
 16482                           
 16483                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 16484  11B8  0021               	movlb	1	; select bank1
 16485  11B9  1591               	bsf	17,3	;volatile
 16486  11BA  0008               	return
 16487  11BB                     __end_ofi1_I2C1_Initialize:	
 16488                           
 16489                           	psect	text57
 16490  11CC                     __ptext57:	
 16491 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 16492 ;; Defined at:
 16493 ;;		line 97 in file "mcc_generated_files/i2c1.c"
 16494 ;; Parameters:    Size  Location     Type
 16495 ;;		None
 16496 ;; Auto vars:     Size  Location     Type
 16497 ;;		None
 16498 ;; Return value:  Size  Location     Type
 16499 ;;                  1    wreg      void 
 16500 ;; Registers used:
 16501 ;;		wreg, status,2
 16502 ;; Tracked objects:
 16503 ;;		On entry : 1F/1
 16504 ;;		On exit  : 1F/1
 16505 ;;		Unchanged: 0/0
 16506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16511 ;;Total ram usage:        0 bytes
 16512 ;; Hardware stack levels used:    1
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_SecondConfig
 16517 ;; This function uses a non-reentrant model
 16518 ;;
 16519                           
 16520                           
 16521                           ;psect for function _I2C1_Initialize_ClockStreach
 16522  11CC                     _I2C1_Initialize_ClockStreach:	
 16523  11CC                     i1l4815:	
 16524                           ;incstack = 0
 16525                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 16526                           
 16527                           
 16528                           ;i2c1.c: 100: SSP1CON1 = 0x00;
 16529  11CC  0024               	movlb	4	; select bank4
 16530  11CD  0195               	clrf	21	;volatile
 16531                           
 16532                           ;i2c1.c: 101: SSP1CON2 = 0x00;
 16533  11CE  0196               	clrf	22	;volatile
 16534                           
 16535                           ;i2c1.c: 103: SSP1STAT = 0x00;
 16536  11CF  0194               	clrf	20	;volatile
 16537                           
 16538                           ;i2c1.c: 105: SSP1CON1 = 0x26;
 16539  11D0  3026               	movlw	38
 16540  11D1  0095               	movwf	21	;volatile
 16541                           
 16542                           ;i2c1.c: 107: SSP1CON2 = 0x01;
 16543  11D2  3001               	movlw	1
 16544  11D3  0096               	movwf	22	;volatile
 16545                           
 16546                           ;i2c1.c: 109: SSP1CON3 = 0x00;
 16547  11D4  0197               	clrf	23	;volatile
 16548                           
 16549                           ;i2c1.c: 111: SSP1MSK = (0x7F << 1);
 16550  11D5  30FE               	movlw	254
 16551  11D6  0093               	movwf	19	;volatile
 16552                           
 16553                           ;i2c1.c: 113: SSP1ADD = i2c_address;
 16554  11D7  0020               	movlb	0	; select bank0
 16555  11D8  084B               	movf	_i2c_address,w	;volatile
 16556  11D9  0024               	movlb	4	; select bank4
 16557  11DA  0092               	movwf	18	;volatile
 16558                           
 16559                           ;i2c1.c: 116: PIR1bits.SSP1IF = 0;
 16560  11DB  0020               	movlb	0	; select bank0
 16561  11DC  1191               	bcf	17,3	;volatile
 16562                           
 16563                           ;i2c1.c: 118: PIE1bits.SSP1IE = 1;
 16564  11DD  0021               	movlb	1	; select bank1
 16565  11DE  1591               	bsf	17,3	;volatile
 16566  11DF  0008               	return
 16567  11E0                     __end_of_I2C1_Initialize_ClockStreach:	
 16568                           
 16569                           	psect	text58
 16570  0CCD                     __ptext58:	
 16571 ;; *************** function _FirstDataSplit *****************
 16572 ;; Defined at:
 16573 ;;		line 111 in file "DataVariable.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;		None
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;		None
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, status,2, status,0
 16582 ;; Tracked objects:
 16583 ;;		On entry : 1F/0
 16584 ;;		On exit  : 1F/1
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;Total ram usage:        1 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; This function calls:
 16594 ;;		Nothing
 16595 ;; This function is called by:
 16596 ;;		_RegisterWrite
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           
 16601                           ;psect for function _FirstDataSplit
 16602  0CCD                     _FirstDataSplit:	
 16603                           
 16604                           ;DataVariable.c: 113: C_DTYPE = GCONF & 0x01U;
 16605                           
 16606                           ;incstack = 0
 16607                           ; Regs used in _FirstDataSplit: [wreg+status,2+status,0]
 16608  0CCD  0848               	movf	_GCONF,w	;volatile
 16609  0CCE  0021               	movlb	1	; select bank1
 16610  0CCF  00BD               	movwf	_C_DTYPE^(0+128)	;volatile
 16611  0CD0  3001               	movlw	1
 16612  0CD1  05BD               	andwf	_C_DTYPE^(0+128),f	;volatile
 16613                           
 16614                           ;DataVariable.c: 114: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 16615  0CD2  0020               	movlb	0	; select bank0
 16616  0CD3  3648               	lsrf	_GCONF,w	;volatile
 16617  0CD4  00B7               	movwf	_C_WRAPE	;volatile
 16618  0CD5  3001               	movlw	1
 16619  0CD6  05B7               	andwf	_C_WRAPE,f	;volatile
 16620                           
 16621                           ;DataVariable.c: 115: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 16622  0CD7  0848               	movf	_GCONF,w	;volatile
 16623  0CD8  00F0               	movwf	??_FirstDataSplit
 16624  0CD9  36F0               	lsrf	??_FirstDataSplit,f
 16625  0CDA  36F0               	lsrf	??_FirstDataSplit,f
 16626  0CDB  0870               	movf	??_FirstDataSplit,w
 16627  0CDC  0021               	movlb	1	; select bank1
 16628  0CDD  00BE               	movwf	_C_DIRE^(0+128)	;volatile
 16629  0CDE  3001               	movlw	1
 16630  0CDF  05BE               	andwf	_C_DIRE^(0+128),f	;volatile
 16631                           
 16632                           ;DataVariable.c: 116: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 16633  0CE0  0020               	movlb	0	; select bank0
 16634  0CE1  0848               	movf	_GCONF,w	;volatile
 16635  0CE2  00F0               	movwf	??_FirstDataSplit
 16636  0CE3  36F0               	lsrf	??_FirstDataSplit,f
 16637  0CE4  36F0               	lsrf	??_FirstDataSplit,f
 16638  0CE5  36F0               	lsrf	??_FirstDataSplit,f
 16639  0CE6  0870               	movf	??_FirstDataSplit,w
 16640  0CE7  0021               	movlb	1	; select bank1
 16641  0CE8  00BF               	movwf	_C_IPUD^(0+128)	;volatile
 16642  0CE9  3001               	movlw	1
 16643  0CEA  05BF               	andwf	_C_IPUD^(0+128),f	;volatile
 16644                           
 16645                           ;DataVariable.c: 117: C_RMOD = (bool) (GCONF >> 4) & 0x01U;
 16646  0CEB  0020               	movlb	0	; select bank0
 16647  0CEC  0E48               	swapf	_GCONF,w	;volatile
 16648  0CED  390F               	andlw	15
 16649  0CEE  0021               	movlb	1	; select bank1
 16650  0CEF  00C0               	movwf	_C_RMOD^(0+128)	;volatile
 16651  0CF0  3001               	movlw	1
 16652  0CF1  05C0               	andwf	_C_RMOD^(0+128),f	;volatile
 16653                           
 16654                           ;DataVariable.c: 118: C_ETYPE = (bool) (GCONF >> 5) & 0x01U;
 16655  0CF2  0020               	movlb	0	; select bank0
 16656  0CF3  0848               	movf	_GCONF,w	;volatile
 16657  0CF4  00F0               	movwf	??_FirstDataSplit
 16658  0CF5  3005               	movlw	5
 16659  0CF6                     u250_25:	
 16660  0CF6  36F0               	lsrf	??_FirstDataSplit,f
 16661  0CF7  0B89               	decfsz	9,f
 16662  0CF8  2CF6               	goto	u250_25
 16663  0CF9  0870               	movf	??_FirstDataSplit,w
 16664  0CFA  00B8               	movwf	_C_ETYPE	;volatile
 16665  0CFB  3001               	movlw	1
 16666  0CFC  05B8               	andwf	_C_ETYPE,f	;volatile
 16667                           
 16668                           ;DataVariable.c: 119: C_MBANK = (bool) (GCONF >> 6) & 0x01U;
 16669  0CFD  0848               	movf	_GCONF,w	;volatile
 16670  0CFE  00F0               	movwf	??_FirstDataSplit
 16671  0CFF  3006               	movlw	6
 16672  0D00                     u251_25:	
 16673  0D00  36F0               	lsrf	??_FirstDataSplit,f
 16674  0D01  0B89               	decfsz	9,f
 16675  0D02  2D00               	goto	u251_25
 16676  0D03  0870               	movf	??_FirstDataSplit,w
 16677  0D04  0021               	movlb	1	; select bank1
 16678  0D05  00C1               	movwf	_C_MBANK^(0+128)	;volatile
 16679  0D06  3001               	movlw	1
 16680  0D07  05C1               	andwf	_C_MBANK^(0+128),f	;volatile
 16681                           
 16682                           ;DataVariable.c: 120: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 16683  0D08  0020               	movlb	0	; select bank0
 16684  0D09  0848               	movf	_GCONF,w	;volatile
 16685  0D0A  00F0               	movwf	??_FirstDataSplit
 16686  0D0B  3007               	movlw	7
 16687  0D0C                     u252_25:	
 16688  0D0C  36F0               	lsrf	??_FirstDataSplit,f
 16689  0D0D  0B89               	decfsz	9,f
 16690  0D0E  2D0C               	goto	u252_25
 16691  0D0F  0870               	movf	??_FirstDataSplit,w
 16692  0D10  0021               	movlb	1	; select bank1
 16693  0D11  00C2               	movwf	_C_RESET^(0+128)	;volatile
 16694  0D12  3001               	movlw	1
 16695  0D13  05C2               	andwf	_C_RESET^(0+128),f	;volatile
 16696  0D14  0008               	return
 16697  0D15                     __end_of_FirstDataSplit:	
 16698                           
 16699                           	psect	text59
 16700  121F                     __ptext59:	
 16701 ;; *************** function _FirstConfig *****************
 16702 ;; Defined at:
 16703 ;;		line 515 in file "i2c_register.c"
 16704 ;; Parameters:    Size  Location     Type
 16705 ;;		None
 16706 ;; Auto vars:     Size  Location     Type
 16707 ;;		None
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  1    wreg      void 
 16710 ;; Registers used:
 16711 ;;		wreg, status,2, status,0, pclath, cstack
 16712 ;; Tracked objects:
 16713 ;;		On entry : 1F/1
 16714 ;;		On exit  : 0/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;Total ram usage:        0 bytes
 16722 ;; Hardware stack levels used:    1
 16723 ;; Hardware stack levels required when called:    2
 16724 ;; This function calls:
 16725 ;;		_RGB_EncoderMode
 16726 ;;		_STD_EncoderMode
 16727 ;; This function is called by:
 16728 ;;		_RegisterWrite
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           
 16733                           ;psect for function _FirstConfig
 16734  121F                     _FirstConfig:	
 16735                           
 16736                           ;i2c_register.c: 517: if (C_ETYPE == 1) {
 16737                           
 16738                           ;incstack = 0
 16739                           ; Regs used in _FirstConfig: [wreg+status,2+status,0+pclath+cstack]
 16740  121F  0020               	movlb	0	; select bank0
 16741  1220  0338               	decf	_C_ETYPE,w	;volatile
 16742  1221  1D03               	btfss	3,2
 16743  1222  2A26               	goto	i1l5073
 16744                           
 16745                           ;i2c_register.c: 518: RGB_EncoderMode();
 16746  1223  228C  3192         	fcall	_RGB_EncoderMode
 16747                           
 16748                           ;i2c_register.c: 519: } else {
 16749  1225  2A28               	goto	i1l5075
 16750  1226                     i1l5073:	
 16751                           
 16752                           ;i2c_register.c: 520: STD_EncoderMode();
 16753  1226  22C5  3192         	fcall	_STD_EncoderMode
 16754  1228                     i1l5075:	
 16755                           
 16756                           ;i2c_register.c: 521: };i2c_register.c: 524: if (C_DIRE == 1) {
 16757  1228  0021               	movlb	1	; select bank1
 16758  1229  0B3E               	decfsz	_C_DIRE^(0+128),w	;volatile
 16759  122A  2A3F               	goto	i1l5087
 16760                           
 16761                           ;i2c_register.c: 525: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16762  122B  3055               	movlw	85
 16763  122C  003C               	movlb	28	; select bank28
 16764  122D  008F               	movwf	15	;volsfr
 16765  122E  30AA               	movlw	170
 16766  122F  008F               	movwf	15	;volsfr
 16767  1230  100F               	bcf	15,0	;volsfr
 16768                           
 16769                           ;i2c_register.c: 526: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 16770  1231  0829               	movf	41,w	;volatile
 16771  1232  39E0               	andlw	-32
 16772  1233  3811               	iorlw	17
 16773  1234  00A9               	movwf	41	;volatile
 16774                           
 16775                           ;i2c_register.c: 527: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 16776  1235  0828               	movf	40,w	;volatile
 16777  1236  39E0               	andlw	-32
 16778  1237  3810               	iorlw	16
 16779  1238  00A8               	movwf	40	;volatile
 16780                           
 16781                           ;i2c_register.c: 528: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16782  1239  3055               	movlw	85
 16783  123A  008F               	movwf	15	;volsfr
 16784  123B  30AA               	movlw	170
 16785  123C  008F               	movwf	15	;volsfr
 16786  123D  140F               	bsf	15,0	;volsfr
 16787                           
 16788                           ;i2c_register.c: 529: } else {
 16789  123E  2A52               	goto	i1l5097
 16790  123F                     i1l5087:	
 16791                           
 16792                           ;i2c_register.c: 530: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16793  123F  3055               	movlw	85
 16794  1240  003C               	movlb	28	; select bank28
 16795  1241  008F               	movwf	15	;volsfr
 16796  1242  30AA               	movlw	170
 16797  1243  008F               	movwf	15	;volsfr
 16798  1244  100F               	bcf	15,0	;volsfr
 16799                           
 16800                           ;i2c_register.c: 531: CLCIN1PPSbits.CLCIN1PPS = 0x10;
 16801  1245  0829               	movf	41,w	;volatile
 16802  1246  39E0               	andlw	-32
 16803  1247  3810               	iorlw	16
 16804  1248  00A9               	movwf	41	;volatile
 16805                           
 16806                           ;i2c_register.c: 532: CLCIN0PPSbits.CLCIN0PPS = 0x11;
 16807  1249  0828               	movf	40,w	;volatile
 16808  124A  39E0               	andlw	-32
 16809  124B  3811               	iorlw	17
 16810  124C  00A8               	movwf	40	;volatile
 16811                           
 16812                           ;i2c_register.c: 533: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16813  124D  3055               	movlw	85
 16814  124E  008F               	movwf	15	;volsfr
 16815  124F  30AA               	movlw	170
 16816  1250  008F               	movwf	15	;volsfr
 16817  1251  140F               	bsf	15,0	;volsfr
 16818  1252                     i1l5097:	
 16819                           
 16820                           ;i2c_register.c: 534: };i2c_register.c: 536: if (C_IPUD == 1) {
 16821  1252  0021               	movlb	1	; select bank1
 16822  1253  0B3F               	decfsz	_C_IPUD^(0+128),w	;volatile
 16823  1254  2A58               	goto	i1l959
 16824                           
 16825                           ;i2c_register.c: 537: do { WPUBbits.WPUB5 = 0; } while(0);
 16826  1255  0024               	movlb	4	; select bank4
 16827  1256  128D               	bcf	13,5	;volatile
 16828  1257  2A5A               	goto	i1l961
 16829  1258                     i1l959:	
 16830                           ;i2c_register.c: 540: do { WPUBbits.WPUB5 = 1; } while(0);
 16831                           
 16832                           ;i2c_register.c: 538: do { LATBbits.LATB5 = 1; } while(0);
 16833                           
 16834  1258  0024               	movlb	4	; select bank4
 16835  1259  168D               	bsf	13,5	;volatile
 16836  125A                     i1l961:	
 16837                           ;i2c_register.c: 541: do { LATBbits.LATB5 = 1; } while(0);
 16838                           
 16839  125A  0022               	movlb	2	; select bank2
 16840  125B  168D               	bsf	13,5	;volatile
 16841                           
 16842                           ;i2c_register.c: 543: };i2c_register.c: 545: if (C_RMOD == 1) {
 16843  125C  0021               	movlb	1	; select bank1
 16844  125D  0B40               	decfsz	_C_RMOD^(0+128),w	;volatile
 16845  125E  2A65               	goto	i1l963
 16846                           
 16847                           ;i2c_register.c: 546: PIR3bits.CLC1IF = 0;
 16848  125F  0020               	movlb	0	; select bank0
 16849  1260  1013               	bcf	19,0	;volatile
 16850                           
 16851                           ;i2c_register.c: 547: PIE3bits.CLC1IE = 0;
 16852  1261  0021               	movlb	1	; select bank1
 16853  1262  1013               	bcf	19,0	;volatile
 16854                           
 16855                           ;i2c_register.c: 548: CLC1CON = 0x9D;
 16856  1263  309D               	movlw	157
 16857  1264  2A6A               	goto	L10
 16858  1265                     i1l963:	
 16859                           ;i2c_register.c: 556: } else {
 16860                           
 16861                           ;i2c_register.c: 554: PIE3bits.CLC2IE = 1;
 16862                           
 16863                           ;i2c_register.c: 553: CLC2CON = 0x9D;
 16864                           
 16865                           ;i2c_register.c: 552: PIE3bits.CLC2IE = 0;
 16866                           
 16867                           ;i2c_register.c: 551: PIR3bits.CLC2IF = 0;
 16868                           
 16869                           ;i2c_register.c: 549: PIE3bits.CLC1IE = 1;
 16870                           
 16871                           
 16872                           ;i2c_register.c: 557: PIR3bits.CLC1IF = 0;
 16873  1265  0020               	movlb	0	; select bank0
 16874  1266  1013               	bcf	19,0	;volatile
 16875                           
 16876                           ;i2c_register.c: 558: PIE3bits.CLC1IE = 0;
 16877  1267  0021               	movlb	1	; select bank1
 16878  1268  1013               	bcf	19,0	;volatile
 16879                           
 16880                           ;i2c_register.c: 559: CLC1CON = 0x95;
 16881  1269  3095               	movlw	149
 16882  126A                     L10:	
 16883  126A  003E               	movlb	30	; select bank30
 16884  126B  0090               	movwf	16	;volatile
 16885                           
 16886                           ;i2c_register.c: 560: PIE3bits.CLC1IE = 1;
 16887  126C  0021               	movlb	1	; select bank1
 16888  126D  1413               	bsf	19,0	;volatile
 16889                           
 16890                           ;i2c_register.c: 562: PIR3bits.CLC2IF = 0;
 16891  126E  0020               	movlb	0	; select bank0
 16892  126F  1093               	bcf	19,1	;volatile
 16893                           
 16894                           ;i2c_register.c: 563: PIE3bits.CLC2IE = 0;
 16895  1270  0021               	movlb	1	; select bank1
 16896  1271  1093               	bcf	19,1	;volatile
 16897                           
 16898                           ;i2c_register.c: 564: CLC2CON = 0x95;
 16899  1272  003E               	movlb	30	; select bank30
 16900  1273  009A               	movwf	26	;volatile
 16901                           
 16902                           ;i2c_register.c: 565: PIE3bits.CLC2IE = 1;
 16903  1274  0021               	movlb	1	; select bank1
 16904  1275  1493               	bsf	19,1	;volatile
 16905                           
 16906                           ;i2c_register.c: 566: };i2c_register.c: 569: if (C_DTYPE == 0) {
 16907  1276  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 16908  1277  1D03               	btfss	3,2
 16909  1278  2A80               	goto	i1l5127
 16910                           
 16911                           ;i2c_register.c: 570: ISTEP.val = 1;
 16912  1279  3001               	movlw	1
 16913  127A  0020               	movlb	0	; select bank0
 16914  127B  00A0               	movwf	_ISTEP	;volatile
 16915  127C  01A1               	clrf	_ISTEP+1	;volatile
 16916  127D  01A2               	clrf	_ISTEP+2	;volatile
 16917  127E  01A3               	clrf	_ISTEP+3	;volatile
 16918                           
 16919                           ;i2c_register.c: 571: } else {
 16920  127F  2A87               	goto	i1l5129
 16921  1280                     i1l5127:	
 16922                           
 16923                           ;i2c_register.c: 572: ISTEP.fval = 1.0;
 16924  1280  303F               	movlw	63
 16925  1281  0020               	movlb	0	; select bank0
 16926  1282  00A3               	movwf	_ISTEP+3	;volatile
 16927  1283  3080               	movlw	128
 16928  1284  00A2               	movwf	_ISTEP+2	;volatile
 16929  1285  01A1               	clrf	_ISTEP+1	;volatile
 16930  1286  01A0               	clrf	_ISTEP	;volatile
 16931  1287                     i1l5129:	
 16932                           
 16933                           ;i2c_register.c: 573: };i2c_register.c: 575: if (C_RESET == 1) {
 16934  1287  0021               	movlb	1	; select bank1
 16935  1288  0B42               	decfsz	_C_RESET^(0+128),w	;volatile
 16936  1289  0008               	return
 16937  128A  0001               	reset	;# 
 16938  128B  0008               	return
 16939  128C                     __end_of_FirstConfig:	
 16940  128C                     __ptext61:	
 16941 ;; *************** function _RGB_EncoderMode *****************
 16942 ;; Defined at:
 16943 ;;		line 138 in file "GPports.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;		None
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;		None
 16948 ;; Return value:  Size  Location     Type
 16949 ;;                  1    wreg      void 
 16950 ;; Registers used:
 16951 ;;		wreg, status,2, status,0, pclath, cstack
 16952 ;; Tracked objects:
 16953 ;;		On entry : 1F/0
 16954 ;;		On exit  : 1F/5
 16955 ;;		Unchanged: 0/0
 16956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;Total ram usage:        0 bytes
 16962 ;; Hardware stack levels used:    1
 16963 ;; Hardware stack levels required when called:    1
 16964 ;; This function calls:
 16965 ;;		_PWM1_Initialize
 16966 ;;		_PWM2_Initialize
 16967 ;;		_PWM3_Initialize
 16968 ;; This function is called by:
 16969 ;;		_FirstConfig
 16970 ;; This function uses a non-reentrant model
 16971 ;;
 16972                           
 16973                           
 16974                           ;psect for function _RGB_EncoderMode
 16975  128C                     _RGB_EncoderMode:	
 16976                           
 16977                           ;incstack = 0
 16978                           ; Regs used in _RGB_EncoderMode: [wreg+status,2+status,0+pclath+cstack]
 16979                           ;GPports.c: 140: do { ANSELCbits.ANSC3 = 0; } while(0);
 16980  128C  0023               	movlb	3	; select bank3
 16981  128D  118E               	bcf	14,3	;volatile
 16982                           
 16983                           ;GPports.c: 141: do { ODCONCbits.ODCC3 = 0; } while(0);
 16984  128E  0025               	movlb	5	; select bank5
 16985  128F  118E               	bcf	14,3	;volatile
 16986                           
 16987                           ;GPports.c: 142: do { WPUCbits.WPUC3 = 0; } while(0);
 16988  1290  0024               	movlb	4	; select bank4
 16989  1291  118E               	bcf	14,3	;volatile
 16990                           
 16991                           ;GPports.c: 143: do { TRISCbits.TRISC3 = 0; } while(0);
 16992  1292  0021               	movlb	1	; select bank1
 16993  1293  118E               	bcf	14,3	;volatile
 16994                           
 16995                           ;GPports.c: 145: do { ANSELCbits.ANSC4 = 0; } while(0);
 16996  1294  0023               	movlb	3	; select bank3
 16997  1295  120E               	bcf	14,4	;volatile
 16998                           
 16999                           ;GPports.c: 146: do { ODCONCbits.ODCC4 = 0; } while(0);
 17000  1296  0025               	movlb	5	; select bank5
 17001  1297  120E               	bcf	14,4	;volatile
 17002                           
 17003                           ;GPports.c: 147: do { WPUCbits.WPUC4 = 0; } while(0);
 17004  1298  0024               	movlb	4	; select bank4
 17005  1299  120E               	bcf	14,4	;volatile
 17006                           
 17007                           ;GPports.c: 148: do { TRISCbits.TRISC4 = 0; } while(0);
 17008  129A  0021               	movlb	1	; select bank1
 17009  129B  120E               	bcf	14,4	;volatile
 17010                           
 17011                           ;GPports.c: 150: do { ANSELCbits.ANSC5 = 0; } while(0);
 17012  129C  0023               	movlb	3	; select bank3
 17013  129D  128E               	bcf	14,5	;volatile
 17014                           
 17015                           ;GPports.c: 151: do { ODCONCbits.ODCC5 = 0; } while(0);
 17016  129E  0025               	movlb	5	; select bank5
 17017  129F  128E               	bcf	14,5	;volatile
 17018                           
 17019                           ;GPports.c: 152: do { TRISCbits.TRISC5 = 0; } while(0);
 17020  12A0  0021               	movlb	1	; select bank1
 17021  12A1  128E               	bcf	14,5	;volatile
 17022                           
 17023                           ;GPports.c: 154: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17024  12A2  3055               	movlw	85
 17025  12A3  003C               	movlb	28	; select bank28
 17026  12A4  008F               	movwf	15	;volsfr
 17027  12A5  30AA               	movlw	170
 17028  12A6  008F               	movwf	15	;volsfr
 17029  12A7  100F               	bcf	15,0	;volsfr
 17030                           
 17031                           ;GPports.c: 155: RC5PPSbits.RC5PPS = 0x0C;
 17032  12A8  003D               	movlb	29	; select bank29
 17033  12A9  0825               	movf	37,w	;volatile
 17034  12AA  39E0               	andlw	-32
 17035  12AB  380C               	iorlw	12
 17036  12AC  00A5               	movwf	37	;volatile
 17037                           
 17038                           ;GPports.c: 156: RC4PPSbits.RC4PPS = 0x0D;
 17039  12AD  0824               	movf	36,w	;volatile
 17040  12AE  39E0               	andlw	-32
 17041  12AF  380D               	iorlw	13
 17042  12B0  00A4               	movwf	36	;volatile
 17043                           
 17044                           ;GPports.c: 157: RC3PPSbits.RC3PPS = 0x0E;
 17045  12B1  0823               	movf	35,w	;volatile
 17046  12B2  39E0               	andlw	-32
 17047  12B3  380E               	iorlw	14
 17048  12B4  00A3               	movwf	35	;volatile
 17049                           
 17050                           ;GPports.c: 158: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17051  12B5  3055               	movlw	85
 17052  12B6  003C               	movlb	28	; select bank28
 17053  12B7  008F               	movwf	15	;volsfr
 17054  12B8  30AA               	movlw	170
 17055  12B9  008F               	movwf	15	;volsfr
 17056  12BA  140F               	bsf	15,0	;volsfr
 17057  12BB  0023               	movlb	3	; select bank3
 17058  12BC  110E               	bcf	14,2	;volatile
 17059  12BD  0021               	movlb	1	; select bank1
 17060  12BE  150E               	bsf	14,2	;volatile
 17061                           
 17062                           ;GPports.c: 163: PWM1_Initialize();
 17063  12BF  3197  2766  3192   	fcall	_PWM1_Initialize
 17064                           
 17065                           ;GPports.c: 164: PWM2_Initialize();
 17066  12C2  22DC  3192         	fcall	_PWM2_Initialize
 17067                           
 17068                           ;GPports.c: 165: PWM3_Initialize();
 17069  12C4  2AE7               	ljmp	i1l4787
 17070  12C5                     __end_of_RGB_EncoderMode:	
 17071  12C5                     __ptext60:	
 17072 ;; *************** function _STD_EncoderMode *****************
 17073 ;; Defined at:
 17074 ;;		line 171 in file "GPports.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;		None
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		status,2
 17083 ;; Tracked objects:
 17084 ;;		On entry : 1F/0
 17085 ;;		On exit  : 1F/1
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;Total ram usage:        0 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_FirstConfig
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           
 17102                           ;psect for function _STD_EncoderMode
 17103  12C5                     _STD_EncoderMode:	
 17104                           
 17105                           ;incstack = 0
 17106                           ; Regs used in _STD_EncoderMode: [status,2]
 17107                           ;GPports.c: 173: do { ANSELCbits.ANSC4 = 0; } while(0);
 17108  12C5  0023               	movlb	3	; select bank3
 17109  12C6  120E               	bcf	14,4	;volatile
 17110                           
 17111                           ;GPports.c: 174: do { WPUCbits.WPUC4 = 1; } while(0);
 17112  12C7  0024               	movlb	4	; select bank4
 17113  12C8  160E               	bsf	14,4	;volatile
 17114                           
 17115                           ;GPports.c: 175: do { TRISCbits.TRISC4 = 1; } while(0);
 17116  12C9  0021               	movlb	1	; select bank1
 17117  12CA  160E               	bsf	14,4	;volatile
 17118                           
 17119                           ;GPports.c: 177: do { ANSELCbits.ANSC3 = 0; } while(0);
 17120  12CB  0023               	movlb	3	; select bank3
 17121  12CC  118E               	bcf	14,3	;volatile
 17122                           
 17123                           ;GPports.c: 178: do { ODCONCbits.ODCC3 = 0; } while(0);
 17124  12CD  0025               	movlb	5	; select bank5
 17125  12CE  118E               	bcf	14,3	;volatile
 17126                           
 17127                           ;GPports.c: 179: do { TRISCbits.TRISC3 = 0; } while(0);
 17128  12CF  0021               	movlb	1	; select bank1
 17129  12D0  118E               	bcf	14,3	;volatile
 17130                           
 17131                           ;GPports.c: 180: do { LATCbits.LATC3 = 0; } while(0);
 17132  12D1  0022               	movlb	2	; select bank2
 17133  12D2  118E               	bcf	14,3	;volatile
 17134                           
 17135                           ;GPports.c: 182: CCP2CON = 0x00;
 17136  12D3  0025               	movlb	5	; select bank5
 17137  12D4  0197               	clrf	23	;volatile
 17138                           
 17139                           ;GPports.c: 183: CCP3CON = 0x00;
 17140  12D5  0026               	movlb	6	; select bank6
 17141  12D6  0193               	clrf	19	;volatile
 17142  12D7  0023               	movlb	3	; select bank3
 17143  12D8  110E               	bcf	14,2	;volatile
 17144  12D9  0021               	movlb	1	; select bank1
 17145  12DA  150E               	bsf	14,2	;volatile
 17146  12DB  0008               	return
 17147  12DC                     __end_of_STD_EncoderMode:	
 17148  12DC                     __ptext63:	
 17149 ;; *************** function _PWM2_Initialize *****************
 17150 ;; Defined at:
 17151 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;		None
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;		None
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1    wreg      void 
 17158 ;; Registers used:
 17159 ;;		wreg, status,2, status,0
 17160 ;; Tracked objects:
 17161 ;;		On entry : 1F/5
 17162 ;;		On exit  : 1F/5
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;Total ram usage:        0 bytes
 17170 ;; Hardware stack levels used:    1
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_RGB_EncoderMode
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           
 17179                           ;psect for function _PWM2_Initialize
 17180  12DC                     _PWM2_Initialize:	
 17181                           
 17182                           ;pwm2.c: 69: CCP2CON = 0x8F;
 17183                           
 17184                           ;incstack = 0
 17185                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 17186  12DC  308F               	movlw	143
 17187  12DD  0097               	movwf	23	;volatile
 17188                           
 17189                           ;pwm2.c: 72: CCPR2H = 0x03;
 17190  12DE  3003               	movlw	3
 17191  12DF  0096               	movwf	22	;volatile
 17192                           
 17193                           ;pwm2.c: 75: CCPR2L = 0xFF;
 17194  12E0  30FF               	movlw	255
 17195  12E1  0095               	movwf	21	;volatile
 17196                           
 17197                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 17198  12E2  081F               	movf	31,w	;volatile
 17199  12E3  39F3               	andlw	-13
 17200  12E4  3804               	iorlw	4
 17201  12E5  009F               	movwf	31	;volatile
 17202  12E6  0008               	return
 17203  12E7                     __end_of_PWM2_Initialize:	
 17204  12E7                     __ptext62:	
 17205 ;; *************** function _PWM3_Initialize *****************
 17206 ;; Defined at:
 17207 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;		None
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;		None
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      void 
 17214 ;; Registers used:
 17215 ;;		wreg, status,2, status,0
 17216 ;; Tracked objects:
 17217 ;;		On entry : 1F/5
 17218 ;;		On exit  : 1F/5
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;Total ram usage:        0 bytes
 17226 ;; Hardware stack levels used:    1
 17227 ;; This function calls:
 17228 ;;		Nothing
 17229 ;; This function is called by:
 17230 ;;		_RGB_EncoderMode
 17231 ;; This function uses a non-reentrant model
 17232 ;;
 17233                           
 17234                           
 17235                           ;psect for function _PWM3_Initialize
 17236  12E7                     _PWM3_Initialize:	
 17237  12E7                     i1l4787:	
 17238                           ;incstack = 0
 17239                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 17240                           
 17241                           
 17242                           ;pwm3.c: 69: CCP3CON = 0x8F;
 17243  12E7  308F               	movlw	143
 17244  12E8  0026               	movlb	6	; select bank6
 17245  12E9  0093               	movwf	19	;volatile
 17246                           
 17247                           ;pwm3.c: 72: CCPR3H = 0x03;
 17248  12EA  3003               	movlw	3
 17249  12EB  0092               	movwf	18	;volatile
 17250                           
 17251                           ;pwm3.c: 75: CCPR3L = 0xFF;
 17252  12EC  30FF               	movlw	255
 17253  12ED  0091               	movwf	17	;volatile
 17254                           
 17255                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 17256  12EE  0025               	movlb	5	; select bank5
 17257  12EF  081F               	movf	31,w	;volatile
 17258  12F0  39CF               	andlw	-49
 17259  12F1  3810               	iorlw	16
 17260  12F2  009F               	movwf	31	;volatile
 17261  12F3  0008               	return
 17262  12F4                     __end_of_PWM3_Initialize:	
 17263                           
 17264                           	psect	swtext7
 17265  1118                     __pswtext7:	
 17266  1118                     i1S8555:	
 17267  1118  3197  2F09         	ljmp	i1l1236
 17268  111A  3197  2F26         	ljmp	i1l1244
 17269  111C  3197  2F2D         	ljmp	i1l1251
 17270  111E  3197  2F34         	ljmp	i1l1256
 17271                           
 17272                           	psect	swtext8
 17273  1120                     __pswtext8:	
 17274  1120                     i1S8561:	
 17275  1120  3196  2E24         	ljmp	i1l1199
 17276  1122  3196  2E41         	ljmp	i1l1207
 17277  1124  3196  2E48         	ljmp	i1l1214
 17278  1126  3196  2E4F         	ljmp	i1l1219
 17279                           
 17280                           	psect	swtext9
 17281  1128                     __pswtext9:	
 17282  1128                     i1S8567:	
 17283  1128  3195  2DAB         	ljmp	i1l1162
 17284  112A  3195  2DC8         	ljmp	i1l1170
 17285  112C  3195  2DCF         	ljmp	i1l1177
 17286  112E  3195  2DD6         	ljmp	i1l1182
 17287                           
 17288                           	psect	text71
 17289  1408                     __ptext71:	
 17290 ;; *************** function i1_PWM_GP1 *****************
 17291 ;; Defined at:
 17292 ;;		line 30 in file "PWM.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  duty            1    wreg     unsigned char 
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;  duty            1    0[BANK0 ] unsigned char 
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      void 
 17299 ;; Registers used:
 17300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17301 ;; Tracked objects:
 17302 ;;		On entry : 1F/C
 17303 ;;		On exit  : 1F/C
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;Total ram usage:        9 bytes
 17311 ;; Hardware stack levels used:    1
 17312 ;; Hardware stack levels required when called:    1
 17313 ;; This function calls:
 17314 ;;		i1___wmul
 17315 ;; This function is called by:
 17316 ;;		_Config_GP1
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320                           
 17321                           ;psect for function i1_PWM_GP1
 17322  1408                     i1_PWM_GP1:	
 17323                           
 17324                           ;incstack = 0
 17325                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17326                           ;i1PWM_GP1@duty stored from wreg
 17327  1408  0020               	movlb	0	; select bank0
 17328  1409  00CC               	movwf	i1PWM_GP1@duty
 17329                           
 17330                           ;PWM.c: 32: if (duty == 0) {
 17331  140A  084C               	movf	i1PWM_GP1@duty,w
 17332  140B  1D03               	btfss	3,2
 17333  140C  2C21               	goto	i1l4909
 17334                           
 17335                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 17336  140D  0022               	movlb	2	; select bank2
 17337  140E  178E               	bsf	14,7	;volatile
 17338                           
 17339                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17340  140F  3055               	movlw	85
 17341  1410  003C               	movlb	28	; select bank28
 17342  1411  008F               	movwf	15	;volsfr
 17343  1412  30AA               	movlw	170
 17344  1413  008F               	movwf	15	;volsfr
 17345  1414  100F               	bcf	15,0	;volsfr
 17346                           
 17347                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 17348  1415  30E0               	movlw	-32
 17349  1416  003D               	movlb	29	; select bank29
 17350  1417  05A7               	andwf	39,f	;volatile
 17351                           
 17352                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17353  1418  3055               	movlw	85
 17354  1419  003C               	movlb	28	; select bank28
 17355  141A  008F               	movwf	15	;volsfr
 17356  141B  30AA               	movlw	170
 17357  141C  008F               	movwf	15	;volsfr
 17358  141D  140F               	bsf	15,0	;volsfr
 17359                           
 17360                           ;PWM.c: 38: PWM5CON = 0;
 17361  141E  002C               	movlb	12	; select bank12
 17362  141F  0199               	clrf	25	;volatile
 17363  1420  0008               	return
 17364  1421                     i1l4909:	
 17365                           
 17366                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 17367  1421  002C               	movlb	12	; select bank12
 17368  1422  0819               	movf	25,w	;volatile
 17369  1423  1D03               	btfss	3,2
 17370  1424  2C39               	goto	i1l1548
 17371                           
 17372                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17373  1425  3055               	movlw	85
 17374  1426  003C               	movlb	28	; select bank28
 17375  1427  008F               	movwf	15	;volsfr
 17376  1428  30AA               	movlw	170
 17377  1429  008F               	movwf	15	;volsfr
 17378  142A  100F               	bcf	15,0	;volsfr
 17379                           
 17380                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 17381  142B  003D               	movlb	29	; select bank29
 17382  142C  0827               	movf	39,w	;volatile
 17383  142D  39E0               	andlw	-32
 17384  142E  3802               	iorlw	2
 17385  142F  00A7               	movwf	39	;volatile
 17386                           
 17387                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17388  1430  3055               	movlw	85
 17389  1431  003C               	movlb	28	; select bank28
 17390  1432  008F               	movwf	15	;volsfr
 17391  1433  30AA               	movlw	170
 17392  1434  008F               	movwf	15	;volsfr
 17393  1435  140F               	bsf	15,0	;volsfr
 17394                           
 17395                           ;PWM.c: 46: PWM5CON = 0x80;
 17396  1436  3080               	movlw	128
 17397  1437  002C               	movlb	12	; select bank12
 17398  1438  0099               	movwf	25	;volatile
 17399  1439                     i1l1548:	
 17400                           
 17401                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 17402  1439  0020               	movlb	0	; select bank0
 17403  143A  083D               	movf	_GAMMAGP1,w	;volatile
 17404  143B  1D03               	btfss	3,2
 17405  143C  2C42               	goto	i1l4929
 17406                           
 17407                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 17408  143D  094C               	comf	i1PWM_GP1@duty,w
 17409  143E  002C               	movlb	12	; select bank12
 17410  143F  0098               	movwf	24	;volatile
 17411                           
 17412                           ;PWM.c: 51: PWM5DCL = 0;
 17413  1440  0197               	clrf	23	;volatile
 17414                           
 17415                           ;PWM.c: 52: } else {
 17416  1441  0008               	return
 17417  1442                     i1l4929:	
 17418                           
 17419                           ;PWM.c: 53: if (duty > 100)
 17420  1442  3065               	movlw	101
 17421  1443  024C               	subwf	i1PWM_GP1@duty,w
 17422  1444  1C03               	skipc
 17423  1445  2C48               	goto	i1l4933
 17424                           
 17425                           ;PWM.c: 54: duty = 100;
 17426  1446  3064               	movlw	100
 17427  1447  00CC               	movwf	i1PWM_GP1@duty
 17428  1448                     i1l4933:	
 17429                           
 17430                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 17431  1448  084C               	movf	i1PWM_GP1@duty,w
 17432  1449  00F6               	movwf	??i1_PWM_GP1
 17433  144A  01F7               	clrf	??i1_PWM_GP1+1
 17434  144B  35F6               	lslf	??i1_PWM_GP1,f
 17435  144C  0DF7               	rlf	??i1_PWM_GP1+1,f
 17436  144D  083D               	movf	_GAMMAGP1,w	;volatile
 17437  144E  00F0               	movwf	i1___wmul@multiplier
 17438  144F  30C8               	movlw	200
 17439  1450  01F1               	clrf	i1___wmul@multiplier+1
 17440  1451  00F2               	movwf	i1___wmul@multiplicand
 17441  1452  01F3               	clrf	i1___wmul@multiplicand+1
 17442  1453  2584  3194         	fcall	i1___wmul
 17443  1455  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 17444  1456  00F8               	movwf	??i1_PWM_GP1+2
 17445  1457  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 17446  1458  00F9               	movwf	??i1_PWM_GP1+3
 17447  1459  0870               	movf	?i1___wmul,w
 17448  145A  0778               	addwf	??i1_PWM_GP1+2,w
 17449  145B  00FA               	movwf	??i1_PWM_GP1+4
 17450  145C  0871               	movf	?i1___wmul+1,w
 17451  145D  3D79               	addwfc	??i1_PWM_GP1+3,w
 17452  145E  00FB               	movwf	??i1_PWM_GP1+5
 17453  145F  087A               	movf	??i1_PWM_GP1+4,w
 17454  1460  0776               	addwf	??i1_PWM_GP1,w
 17455  1461  0084               	movwf	4
 17456  1462  087B               	movf	??i1_PWM_GP1+5,w
 17457  1463  3D77               	addwfc	??i1_PWM_GP1+1,w
 17458  1464  0085               	movwf	5
 17459  1465  3F00               	moviw [0]fsr0
 17460  1466  00FC               	movwf	??i1_PWM_GP1+6
 17461  1467  3F01               	moviw [1]fsr0
 17462  1468  00FD               	movwf	??i1_PWM_GP1+7
 17463  1469  36FD               	lsrf	??i1_PWM_GP1+7,f
 17464  146A  0CFC               	rrf	??i1_PWM_GP1+6,f
 17465  146B  36FD               	lsrf	??i1_PWM_GP1+7,f
 17466  146C  0CFC               	rrf	??i1_PWM_GP1+6,f
 17467  146D  087C               	movf	??i1_PWM_GP1+6,w
 17468  146E  002C               	movlb	12	; select bank12
 17469  146F  0098               	movwf	24	;volatile
 17470                           
 17471                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 17472  1470  0020               	movlb	0	; select bank0
 17473  1471  084C               	movf	i1PWM_GP1@duty,w
 17474  1472  00F6               	movwf	??i1_PWM_GP1
 17475  1473  01F7               	clrf	??i1_PWM_GP1+1
 17476  1474  35F6               	lslf	??i1_PWM_GP1,f
 17477  1475  0DF7               	rlf	??i1_PWM_GP1+1,f
 17478  1476  083D               	movf	_GAMMAGP1,w	;volatile
 17479  1477  00F0               	movwf	i1___wmul@multiplier
 17480  1478  30C8               	movlw	200
 17481  1479  01F1               	clrf	i1___wmul@multiplier+1
 17482  147A  00F2               	movwf	i1___wmul@multiplicand
 17483  147B  01F3               	clrf	i1___wmul@multiplicand+1
 17484  147C  2584               	fcall	i1___wmul
 17485  147D  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 17486  147E  00F8               	movwf	??i1_PWM_GP1+2
 17487  147F  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 17488  1480  00F9               	movwf	??i1_PWM_GP1+3
 17489  1481  0870               	movf	?i1___wmul,w
 17490  1482  0778               	addwf	??i1_PWM_GP1+2,w
 17491  1483  00FA               	movwf	??i1_PWM_GP1+4
 17492  1484  0871               	movf	?i1___wmul+1,w
 17493  1485  3D79               	addwfc	??i1_PWM_GP1+3,w
 17494  1486  00FB               	movwf	??i1_PWM_GP1+5
 17495  1487  087A               	movf	??i1_PWM_GP1+4,w
 17496  1488  0776               	addwf	??i1_PWM_GP1,w
 17497  1489  0084               	movwf	4
 17498  148A  087B               	movf	??i1_PWM_GP1+5,w
 17499  148B  3D77               	addwfc	??i1_PWM_GP1+1,w
 17500  148C  0085               	movwf	5
 17501  148D  0800               	movf	0,w	;code access
 17502  148E  3903               	andlw	3
 17503  148F  00FC               	movwf	??i1_PWM_GP1+6
 17504  1490  0CFC               	rrf	??i1_PWM_GP1+6,f
 17505  1491  0CFC               	rrf	??i1_PWM_GP1+6,f
 17506  1492  0C7C               	rrf	??i1_PWM_GP1+6,w
 17507  1493  39C0               	andlw	192
 17508  1494  002C               	movlb	12	; select bank12
 17509  1495  0097               	movwf	23	;volatile
 17510  1496  0008               	return
 17511  1497                     __end_ofi1_PWM_GP1:	
 17512  1497                     __ptext49:	
 17513 ;; *************** function _RegisterWrite *****************
 17514 ;; Defined at:
 17515 ;;		line 105 in file "i2c_register.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;  add             1    wreg     unsigned char 
 17518 ;;  data            1    3[BANK0 ] unsigned char 
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;  add             1    4[BANK0 ] unsigned char 
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  1    wreg      void 
 17523 ;; Registers used:
 17524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17525 ;; Tracked objects:
 17526 ;;		On entry : 1F/1
 17527 ;;		On exit  : E/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17530 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;Total ram usage:        2 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:    3
 17537 ;; This function calls:
 17538 ;;		_Config_GP1
 17539 ;;		_Config_GP2
 17540 ;;		_Config_GP3
 17541 ;;		_FirstConfig
 17542 ;;		_FirstDataSplit
 17543 ;;		_SecondConfig
 17544 ;;		_SecondDataSplit
 17545 ;;		_UpdateOut_GP1
 17546 ;;		_UpdateOut_GP2
 17547 ;;		_UpdateOut_GP3
 17548 ;;		_eeprom_write
 17549 ;;		i1___wmul
 17550 ;; This function is called by:
 17551 ;;		_I2C1_StatusCallback
 17552 ;; This function uses a non-reentrant model
 17553 ;;
 17554                           
 17555                           
 17556                           ;psect for function _RegisterWrite
 17557  1497                     _RegisterWrite:	
 17558                           
 17559                           ;incstack = 0
 17560                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17561                           ;RegisterWrite@add stored from wreg
 17562  1497  0020               	movlb	0	; select bank0
 17563  1498  00D0               	movwf	RegisterWrite@add
 17564                           
 17565                           ;i2c_register.c: 107: switch (add) {
 17566  1499  2D64               	goto	i1l5707
 17567  149A                     i1l5589:	
 17568                           
 17569                           ;i2c_register.c: 109: GCONF = data;
 17570  149A  084F               	movf	RegisterWrite@data,w
 17571  149B  00C8               	movwf	_GCONF	;volatile
 17572                           
 17573                           ;i2c_register.c: 110: FirstDataSplit();
 17574  149C  318C  24CD  3194   	fcall	_FirstDataSplit
 17575                           
 17576                           ;i2c_register.c: 111: FirstConfig();
 17577  149F  3192  221F  3194   	fcall	_FirstConfig
 17578                           
 17579                           ;i2c_register.c: 112: break;
 17580  14A2  2D6E               	goto	i1l5709
 17581  14A3                     i1l5595:	
 17582                           
 17583                           ;i2c_register.c: 115: GP1CONF = data;
 17584  14A3  084F               	movf	RegisterWrite@data,w
 17585  14A4  00C7               	movwf	_GP1CONF	;volatile
 17586                           
 17587                           ;i2c_register.c: 116: Config_GP1();
 17588  14A5  2599  3194         	fcall	_Config_GP1
 17589                           
 17590                           ;i2c_register.c: 117: break;
 17591  14A7  2D6E               	goto	i1l5709
 17592  14A8                     i1l5599:	
 17593                           
 17594                           ;i2c_register.c: 120: GP2CONF = data;
 17595  14A8  084F               	movf	RegisterWrite@data,w
 17596  14A9  00C6               	movwf	_GP2CONF	;volatile
 17597                           
 17598                           ;i2c_register.c: 121: Config_GP2();
 17599  14AA  2612  3194         	fcall	_Config_GP2
 17600                           
 17601                           ;i2c_register.c: 122: break;
 17602  14AC  2D6E               	goto	i1l5709
 17603  14AD                     i1l5603:	
 17604                           
 17605                           ;i2c_register.c: 125: if (C_ETYPE == 0) {
 17606  14AD  0838               	movf	_C_ETYPE,w	;volatile
 17607  14AE  1D03               	btfss	3,2
 17608  14AF  2D6E               	goto	i1l5709
 17609                           
 17610                           ;i2c_register.c: 126: GP3CONF = data;
 17611  14B0  084F               	movf	RegisterWrite@data,w
 17612  14B1  00C5               	movwf	_GP3CONF	;volatile
 17613                           
 17614                           ;i2c_register.c: 127: Config_GP3();
 17615  14B2  26F7  3194         	fcall	_Config_GP3
 17616  14B4  2D6E               	goto	i1l5709
 17617  14B5                     i1l5609:	
 17618                           
 17619                           ;i2c_register.c: 132: INTCONF = data;
 17620  14B5  084F               	movf	RegisterWrite@data,w
 17621  14B6  00C9               	movwf	_INTCONF	;volatile
 17622                           
 17623                           ;i2c_register.c: 133: break;
 17624  14B7  2D6E               	goto	i1l5709
 17625  14B8                     i1l5611:	
 17626                           
 17627                           ;i2c_register.c: 137: CVAL.bval[3] = data;
 17628  14B8  084F               	movf	RegisterWrite@data,w
 17629  14B9  00AF               	movwf	_CVAL+3	;volatile
 17630                           
 17631                           ;i2c_register.c: 138: break;
 17632  14BA  2D6E               	goto	i1l5709
 17633  14BB                     i1l5613:	
 17634                           
 17635                           ;i2c_register.c: 140: CVAL.bval[2] = data;
 17636  14BB  084F               	movf	RegisterWrite@data,w
 17637  14BC  00AE               	movwf	_CVAL+2	;volatile
 17638                           
 17639                           ;i2c_register.c: 141: break;
 17640  14BD  2D6E               	goto	i1l5709
 17641  14BE                     i1l5615:	
 17642                           
 17643                           ;i2c_register.c: 143: CVAL.bval[1] = data;
 17644  14BE  084F               	movf	RegisterWrite@data,w
 17645  14BF  00AD               	movwf	_CVAL+1	;volatile
 17646                           
 17647                           ;i2c_register.c: 144: break;
 17648  14C0  2D6E               	goto	i1l5709
 17649  14C1                     i1l5617:	
 17650                           
 17651                           ;i2c_register.c: 146: CVAL.bval[0] = data;
 17652  14C1  084F               	movf	RegisterWrite@data,w
 17653  14C2  00AC               	movwf	_CVAL	;volatile
 17654                           
 17655                           ;i2c_register.c: 147: break;
 17656  14C3  2D6E               	goto	i1l5709
 17657  14C4                     i1l5619:	
 17658                           
 17659                           ;i2c_register.c: 151: CMAX.bval[3] = data;
 17660  14C4  084F               	movf	RegisterWrite@data,w
 17661  14C5  00AB               	movwf	_CMAX+3	;volatile
 17662                           
 17663                           ;i2c_register.c: 152: break;
 17664  14C6  2D6E               	goto	i1l5709
 17665  14C7                     i1l5621:	
 17666                           
 17667                           ;i2c_register.c: 154: CMAX.bval[2] = data;
 17668  14C7  084F               	movf	RegisterWrite@data,w
 17669  14C8  00AA               	movwf	_CMAX+2	;volatile
 17670                           
 17671                           ;i2c_register.c: 155: break;
 17672  14C9  2D6E               	goto	i1l5709
 17673  14CA                     i1l5623:	
 17674                           
 17675                           ;i2c_register.c: 157: CMAX.bval[1] = data;
 17676  14CA  084F               	movf	RegisterWrite@data,w
 17677  14CB  00A9               	movwf	_CMAX+1	;volatile
 17678                           
 17679                           ;i2c_register.c: 158: break;
 17680  14CC  2D6E               	goto	i1l5709
 17681  14CD                     i1l5625:	
 17682                           
 17683                           ;i2c_register.c: 160: CMAX.bval[0] = data;
 17684  14CD  084F               	movf	RegisterWrite@data,w
 17685  14CE  00A8               	movwf	_CMAX	;volatile
 17686                           
 17687                           ;i2c_register.c: 161: break;
 17688  14CF  2D6E               	goto	i1l5709
 17689  14D0                     i1l5627:	
 17690                           
 17691                           ;i2c_register.c: 165: CMIN.bval[3] = data;
 17692  14D0  084F               	movf	RegisterWrite@data,w
 17693  14D1  00A7               	movwf	_CMIN+3	;volatile
 17694                           
 17695                           ;i2c_register.c: 166: break;
 17696  14D2  2D6E               	goto	i1l5709
 17697  14D3                     i1l5629:	
 17698                           
 17699                           ;i2c_register.c: 168: CMIN.bval[2] = data;
 17700  14D3  084F               	movf	RegisterWrite@data,w
 17701  14D4  00A6               	movwf	_CMIN+2	;volatile
 17702                           
 17703                           ;i2c_register.c: 169: break;
 17704  14D5  2D6E               	goto	i1l5709
 17705  14D6                     i1l5631:	
 17706                           
 17707                           ;i2c_register.c: 171: CMIN.bval[1] = data;
 17708  14D6  084F               	movf	RegisterWrite@data,w
 17709  14D7  00A5               	movwf	_CMIN+1	;volatile
 17710                           
 17711                           ;i2c_register.c: 172: break;
 17712  14D8  2D6E               	goto	i1l5709
 17713  14D9                     i1l5633:	
 17714                           
 17715                           ;i2c_register.c: 174: CMIN.bval[0] = data;
 17716  14D9  084F               	movf	RegisterWrite@data,w
 17717  14DA  00A4               	movwf	_CMIN	;volatile
 17718                           
 17719                           ;i2c_register.c: 175: break;
 17720  14DB  2D6E               	goto	i1l5709
 17721  14DC                     i1l5635:	
 17722                           
 17723                           ;i2c_register.c: 179: ISTEP.bval[3] = data;
 17724  14DC  084F               	movf	RegisterWrite@data,w
 17725  14DD  00A3               	movwf	_ISTEP+3	;volatile
 17726                           
 17727                           ;i2c_register.c: 180: break;
 17728  14DE  2D6E               	goto	i1l5709
 17729  14DF                     i1l5637:	
 17730                           
 17731                           ;i2c_register.c: 182: ISTEP.bval[2] = data;
 17732  14DF  084F               	movf	RegisterWrite@data,w
 17733  14E0  00A2               	movwf	_ISTEP+2	;volatile
 17734                           
 17735                           ;i2c_register.c: 183: break;
 17736  14E1  2D6E               	goto	i1l5709
 17737  14E2                     i1l5639:	
 17738                           
 17739                           ;i2c_register.c: 185: ISTEP.bval[1] = data;
 17740  14E2  084F               	movf	RegisterWrite@data,w
 17741  14E3  00A1               	movwf	_ISTEP+1	;volatile
 17742                           
 17743                           ;i2c_register.c: 186: break;
 17744  14E4  2D6E               	goto	i1l5709
 17745  14E5                     i1l5641:	
 17746                           
 17747                           ;i2c_register.c: 188: ISTEP.bval[0] = data;
 17748  14E5  084F               	movf	RegisterWrite@data,w
 17749  14E6  00A0               	movwf	_ISTEP	;volatile
 17750                           
 17751                           ;i2c_register.c: 189: break;
 17752  14E7  2D6E               	goto	i1l5709
 17753  14E8                     i1l5643:	
 17754                           
 17755                           ;i2c_register.c: 193: RLED = data;
 17756  14E8  084F               	movf	RegisterWrite@data,w
 17757  14E9  00C4               	movwf	_RLED	;volatile
 17758                           
 17759                           ;i2c_register.c: 195: break;
 17760  14EA  2D6E               	goto	i1l5709
 17761  14EB                     i1l5645:	
 17762                           
 17763                           ;i2c_register.c: 198: GLED = data;
 17764  14EB  084F               	movf	RegisterWrite@data,w
 17765  14EC  00C3               	movwf	_GLED	;volatile
 17766                           
 17767                           ;i2c_register.c: 199: break;
 17768  14ED  2D6E               	goto	i1l5709
 17769  14EE                     i1l5647:	
 17770                           
 17771                           ;i2c_register.c: 202: BLED = data;
 17772  14EE  084F               	movf	RegisterWrite@data,w
 17773  14EF  00C2               	movwf	_BLED	;volatile
 17774                           
 17775                           ;i2c_register.c: 203: break;
 17776  14F0  2D6E               	goto	i1l5709
 17777  14F1                     i1l5649:	
 17778                           
 17779                           ;i2c_register.c: 207: GP1REG = data;
 17780  14F1  084F               	movf	RegisterWrite@data,w
 17781  14F2  00C1               	movwf	_GP1REG	;volatile
 17782                           
 17783                           ;i2c_register.c: 208: UpdateOut_GP1();
 17784  14F3  27EF  3194         	fcall	_UpdateOut_GP1
 17785                           
 17786                           ;i2c_register.c: 209: break;
 17787  14F5  2D6E               	goto	i1l5709
 17788  14F6                     i1l5653:	
 17789                           
 17790                           ;i2c_register.c: 212: GP2REG = data;
 17791  14F6  084F               	movf	RegisterWrite@data,w
 17792  14F7  00C0               	movwf	_GP2REG	;volatile
 17793                           
 17794                           ;i2c_register.c: 213: UpdateOut_GP2();
 17795  14F8  3191  21BB  3194   	fcall	_UpdateOut_GP2
 17796                           
 17797                           ;i2c_register.c: 214: break;
 17798  14FB  2D6E               	goto	i1l5709
 17799  14FC                     i1l5657:	
 17800                           
 17801                           ;i2c_register.c: 218: if (C_ETYPE == 0) {
 17802  14FC  0838               	movf	_C_ETYPE,w	;volatile
 17803  14FD  1D03               	btfss	3,2
 17804  14FE  2D6E               	goto	i1l5709
 17805                           
 17806                           ;i2c_register.c: 219: GP3REG = data;
 17807  14FF  084F               	movf	RegisterWrite@data,w
 17808  1500  00BF               	movwf	_GP3REG	;volatile
 17809                           
 17810                           ;i2c_register.c: 220: UpdateOut_GP3();
 17811  1501  318C  24B9  3194   	fcall	_UpdateOut_GP3
 17812  1504  2D6E               	goto	i1l5709
 17813  1505                     i1l5663:	
 17814                           
 17815                           ;i2c_register.c: 227: ANTBOUNC = data;
 17816  1505  084F               	movf	RegisterWrite@data,w
 17817  1506  0021               	movlb	1	; select bank1
 17818  1507  00C6               	movwf	_ANTBOUNC^(0+128)	;volatile
 17819                           
 17820                           ;i2c_register.c: 228: DEBOUNCE = (uint16_t) ANTBOUNC * 10;
 17821  1508  0846               	movf	_ANTBOUNC^(0+128),w	;volatile
 17822  1509  00F0               	movwf	i1___wmul@multiplier
 17823  150A  300A               	movlw	10
 17824  150B  01F1               	clrf	i1___wmul@multiplier+1
 17825  150C  00F2               	movwf	i1___wmul@multiplicand
 17826  150D  01F3               	clrf	i1___wmul@multiplicand+1
 17827  150E  2584  3194         	fcall	i1___wmul
 17828  1510  0871               	movf	?i1___wmul+1,w
 17829  1511  0021               	movlb	1	; select bank1
 17830  1512  00A9               	movwf	(_DEBOUNCE+1)^(0+128)	;volatile
 17831  1513  0870               	movf	?i1___wmul,w
 17832  1514  00A8               	movwf	_DEBOUNCE^(0+128)	;volatile
 17833                           
 17834                           ;i2c_register.c: 229: break;
 17835  1515  2D6E               	goto	i1l5709
 17836  1516                     i1l5667:	
 17837                           
 17838                           ;i2c_register.c: 231: DPPERIOD = data;
 17839  1516  084F               	movf	RegisterWrite@data,w
 17840  1517  0021               	movlb	1	; select bank1
 17841  1518  00C5               	movwf	_DPPERIOD^(0+128)	;volatile
 17842                           
 17843                           ;i2c_register.c: 232: DoublePush = (uint16_t) DPPERIOD * 10;
 17844  1519  0845               	movf	_DPPERIOD^(0+128),w	;volatile
 17845  151A  00F0               	movwf	i1___wmul@multiplier
 17846  151B  300A               	movlw	10
 17847  151C  01F1               	clrf	i1___wmul@multiplier+1
 17848  151D  00F2               	movwf	i1___wmul@multiplicand
 17849  151E  01F3               	clrf	i1___wmul@multiplicand+1
 17850  151F  2584  3194         	fcall	i1___wmul
 17851  1521  0871               	movf	?i1___wmul+1,w
 17852  1522  0021               	movlb	1	; select bank1
 17853  1523  00A7               	movwf	(_DoublePush+1)^(0+128)	;volatile
 17854  1524  0870               	movf	?i1___wmul,w
 17855  1525  00A6               	movwf	_DoublePush^(0+128)	;volatile
 17856                           
 17857                           ;i2c_register.c: 233: break;
 17858  1526  2D6E               	goto	i1l5709
 17859  1527                     i1l5671:	
 17860                           
 17861                           ;i2c_register.c: 236: FADERGB = data;
 17862  1527  084F               	movf	RegisterWrite@data,w
 17863  1528  0021               	movlb	1	; select bank1
 17864  1529  00C4               	movwf	_FADERGB^(0+128)	;volatile
 17865                           
 17866                           ;i2c_register.c: 237: break;
 17867  152A  2D6E               	goto	i1l5709
 17868  152B                     i1l5673:	
 17869                           
 17870                           ;i2c_register.c: 240: FADEGP = data;
 17871  152B  084F               	movf	RegisterWrite@data,w
 17872  152C  00BE               	movwf	_FADEGP	;volatile
 17873                           
 17874                           ;i2c_register.c: 241: break;
 17875  152D  2D6E               	goto	i1l5709
 17876  152E                     i1l5675:	
 17877                           
 17878                           ;i2c_register.c: 244: GAMMAGP3_RLED = data;
 17879  152E  084F               	movf	RegisterWrite@data,w
 17880  152F  00BB               	movwf	_GAMMAGP3_RLED	;volatile
 17881                           
 17882                           ;i2c_register.c: 245: if (GAMMAGP3_RLED > 8)
 17883  1530  3009               	movlw	9
 17884  1531  023B               	subwf	_GAMMAGP3_RLED,w	;volatile
 17885  1532  1C03               	skipc
 17886  1533  2D6E               	goto	i1l5709
 17887                           
 17888                           ;i2c_register.c: 246: GAMMAGP3_RLED = 8;
 17889  1534  3008               	movlw	8
 17890  1535  00BB               	movwf	_GAMMAGP3_RLED	;volatile
 17891  1536  2D6E               	goto	i1l5709
 17892  1537                     i1l5679:	
 17893                           
 17894                           ;i2c_register.c: 250: GAMMAGLED = data;
 17895  1537  084F               	movf	RegisterWrite@data,w
 17896  1538  00BA               	movwf	_GAMMAGLED	;volatile
 17897                           
 17898                           ;i2c_register.c: 251: if (GAMMAGLED > 8)
 17899  1539  3009               	movlw	9
 17900  153A  023A               	subwf	_GAMMAGLED,w	;volatile
 17901  153B  1C03               	skipc
 17902  153C  2D6E               	goto	i1l5709
 17903                           
 17904                           ;i2c_register.c: 252: GAMMAGLED = 8;
 17905  153D  3008               	movlw	8
 17906  153E  00BA               	movwf	_GAMMAGLED	;volatile
 17907  153F  2D6E               	goto	i1l5709
 17908  1540                     i1l5683:	
 17909                           
 17910                           ;i2c_register.c: 256: GAMMABLED = data;
 17911  1540  084F               	movf	RegisterWrite@data,w
 17912  1541  00B9               	movwf	_GAMMABLED	;volatile
 17913                           
 17914                           ;i2c_register.c: 257: if (GAMMABLED > 8)
 17915  1542  3009               	movlw	9
 17916  1543  0239               	subwf	_GAMMABLED,w	;volatile
 17917  1544  1C03               	skipc
 17918  1545  2D6E               	goto	i1l5709
 17919                           
 17920                           ;i2c_register.c: 258: GAMMABLED = 8;
 17921  1546  3008               	movlw	8
 17922  1547  00B9               	movwf	_GAMMABLED	;volatile
 17923  1548  2D6E               	goto	i1l5709
 17924  1549                     i1l5687:	
 17925                           
 17926                           ;i2c_register.c: 262: GAMMAGP1 = data;
 17927  1549  084F               	movf	RegisterWrite@data,w
 17928  154A  00BD               	movwf	_GAMMAGP1	;volatile
 17929                           
 17930                           ;i2c_register.c: 263: if (GAMMAGP1 > 8)
 17931  154B  3009               	movlw	9
 17932  154C  023D               	subwf	_GAMMAGP1,w	;volatile
 17933  154D  1C03               	skipc
 17934  154E  2D6E               	goto	i1l5709
 17935                           
 17936                           ;i2c_register.c: 264: GAMMAGP1 = 8;
 17937  154F  3008               	movlw	8
 17938  1550  00BD               	movwf	_GAMMAGP1	;volatile
 17939  1551  2D6E               	goto	i1l5709
 17940  1552                     i1l5691:	
 17941                           
 17942                           ;i2c_register.c: 268: GAMMAGP2 = data;
 17943  1552  084F               	movf	RegisterWrite@data,w
 17944  1553  00BC               	movwf	_GAMMAGP2	;volatile
 17945                           
 17946                           ;i2c_register.c: 269: if (GAMMAGP2 > 8)
 17947  1554  3009               	movlw	9
 17948  1555  023C               	subwf	_GAMMAGP2,w	;volatile
 17949  1556  1C03               	skipc
 17950  1557  2D6E               	goto	i1l5709
 17951                           
 17952                           ;i2c_register.c: 270: GAMMAGP2 = 8;
 17953  1558  3008               	movlw	8
 17954  1559  00BC               	movwf	_GAMMAGP2	;volatile
 17955  155A  2D6E               	goto	i1l5709
 17956  155B                     i1l5695:	
 17957  155B  2D2E               	goto	i1l5675
 17958  155C                     i1l5699:	
 17959                           ;i2c_register.c: 275: if (GAMMAGP3_RLED > 8)
 17960                           
 17961                           ;i2c_register.c: 274: GAMMAGP3_RLED = data;
 17962                           
 17963                           
 17964                           ;i2c_register.c: 280: GCONF2 = data;
 17965  155C  084F               	movf	RegisterWrite@data,w
 17966  155D  0021               	movlb	1	; select bank1
 17967  155E  00C3               	movwf	_GCONF2^(0+128)	;volatile
 17968                           
 17969                           ;i2c_register.c: 281: SecondDataSplit();
 17970  155F  27E5  3194         	fcall	_SecondDataSplit
 17971                           
 17972                           ;i2c_register.c: 282: SecondConfig();
 17973  1561  27DD  3194         	fcall	_SecondConfig
 17974                           
 17975                           ;i2c_register.c: 283: break;
 17976  1563  2D6E               	goto	i1l5709
 17977  1564                     i1l5707:	
 17978  1564  0850               	movf	RegisterWrite@add,w
 17979                           
 17980                           ; Switch size 1, requested type "speed"
 17981                           ; Number of cases is 38, Range of values is 0 to 48
 17982                           ; switch strategies available:
 17983                           ; Name         Instructions Cycles
 17984                           ; direct_byte          104     6 (fixed)
 17985                           ; simple_byte          115    58 (average)
 17986                           ; jumptable            260     6 (fixed)
 17987                           ;	Chosen strategy is direct_byte
 17988  1565  0084               	movwf	4
 17989  1566  3031               	movlw	49
 17990  1567  0204               	subwf	4,w
 17991  1568  1803               	skipnc
 17992  1569  2D6E               	goto	i1l5709
 17993  156A  318C               	movlp	high i1S8551
 17994  156B  3504               	lslf	4,w
 17995  156C  3E57               	addlw	low i1S8551
 17996  156D  0082               	movwf	2
 17997  156E                     i1l5709:	
 17998                           
 17999                           ;i2c_register.c: 286: if (add >= REG_EEPROMS) {
 18000  156E  3080               	movlw	128
 18001  156F  0020               	movlb	0	; select bank0
 18002  1570  0250               	subwf	RegisterWrite@add,w
 18003  1571  1C03               	skipc
 18004  1572  0008               	return
 18005                           
 18006                           ;i2c_register.c: 288: if (C_MBANK == 0) {
 18007  1573  0021               	movlb	1	; select bank1
 18008  1574  0841               	movf	_C_MBANK^(0+128),w	;volatile
 18009  1575  1D03               	btfss	3,2
 18010  1576  2D7E               	goto	i1l5715
 18011                           
 18012                           ;i2c_register.c: 289: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 18013  1577  0020               	movlb	0	; select bank0
 18014  1578  084F               	movf	RegisterWrite@data,w
 18015  1579  00F0               	movwf	eeprom_write@value
 18016  157A  0850               	movf	RegisterWrite@add,w
 18017  157B  3E80               	addlw	128
 18018  157C  3191  29E0         	ljmp	_eeprom_write
 18019  157E                     i1l5715:	
 18020                           ;i2c_register.c: 291: } else {
 18021                           
 18022                           
 18023                           ;i2c_register.c: 292: eeprom_write((uint8_t) add, (uint8_t) data);
 18024  157E  0020               	movlb	0	; select bank0
 18025  157F  084F               	movf	RegisterWrite@data,w
 18026  1580  00F0               	movwf	eeprom_write@value
 18027  1581  0850               	movf	RegisterWrite@add,w
 18028  1582  3191  29E0         	ljmp	_eeprom_write
 18029  1584                     __end_of_RegisterWrite:	
 18030  1584                     __ptext72:	
 18031 ;; *************** function i1___wmul *****************
 18032 ;; Defined at:
 18033 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 18034 ;; Parameters:    Size  Location     Type
 18035 ;;  multiplier      2    0[COMMON] unsigned int 
 18036 ;;  multiplicand    2    2[COMMON] unsigned int 
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;  __wmul          2    4[COMMON] unsigned int 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  2    0[COMMON] unsigned int 
 18041 ;; Registers used:
 18042 ;;		wreg, status,2, status,0
 18043 ;; Tracked objects:
 18044 ;;		On entry : 1E/1
 18045 ;;		On exit  : 1E/0
 18046 ;;		Unchanged: 1E/0
 18047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18051 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18052 ;;Total ram usage:        6 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; This function calls:
 18055 ;;		Nothing
 18056 ;; This function is called by:
 18057 ;;		_RegisterWrite
 18058 ;;		i1_PWM_GP1
 18059 ;;		i1_PWM_GP2
 18060 ;;		i1_PWM_GP3_RLED
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           
 18065                           ;psect for function i1___wmul
 18066  1584                     i1___wmul:	
 18067                           
 18068                           ;incstack = 0
 18069                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 18070  1584  01F4               	clrf	i1___wmul@product
 18071  1585  01F5               	clrf	i1___wmul@product+1
 18072  1586                     i1l4801:	
 18073  1586  1C70               	btfss	i1___wmul@multiplier,0
 18074  1587  2D8C               	goto	i1l4805
 18075  1588  0872               	movf	i1___wmul@multiplicand,w
 18076  1589  07F4               	addwf	i1___wmul@product,f
 18077  158A  0873               	movf	i1___wmul@multiplicand+1,w
 18078  158B  3DF5               	addwfc	i1___wmul@product+1,f
 18079  158C                     i1l4805:	
 18080  158C  35F2               	lslf	i1___wmul@multiplicand,f
 18081  158D  0DF3               	rlf	i1___wmul@multiplicand+1,f
 18082  158E  36F1               	lsrf	i1___wmul@multiplier+1,f
 18083  158F  0CF0               	rrf	i1___wmul@multiplier,f
 18084  1590  0870               	movf	i1___wmul@multiplier,w
 18085  1591  0471               	iorwf	i1___wmul@multiplier+1,w
 18086  1592  1D03               	btfss	3,2
 18087  1593  2D86               	goto	i1l4801
 18088  1594  0875               	movf	i1___wmul@product+1,w
 18089  1595  00F1               	movwf	?i1___wmul+1
 18090  1596  0874               	movf	i1___wmul@product,w
 18091  1597  00F0               	movwf	?i1___wmul
 18092  1598  0008               	return
 18093  1599                     __end_ofi1___wmul:	
 18094  1599                     __ptext70:	
 18095 ;; *************** function _Config_GP1 *****************
 18096 ;; Defined at:
 18097 ;;		line 192 in file "GPports.c"
 18098 ;; Parameters:    Size  Location     Type
 18099 ;;		None
 18100 ;; Auto vars:     Size  Location     Type
 18101 ;;		None
 18102 ;; Return value:  Size  Location     Type
 18103 ;;                  1    wreg      void 
 18104 ;; Registers used:
 18105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18106 ;; Tracked objects:
 18107 ;;		On entry : 1F/0
 18108 ;;		On exit  : 1B/0
 18109 ;;		Unchanged: 0/0
 18110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18113 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18115 ;;Total ram usage:        2 bytes
 18116 ;; Hardware stack levels used:    1
 18117 ;; Hardware stack levels required when called:    2
 18118 ;; This function calls:
 18119 ;;		_PWM5_Initialize
 18120 ;;		i1_PWM_GP1
 18121 ;; This function is called by:
 18122 ;;		_RegisterWrite
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           
 18127                           ;psect for function _Config_GP1
 18128  1599                     _Config_GP1:	
 18129                           
 18130                           ;GPports.c: 194: PWM5CON = 0;
 18131                           
 18132                           ;incstack = 0
 18133                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18134  1599  002C               	movlb	12	; select bank12
 18135  159A  0199               	clrf	25	;volatile
 18136                           
 18137                           ;GPports.c: 195: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18138  159B  3055               	movlw	85
 18139  159C  003C               	movlb	28	; select bank28
 18140  159D  008F               	movwf	15	;volsfr
 18141  159E  30AA               	movlw	170
 18142  159F  008F               	movwf	15	;volsfr
 18143  15A0  100F               	bcf	15,0	;volsfr
 18144                           
 18145                           ;GPports.c: 196: RC7PPSbits.RC7PPS = 0x00;
 18146  15A1  30E0               	movlw	-32
 18147  15A2  003D               	movlb	29	; select bank29
 18148  15A3  05A7               	andwf	39,f	;volatile
 18149                           
 18150                           ;GPports.c: 197: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18151  15A4  3055               	movlw	85
 18152  15A5  003C               	movlb	28	; select bank28
 18153  15A6  008F               	movwf	15	;volsfr
 18154  15A7  30AA               	movlw	170
 18155  15A8  008F               	movwf	15	;volsfr
 18156  15A9  140F               	bsf	15,0	;volsfr
 18157                           
 18158                           ;GPports.c: 199: switch (GP1CONF & 0x03) {
 18159  15AA  2DDB               	goto	i1l5167
 18160  15AB                     i1l1162:	
 18161                           ;GPports.c: 201: do { ANSELCbits.ANSC7 = 0; } while(0);
 18162                           
 18163  15AB  0023               	movlb	3	; select bank3
 18164  15AC  138E               	bcf	14,7	;volatile
 18165                           
 18166                           ;GPports.c: 202: do { LATCbits.LATC7 = 1; } while(0);
 18167  15AD  0022               	movlb	2	; select bank2
 18168  15AE  178E               	bsf	14,7	;volatile
 18169                           
 18170                           ;GPports.c: 203: do { TRISCbits.TRISC7 = 0; } while(0);
 18171  15AF  0021               	movlb	1	; select bank1
 18172  15B0  138E               	bcf	14,7	;volatile
 18173                           
 18174                           ;GPports.c: 204: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18175  15B1  3055               	movlw	85
 18176  15B2  003C               	movlb	28	; select bank28
 18177  15B3  008F               	movwf	15	;volsfr
 18178  15B4  30AA               	movlw	170
 18179  15B5  008F               	movwf	15	;volsfr
 18180  15B6  100F               	bcf	15,0	;volsfr
 18181                           
 18182                           ;GPports.c: 205: RC7PPSbits.RC7PPS = 0x02;
 18183  15B7  003D               	movlb	29	; select bank29
 18184  15B8  0827               	movf	39,w	;volatile
 18185  15B9  39E0               	andlw	-32
 18186  15BA  3802               	iorlw	2
 18187  15BB  00A7               	movwf	39	;volatile
 18188                           
 18189                           ;GPports.c: 206: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18190  15BC  3055               	movlw	85
 18191  15BD  003C               	movlb	28	; select bank28
 18192  15BE  008F               	movwf	15	;volsfr
 18193  15BF  30AA               	movlw	170
 18194  15C0  008F               	movwf	15	;volsfr
 18195  15C1  140F               	bsf	15,0	;volsfr
 18196                           
 18197                           ;GPports.c: 207: PWM5_Initialize();
 18198  15C2  2608  3194         	fcall	_PWM5_Initialize
 18199                           
 18200                           ;GPports.c: 208: PWM_GP1(0);
 18201  15C4  3000               	movlw	0
 18202  15C5  2408  3194         	fcall	i1_PWM_GP1
 18203                           
 18204                           ;GPports.c: 209: break;
 18205  15C7  2DF5               	goto	i1l5171
 18206  15C8                     i1l1170:	
 18207                           ;GPports.c: 212: do { ANSELCbits.ANSC7 = 0; } while(0);
 18208                           
 18209  15C8  0023               	movlb	3	; select bank3
 18210  15C9  138E               	bcf	14,7	;volatile
 18211                           
 18212                           ;GPports.c: 213: do { TRISCbits.TRISC7 = 0; } while(0);
 18213  15CA  0021               	movlb	1	; select bank1
 18214  15CB  138E               	bcf	14,7	;volatile
 18215                           
 18216                           ;GPports.c: 214: do { ODCONCbits.ODCC7 = 0; } while(0);
 18217  15CC  0025               	movlb	5	; select bank5
 18218  15CD  138E               	bcf	14,7	;volatile
 18219  15CE  2DF5               	goto	i1l5171
 18220  15CF                     i1l1177:	
 18221                           ;GPports.c: 218: do { TRISCbits.TRISC7 = 1; } while(0);
 18222                           
 18223  15CF  0021               	movlb	1	; select bank1
 18224  15D0  178E               	bsf	14,7	;volatile
 18225                           
 18226                           ;GPports.c: 219: do { ANSELCbits.ANSC7 = 1; } while(0);
 18227  15D1  0023               	movlb	3	; select bank3
 18228  15D2  178E               	bsf	14,7	;volatile
 18229                           
 18230                           ;GPports.c: 220: PMD2bits.ADCMD = 0;
 18231  15D3  0032               	movlb	18	; select bank18
 18232  15D4  1293               	bcf	19,5	;volatile
 18233                           
 18234                           ;GPports.c: 221: break;
 18235  15D5  2DF5               	goto	i1l5171
 18236  15D6                     i1l1182:	
 18237                           ;GPports.c: 223: do { ANSELCbits.ANSC7 = 0; } while(0);
 18238                           
 18239  15D6  0023               	movlb	3	; select bank3
 18240  15D7  138E               	bcf	14,7	;volatile
 18241                           
 18242                           ;GPports.c: 224: do { TRISCbits.TRISC7 = 1; } while(0);
 18243  15D8  0021               	movlb	1	; select bank1
 18244  15D9  178E               	bsf	14,7	;volatile
 18245  15DA  2DF5               	goto	i1l5171
 18246  15DB                     i1l5167:	
 18247  15DB  0020               	movlb	0	; select bank0
 18248  15DC  0847               	movf	_GP1CONF,w	;volatile
 18249  15DD  3903               	andlw	3
 18250  15DE  00CD               	movwf	??_Config_GP1
 18251  15DF  01CE               	clrf	??_Config_GP1+1
 18252                           
 18253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18254                           ; Switch size 1, requested type "speed"
 18255                           ; Number of cases is 1, Range of values is 0 to 0
 18256                           ; switch strategies available:
 18257                           ; Name         Instructions Cycles
 18258                           ; simple_byte            4     3 (average)
 18259                           ; direct_byte            8     6 (fixed)
 18260                           ; jumptable            260     6 (fixed)
 18261                           ;	Chosen strategy is simple_byte
 18262  15E0  084E               	movf	??_Config_GP1+1,w
 18263  15E1  3A00               	xorlw	0	; case 0
 18264  15E2  1903               	skipnz
 18265  15E3  2DE5               	goto	i1l8565
 18266  15E4  2DF5               	goto	i1l5171
 18267  15E5                     i1l8565:	
 18268                           
 18269                           ; Switch size 1, requested type "speed"
 18270                           ; Number of cases is 4, Range of values is 0 to 3
 18271                           ; switch strategies available:
 18272                           ; Name         Instructions Cycles
 18273                           ; direct_byte           14     6 (fixed)
 18274                           ; simple_byte           13     7 (average)
 18275                           ; jumptable            260     6 (fixed)
 18276                           ;	Chosen strategy is direct_byte
 18277  15E5  084D               	movf	??_Config_GP1,w
 18278  15E6  0084               	movwf	4
 18279  15E7  3004               	movlw	4
 18280  15E8  0204               	subwf	4,w
 18281  15E9  1803               	skipnc
 18282  15EA  2DF5               	goto	i1l5171
 18283  15EB  3191               	movlp	high i1S8567
 18284  15EC  3504               	lslf	4,w
 18285  15ED  3E28               	addlw	low i1S8567
 18286  15EE  0082               	movwf	2
 18287  15EF                     i1l1188:	
 18288                           ;GPports.c: 230: do { WPUCbits.WPUC7 = 0; } while(0);
 18289                           
 18290  15EF  0024               	movlb	4	; select bank4
 18291  15F0  138E               	bcf	14,7	;volatile
 18292  15F1  0008               	return
 18293  15F2                     i1l1192:	
 18294                           ;GPports.c: 233: do { WPUCbits.WPUC7 = 1; } while(0);
 18295                           
 18296  15F2  0024               	movlb	4	; select bank4
 18297  15F3  178E               	bsf	14,7	;volatile
 18298  15F4  0008               	return
 18299  15F5                     i1l5171:	
 18300  15F5  0020               	movlb	0	; select bank0
 18301  15F6  0847               	movf	_GP1CONF,w	;volatile
 18302  15F7  3904               	andlw	4
 18303  15F8  00CD               	movwf	??_Config_GP1
 18304  15F9  01CE               	clrf	??_Config_GP1+1
 18305                           
 18306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18307                           ; Switch size 1, requested type "speed"
 18308                           ; Number of cases is 1, Range of values is 0 to 0
 18309                           ; switch strategies available:
 18310                           ; Name         Instructions Cycles
 18311                           ; simple_byte            4     3 (average)
 18312                           ; direct_byte            8     6 (fixed)
 18313                           ; jumptable            260     6 (fixed)
 18314                           ;	Chosen strategy is simple_byte
 18315  15FA  084E               	movf	??_Config_GP1+1,w
 18316  15FB  3A00               	xorlw	0	; case 0
 18317  15FC  1903               	skipnz
 18318  15FD  2DFF               	goto	i1l8569
 18319  15FE  2E07               	goto	i1l1194
 18320  15FF                     i1l8569:	
 18321                           
 18322                           ; Switch size 1, requested type "speed"
 18323                           ; Number of cases is 2, Range of values is 0 to 4
 18324                           ; switch strategies available:
 18325                           ; Name         Instructions Cycles
 18326                           ; simple_byte            7     4 (average)
 18327                           ; direct_byte           16     6 (fixed)
 18328                           ; jumptable            260     6 (fixed)
 18329                           ;	Chosen strategy is simple_byte
 18330  15FF  084D               	movf	??_Config_GP1,w
 18331  1600  3A00               	xorlw	0	; case 0
 18332  1601  1903               	skipnz
 18333  1602  2DEF               	goto	i1l1188
 18334  1603  3A04               	xorlw	4	; case 4
 18335  1604  1903               	skipnz
 18336  1605  2DF2               	goto	i1l1192
 18337  1606  2E07               	goto	i1l1194
 18338  1607                     i1l1194:	
 18339  1607  0008               	return
 18340  1608                     __end_of_Config_GP1:	
 18341  1608                     __ptext73:	
 18342 ;; *************** function _PWM5_Initialize *****************
 18343 ;; Defined at:
 18344 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;		None
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      void 
 18351 ;; Registers used:
 18352 ;;		wreg, status,2, status,0
 18353 ;; Tracked objects:
 18354 ;;		On entry : 1F/1C
 18355 ;;		On exit  : 1F/C
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18362 ;;Total ram usage:        0 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; This function calls:
 18365 ;;		Nothing
 18366 ;; This function is called by:
 18367 ;;		_Config_GP1
 18368 ;; This function uses a non-reentrant model
 18369 ;;
 18370                           
 18371                           
 18372                           ;psect for function _PWM5_Initialize
 18373  1608                     _PWM5_Initialize:	
 18374                           
 18375                           ;pwm5.c: 62: PWM5CON = 0x80;
 18376                           
 18377                           ;incstack = 0
 18378                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 18379  1608  3080               	movlw	128
 18380  1609  002C               	movlb	12	; select bank12
 18381  160A  0099               	movwf	25	;volatile
 18382                           
 18383                           ;pwm5.c: 65: PWM5DCH = 0x00;
 18384  160B  0198               	clrf	24	;volatile
 18385                           
 18386                           ;pwm5.c: 68: PWM5DCL = 0x00;
 18387  160C  0197               	clrf	23	;volatile
 18388                           
 18389                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 1;
 18390  160D  081F               	movf	31,w	;volatile
 18391  160E  39FC               	andlw	-4
 18392  160F  3801               	iorlw	1
 18393  1610  009F               	movwf	31	;volatile
 18394  1611  0008               	return
 18395  1612                     __end_of_PWM5_Initialize:	
 18396  1612                     __ptext67:	
 18397 ;; *************** function _Config_GP2 *****************
 18398 ;; Defined at:
 18399 ;;		line 243 in file "GPports.c"
 18400 ;; Parameters:    Size  Location     Type
 18401 ;;		None
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;		None
 18404 ;; Return value:  Size  Location     Type
 18405 ;;                  1    wreg      void 
 18406 ;; Registers used:
 18407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18408 ;; Tracked objects:
 18409 ;;		On entry : 1F/0
 18410 ;;		On exit  : 1B/0
 18411 ;;		Unchanged: 0/0
 18412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;Total ram usage:        2 bytes
 18418 ;; Hardware stack levels used:    1
 18419 ;; Hardware stack levels required when called:    2
 18420 ;; This function calls:
 18421 ;;		_PWM4_Initialize
 18422 ;;		i1_PWM_GP2
 18423 ;; This function is called by:
 18424 ;;		_RegisterWrite
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           
 18429                           ;psect for function _Config_GP2
 18430  1612                     _Config_GP2:	
 18431                           
 18432                           ;GPports.c: 245: CCP4CON = 0;
 18433                           
 18434                           ;incstack = 0
 18435                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18436  1612  0026               	movlb	6	; select bank6
 18437  1613  0197               	clrf	23	;volatile
 18438                           
 18439                           ;GPports.c: 246: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18440  1614  3055               	movlw	85
 18441  1615  003C               	movlb	28	; select bank28
 18442  1616  008F               	movwf	15	;volsfr
 18443  1617  30AA               	movlw	170
 18444  1618  008F               	movwf	15	;volsfr
 18445  1619  100F               	bcf	15,0	;volsfr
 18446                           
 18447                           ;GPports.c: 247: RC6PPSbits.RC6PPS = 0x00;
 18448  161A  30E0               	movlw	-32
 18449  161B  003D               	movlb	29	; select bank29
 18450  161C  05A6               	andwf	38,f	;volatile
 18451                           
 18452                           ;GPports.c: 248: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18453  161D  3055               	movlw	85
 18454  161E  003C               	movlb	28	; select bank28
 18455  161F  008F               	movwf	15	;volsfr
 18456  1620  30AA               	movlw	170
 18457  1621  008F               	movwf	15	;volsfr
 18458  1622  140F               	bsf	15,0	;volsfr
 18459                           
 18460                           ;GPports.c: 250: switch (GP2CONF & 0x03) {
 18461  1623  2E54               	goto	i1l5219
 18462  1624                     i1l1199:	
 18463                           ;GPports.c: 252: do { ANSELCbits.ANSC6 = 0; } while(0);
 18464                           
 18465  1624  0023               	movlb	3	; select bank3
 18466  1625  130E               	bcf	14,6	;volatile
 18467                           
 18468                           ;GPports.c: 253: do { LATCbits.LATC6 = 1; } while(0);
 18469  1626  0022               	movlb	2	; select bank2
 18470  1627  170E               	bsf	14,6	;volatile
 18471                           
 18472                           ;GPports.c: 254: do { TRISCbits.TRISC6 = 0; } while(0);
 18473  1628  0021               	movlb	1	; select bank1
 18474  1629  130E               	bcf	14,6	;volatile
 18475                           
 18476                           ;GPports.c: 255: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18477  162A  3055               	movlw	85
 18478  162B  003C               	movlb	28	; select bank28
 18479  162C  008F               	movwf	15	;volsfr
 18480  162D  30AA               	movlw	170
 18481  162E  008F               	movwf	15	;volsfr
 18482  162F  100F               	bcf	15,0	;volsfr
 18483                           
 18484                           ;GPports.c: 256: RC6PPSbits.RC6PPS = 0x0F;
 18485  1630  003D               	movlb	29	; select bank29
 18486  1631  0826               	movf	38,w	;volatile
 18487  1632  39E0               	andlw	-32
 18488  1633  380F               	iorlw	15
 18489  1634  00A6               	movwf	38	;volatile
 18490                           
 18491                           ;GPports.c: 257: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18492  1635  3055               	movlw	85
 18493  1636  003C               	movlb	28	; select bank28
 18494  1637  008F               	movwf	15	;volsfr
 18495  1638  30AA               	movlw	170
 18496  1639  008F               	movwf	15	;volsfr
 18497  163A  140F               	bsf	15,0	;volsfr
 18498                           
 18499                           ;GPports.c: 258: PWM4_Initialize();
 18500  163B  2681  3194         	fcall	_PWM4_Initialize
 18501                           
 18502                           ;GPports.c: 259: PWM_GP2(0);
 18503  163D  3000               	movlw	0
 18504  163E  268E  3194         	fcall	i1_PWM_GP2
 18505                           
 18506                           ;GPports.c: 260: break;
 18507  1640  2E6E               	goto	i1l5223
 18508  1641                     i1l1207:	
 18509                           ;GPports.c: 263: do { ANSELCbits.ANSC6 = 0; } while(0);
 18510                           
 18511  1641  0023               	movlb	3	; select bank3
 18512  1642  130E               	bcf	14,6	;volatile
 18513                           
 18514                           ;GPports.c: 264: do { TRISCbits.TRISC6 = 0; } while(0);
 18515  1643  0021               	movlb	1	; select bank1
 18516  1644  130E               	bcf	14,6	;volatile
 18517                           
 18518                           ;GPports.c: 265: do { ODCONCbits.ODCC6 = 0; } while(0);
 18519  1645  0025               	movlb	5	; select bank5
 18520  1646  130E               	bcf	14,6	;volatile
 18521  1647  2E6E               	goto	i1l5223
 18522  1648                     i1l1214:	
 18523                           ;GPports.c: 269: do { TRISCbits.TRISC6 = 1; } while(0);
 18524                           
 18525  1648  0021               	movlb	1	; select bank1
 18526  1649  170E               	bsf	14,6	;volatile
 18527                           
 18528                           ;GPports.c: 270: do { ANSELCbits.ANSC6 = 1; } while(0);
 18529  164A  0023               	movlb	3	; select bank3
 18530  164B  170E               	bsf	14,6	;volatile
 18531                           
 18532                           ;GPports.c: 271: PMD2bits.ADCMD = 0;
 18533  164C  0032               	movlb	18	; select bank18
 18534  164D  1293               	bcf	19,5	;volatile
 18535                           
 18536                           ;GPports.c: 272: break;
 18537  164E  2E6E               	goto	i1l5223
 18538  164F                     i1l1219:	
 18539                           ;GPports.c: 275: do { ANSELCbits.ANSC6 = 0; } while(0);
 18540                           
 18541  164F  0023               	movlb	3	; select bank3
 18542  1650  130E               	bcf	14,6	;volatile
 18543                           
 18544                           ;GPports.c: 276: do { TRISCbits.TRISC6 = 1; } while(0);
 18545  1651  0021               	movlb	1	; select bank1
 18546  1652  170E               	bsf	14,6	;volatile
 18547  1653  2E6E               	goto	i1l5223
 18548  1654                     i1l5219:	
 18549  1654  0020               	movlb	0	; select bank0
 18550  1655  0846               	movf	_GP2CONF,w	;volatile
 18551  1656  3903               	andlw	3
 18552  1657  00CC               	movwf	??_Config_GP2
 18553  1658  01CD               	clrf	??_Config_GP2+1
 18554                           
 18555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18556                           ; Switch size 1, requested type "speed"
 18557                           ; Number of cases is 1, Range of values is 0 to 0
 18558                           ; switch strategies available:
 18559                           ; Name         Instructions Cycles
 18560                           ; simple_byte            4     3 (average)
 18561                           ; direct_byte            8     6 (fixed)
 18562                           ; jumptable            260     6 (fixed)
 18563                           ;	Chosen strategy is simple_byte
 18564  1659  084D               	movf	??_Config_GP2+1,w
 18565  165A  3A00               	xorlw	0	; case 0
 18566  165B  1903               	skipnz
 18567  165C  2E5E               	goto	i1l8559
 18568  165D  2E6E               	goto	i1l5223
 18569  165E                     i1l8559:	
 18570                           
 18571                           ; Switch size 1, requested type "speed"
 18572                           ; Number of cases is 4, Range of values is 0 to 3
 18573                           ; switch strategies available:
 18574                           ; Name         Instructions Cycles
 18575                           ; direct_byte           14     6 (fixed)
 18576                           ; simple_byte           13     7 (average)
 18577                           ; jumptable            260     6 (fixed)
 18578                           ;	Chosen strategy is direct_byte
 18579  165E  084C               	movf	??_Config_GP2,w
 18580  165F  0084               	movwf	4
 18581  1660  3004               	movlw	4
 18582  1661  0204               	subwf	4,w
 18583  1662  1803               	skipnc
 18584  1663  2E6E               	goto	i1l5223
 18585  1664  3191               	movlp	high i1S8561
 18586  1665  3504               	lslf	4,w
 18587  1666  3E20               	addlw	low i1S8561
 18588  1667  0082               	movwf	2
 18589  1668                     i1l1225:	
 18590                           ;GPports.c: 282: do { WPUCbits.WPUC6 = 0; } while(0);
 18591                           
 18592  1668  0024               	movlb	4	; select bank4
 18593  1669  130E               	bcf	14,6	;volatile
 18594  166A  0008               	return
 18595  166B                     i1l1229:	
 18596                           ;GPports.c: 285: do { WPUCbits.WPUC6 = 1; } while(0);
 18597                           
 18598  166B  0024               	movlb	4	; select bank4
 18599  166C  170E               	bsf	14,6	;volatile
 18600  166D  0008               	return
 18601  166E                     i1l5223:	
 18602  166E  0020               	movlb	0	; select bank0
 18603  166F  0846               	movf	_GP2CONF,w	;volatile
 18604  1670  3904               	andlw	4
 18605  1671  00CC               	movwf	??_Config_GP2
 18606  1672  01CD               	clrf	??_Config_GP2+1
 18607                           
 18608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18609                           ; Switch size 1, requested type "speed"
 18610                           ; Number of cases is 1, Range of values is 0 to 0
 18611                           ; switch strategies available:
 18612                           ; Name         Instructions Cycles
 18613                           ; simple_byte            4     3 (average)
 18614                           ; direct_byte            8     6 (fixed)
 18615                           ; jumptable            260     6 (fixed)
 18616                           ;	Chosen strategy is simple_byte
 18617  1673  084D               	movf	??_Config_GP2+1,w
 18618  1674  3A00               	xorlw	0	; case 0
 18619  1675  1903               	skipnz
 18620  1676  2E78               	goto	i1l8563
 18621  1677  2E80               	goto	i1l1231
 18622  1678                     i1l8563:	
 18623                           
 18624                           ; Switch size 1, requested type "speed"
 18625                           ; Number of cases is 2, Range of values is 0 to 4
 18626                           ; switch strategies available:
 18627                           ; Name         Instructions Cycles
 18628                           ; simple_byte            7     4 (average)
 18629                           ; direct_byte           16     6 (fixed)
 18630                           ; jumptable            260     6 (fixed)
 18631                           ;	Chosen strategy is simple_byte
 18632  1678  084C               	movf	??_Config_GP2,w
 18633  1679  3A00               	xorlw	0	; case 0
 18634  167A  1903               	skipnz
 18635  167B  2E68               	goto	i1l1225
 18636  167C  3A04               	xorlw	4	; case 4
 18637  167D  1903               	skipnz
 18638  167E  2E6B               	goto	i1l1229
 18639  167F  2E80               	goto	i1l1231
 18640  1680                     i1l1231:	
 18641  1680  0008               	return
 18642  1681                     __end_of_Config_GP2:	
 18643  1681                     __ptext69:	
 18644 ;; *************** function _PWM4_Initialize *****************
 18645 ;; Defined at:
 18646 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 18647 ;; Parameters:    Size  Location     Type
 18648 ;;		None
 18649 ;; Auto vars:     Size  Location     Type
 18650 ;;		None
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      void 
 18653 ;; Registers used:
 18654 ;;		wreg, status,2, status,0
 18655 ;; Tracked objects:
 18656 ;;		On entry : 1F/1C
 18657 ;;		On exit  : 1F/5
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18664 ;;Total ram usage:        0 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; This function calls:
 18667 ;;		Nothing
 18668 ;; This function is called by:
 18669 ;;		_Config_GP2
 18670 ;; This function uses a non-reentrant model
 18671 ;;
 18672                           
 18673                           
 18674                           ;psect for function _PWM4_Initialize
 18675  1681                     _PWM4_Initialize:	
 18676                           
 18677                           ;pwm4.c: 69: CCP4CON = 0x8F;
 18678                           
 18679                           ;incstack = 0
 18680                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 18681  1681  308F               	movlw	143
 18682  1682  0026               	movlb	6	; select bank6
 18683  1683  0097               	movwf	23	;volatile
 18684                           
 18685                           ;pwm4.c: 72: CCPR4H = 0x03;
 18686  1684  3003               	movlw	3
 18687  1685  0096               	movwf	22	;volatile
 18688                           
 18689                           ;pwm4.c: 75: CCPR4L = 0xFF;
 18690  1686  30FF               	movlw	255
 18691  1687  0095               	movwf	21	;volatile
 18692                           
 18693                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x1;
 18694  1688  0025               	movlb	5	; select bank5
 18695  1689  081F               	movf	31,w	;volatile
 18696  168A  393F               	andlw	-193
 18697  168B  3840               	iorlw	64
 18698  168C  009F               	movwf	31	;volatile
 18699  168D  0008               	return
 18700  168E                     __end_of_PWM4_Initialize:	
 18701  168E                     __ptext68:	
 18702 ;; *************** function i1_PWM_GP2 *****************
 18703 ;; Defined at:
 18704 ;;		line 64 in file "PWM.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;  duty            1    wreg     unsigned char 
 18707 ;; Auto vars:     Size  Location     Type
 18708 ;;  duty            1   12[COMMON] unsigned char 
 18709 ;; Return value:  Size  Location     Type
 18710 ;;                  1    wreg      void 
 18711 ;; Registers used:
 18712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18713 ;; Tracked objects:
 18714 ;;		On entry : 1F/5
 18715 ;;		On exit  : 1F/6
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18720 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18722 ;;Total ram usage:        7 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; Hardware stack levels required when called:    1
 18725 ;; This function calls:
 18726 ;;		i1___wmul
 18727 ;; This function is called by:
 18728 ;;		_Config_GP2
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           
 18733                           ;psect for function i1_PWM_GP2
 18734  168E                     i1_PWM_GP2:	
 18735                           
 18736                           ;incstack = 0
 18737                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18738                           ;i1PWM_GP2@duty stored from wreg
 18739  168E  00FC               	movwf	i1PWM_GP2@duty
 18740                           
 18741                           ;PWM.c: 66: if (duty == 0) {
 18742  168F  087C               	movf	i1PWM_GP2@duty,w
 18743  1690  1D03               	btfss	3,2
 18744  1691  2EA6               	goto	i1l4955
 18745                           
 18746                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 18747  1692  0022               	movlb	2	; select bank2
 18748  1693  170E               	bsf	14,6	;volatile
 18749                           
 18750                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18751  1694  3055               	movlw	85
 18752  1695  003C               	movlb	28	; select bank28
 18753  1696  008F               	movwf	15	;volsfr
 18754  1697  30AA               	movlw	170
 18755  1698  008F               	movwf	15	;volsfr
 18756  1699  100F               	bcf	15,0	;volsfr
 18757                           
 18758                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 18759  169A  30E0               	movlw	-32
 18760  169B  003D               	movlb	29	; select bank29
 18761  169C  05A6               	andwf	38,f	;volatile
 18762                           
 18763                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18764  169D  3055               	movlw	85
 18765  169E  003C               	movlb	28	; select bank28
 18766  169F  008F               	movwf	15	;volsfr
 18767  16A0  30AA               	movlw	170
 18768  16A1  008F               	movwf	15	;volsfr
 18769  16A2  140F               	bsf	15,0	;volsfr
 18770                           
 18771                           ;PWM.c: 72: CCP4CON = 0;
 18772  16A3  0026               	movlb	6	; select bank6
 18773  16A4  0197               	clrf	23	;volatile
 18774  16A5  0008               	return
 18775  16A6                     i1l4955:	
 18776                           
 18777                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 18778  16A6  0026               	movlb	6	; select bank6
 18779  16A7  0817               	movf	23,w	;volatile
 18780  16A8  1D03               	btfss	3,2
 18781  16A9  2EBE               	goto	i1l1558
 18782                           
 18783                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18784  16AA  3055               	movlw	85
 18785  16AB  003C               	movlb	28	; select bank28
 18786  16AC  008F               	movwf	15	;volsfr
 18787  16AD  30AA               	movlw	170
 18788  16AE  008F               	movwf	15	;volsfr
 18789  16AF  100F               	bcf	15,0	;volsfr
 18790                           
 18791                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 18792  16B0  003D               	movlb	29	; select bank29
 18793  16B1  0826               	movf	38,w	;volatile
 18794  16B2  39E0               	andlw	-32
 18795  16B3  380F               	iorlw	15
 18796  16B4  00A6               	movwf	38	;volatile
 18797                           
 18798                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18799  16B5  3055               	movlw	85
 18800  16B6  003C               	movlb	28	; select bank28
 18801  16B7  008F               	movwf	15	;volsfr
 18802  16B8  30AA               	movlw	170
 18803  16B9  008F               	movwf	15	;volsfr
 18804  16BA  140F               	bsf	15,0	;volsfr
 18805                           
 18806                           ;PWM.c: 79: CCP4CON = 0x8F;
 18807  16BB  308F               	movlw	143
 18808  16BC  0026               	movlb	6	; select bank6
 18809  16BD  0097               	movwf	23	;volatile
 18810  16BE                     i1l1558:	
 18811                           
 18812                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 18813  16BE  0020               	movlb	0	; select bank0
 18814  16BF  083C               	movf	_GAMMAGP2,w	;volatile
 18815  16C0  1D03               	btfss	3,2
 18816  16C1  2ECF               	goto	i1l4973
 18817                           
 18818                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 18819  16C2  097C               	comf	i1PWM_GP2@duty,w
 18820  16C3  00F6               	movwf	??i1_PWM_GP2
 18821  16C4  01F7               	clrf	??i1_PWM_GP2+1
 18822  16C5  35F6               	lslf	??i1_PWM_GP2,f
 18823  16C6  0DF7               	rlf	??i1_PWM_GP2+1,f
 18824  16C7  35F6               	lslf	??i1_PWM_GP2,f
 18825  16C8  0DF7               	rlf	??i1_PWM_GP2+1,f
 18826  16C9  0876               	movf	??i1_PWM_GP2,w
 18827  16CA  0026               	movlb	6	; select bank6
 18828  16CB  0095               	movwf	21	;volatile
 18829  16CC  0877               	movf	??i1_PWM_GP2+1,w
 18830  16CD  0096               	movwf	22	;volatile
 18831                           
 18832                           ;PWM.c: 85: } else {
 18833  16CE  0008               	return
 18834  16CF                     i1l4973:	
 18835                           
 18836                           ;PWM.c: 86: if (duty > 100)
 18837  16CF  3065               	movlw	101
 18838  16D0  027C               	subwf	i1PWM_GP2@duty,w
 18839  16D1  1C03               	skipc
 18840  16D2  2ED5               	goto	i1l4977
 18841                           
 18842                           ;PWM.c: 87: duty = 100;
 18843  16D3  3064               	movlw	100
 18844  16D4  00FC               	movwf	i1PWM_GP2@duty
 18845  16D5                     i1l4977:	
 18846                           
 18847                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 18848  16D5  087C               	movf	i1PWM_GP2@duty,w
 18849  16D6  00F6               	movwf	??i1_PWM_GP2
 18850  16D7  01F7               	clrf	??i1_PWM_GP2+1
 18851  16D8  35F6               	lslf	??i1_PWM_GP2,f
 18852  16D9  0DF7               	rlf	??i1_PWM_GP2+1,f
 18853  16DA  083C               	movf	_GAMMAGP2,w	;volatile
 18854  16DB  00F0               	movwf	i1___wmul@multiplier
 18855  16DC  30C8               	movlw	200
 18856  16DD  01F1               	clrf	i1___wmul@multiplier+1
 18857  16DE  00F2               	movwf	i1___wmul@multiplicand
 18858  16DF  01F3               	clrf	i1___wmul@multiplicand+1
 18859  16E0  2584               	fcall	i1___wmul
 18860  16E1  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 18861  16E2  00F8               	movwf	??i1_PWM_GP2+2
 18862  16E3  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 18863  16E4  00F9               	movwf	??i1_PWM_GP2+3
 18864  16E5  0870               	movf	?i1___wmul,w
 18865  16E6  0778               	addwf	??i1_PWM_GP2+2,w
 18866  16E7  00FA               	movwf	??i1_PWM_GP2+4
 18867  16E8  0871               	movf	?i1___wmul+1,w
 18868  16E9  3D79               	addwfc	??i1_PWM_GP2+3,w
 18869  16EA  00FB               	movwf	??i1_PWM_GP2+5
 18870  16EB  087A               	movf	??i1_PWM_GP2+4,w
 18871  16EC  0776               	addwf	??i1_PWM_GP2,w
 18872  16ED  0084               	movwf	4
 18873  16EE  087B               	movf	??i1_PWM_GP2+5,w
 18874  16EF  3D77               	addwfc	??i1_PWM_GP2+1,w
 18875  16F0  0085               	movwf	5
 18876  16F1  3F00               	moviw [0]fsr0
 18877  16F2  0026               	movlb	6	; select bank6
 18878  16F3  0095               	movwf	21	;volatile
 18879  16F4  3F01               	moviw [1]fsr0
 18880  16F5  0096               	movwf	22	;volatile
 18881  16F6  0008               	return
 18882  16F7                     __end_ofi1_PWM_GP2:	
 18883  16F7                     __ptext64:	
 18884 ;; *************** function _Config_GP3 *****************
 18885 ;; Defined at:
 18886 ;;		line 295 in file "GPports.c"
 18887 ;; Parameters:    Size  Location     Type
 18888 ;;		None
 18889 ;; Auto vars:     Size  Location     Type
 18890 ;;		None
 18891 ;; Return value:  Size  Location     Type
 18892 ;;                  1    wreg      void 
 18893 ;; Registers used:
 18894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18895 ;; Tracked objects:
 18896 ;;		On entry : 1F/0
 18897 ;;		On exit  : 1B/0
 18898 ;;		Unchanged: 0/0
 18899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18904 ;;Total ram usage:        2 bytes
 18905 ;; Hardware stack levels used:    1
 18906 ;; Hardware stack levels required when called:    2
 18907 ;; This function calls:
 18908 ;;		_PWM1_Initialize
 18909 ;;		i1_PWM_GP3_RLED
 18910 ;; This function is called by:
 18911 ;;		_RegisterWrite
 18912 ;; This function uses a non-reentrant model
 18913 ;;
 18914                           
 18915                           
 18916                           ;psect for function _Config_GP3
 18917  16F7                     _Config_GP3:	
 18918                           
 18919                           ;GPports.c: 296: CCP1CON = 0;
 18920                           
 18921                           ;incstack = 0
 18922                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18923  16F7  0025               	movlb	5	; select bank5
 18924  16F8  0193               	clrf	19	;volatile
 18925                           
 18926                           ;GPports.c: 297: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18927  16F9  3055               	movlw	85
 18928  16FA  003C               	movlb	28	; select bank28
 18929  16FB  008F               	movwf	15	;volsfr
 18930  16FC  30AA               	movlw	170
 18931  16FD  008F               	movwf	15	;volsfr
 18932  16FE  100F               	bcf	15,0	;volsfr
 18933                           
 18934                           ;GPports.c: 298: RC5PPSbits.RC5PPS = 0x00;
 18935  16FF  30E0               	movlw	-32
 18936  1700  003D               	movlb	29	; select bank29
 18937  1701  05A5               	andwf	37,f	;volatile
 18938                           
 18939                           ;GPports.c: 299: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18940  1702  3055               	movlw	85
 18941  1703  003C               	movlb	28	; select bank28
 18942  1704  008F               	movwf	15	;volsfr
 18943  1705  30AA               	movlw	170
 18944  1706  008F               	movwf	15	;volsfr
 18945  1707  140F               	bsf	15,0	;volsfr
 18946                           
 18947                           ;GPports.c: 301: switch (GP3CONF & 0x03) {
 18948  1708  2F39               	goto	i1l5271
 18949  1709                     i1l1236:	
 18950                           ;GPports.c: 303: do { ANSELCbits.ANSC5 = 0; } while(0);
 18951                           
 18952  1709  0023               	movlb	3	; select bank3
 18953  170A  128E               	bcf	14,5	;volatile
 18954                           
 18955                           ;GPports.c: 304: do { LATCbits.LATC5 = 1; } while(0);
 18956  170B  0022               	movlb	2	; select bank2
 18957  170C  168E               	bsf	14,5	;volatile
 18958                           
 18959                           ;GPports.c: 305: do { TRISCbits.TRISC5 = 0; } while(0);
 18960  170D  0021               	movlb	1	; select bank1
 18961  170E  128E               	bcf	14,5	;volatile
 18962                           
 18963                           ;GPports.c: 306: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18964  170F  3055               	movlw	85
 18965  1710  003C               	movlb	28	; select bank28
 18966  1711  008F               	movwf	15	;volsfr
 18967  1712  30AA               	movlw	170
 18968  1713  008F               	movwf	15	;volsfr
 18969  1714  100F               	bcf	15,0	;volsfr
 18970                           
 18971                           ;GPports.c: 307: RC5PPSbits.RC5PPS = 0x0C;
 18972  1715  003D               	movlb	29	; select bank29
 18973  1716  0825               	movf	37,w	;volatile
 18974  1717  39E0               	andlw	-32
 18975  1718  380C               	iorlw	12
 18976  1719  00A5               	movwf	37	;volatile
 18977                           
 18978                           ;GPports.c: 308: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18979  171A  3055               	movlw	85
 18980  171B  003C               	movlb	28	; select bank28
 18981  171C  008F               	movwf	15	;volsfr
 18982  171D  30AA               	movlw	170
 18983  171E  008F               	movwf	15	;volsfr
 18984  171F  140F               	bsf	15,0	;volsfr
 18985                           
 18986                           ;GPports.c: 309: PWM1_Initialize();
 18987  1720  2766  3194         	fcall	_PWM1_Initialize
 18988                           
 18989                           ;GPports.c: 310: PWM_GP3_RLED(0);
 18990  1722  3000               	movlw	0
 18991  1723  2772  3194         	fcall	i1_PWM_GP3_RLED
 18992                           
 18993                           ;GPports.c: 311: break;
 18994  1725  2F53               	goto	i1l5275
 18995  1726                     i1l1244:	
 18996                           ;GPports.c: 314: do { ANSELCbits.ANSC5 = 0; } while(0);
 18997                           
 18998  1726  0023               	movlb	3	; select bank3
 18999  1727  128E               	bcf	14,5	;volatile
 19000                           
 19001                           ;GPports.c: 315: do { TRISCbits.TRISC5 = 0; } while(0);
 19002  1728  0021               	movlb	1	; select bank1
 19003  1729  128E               	bcf	14,5	;volatile
 19004                           
 19005                           ;GPports.c: 316: do { ODCONCbits.ODCC5 = 0; } while(0);
 19006  172A  0025               	movlb	5	; select bank5
 19007  172B  128E               	bcf	14,5	;volatile
 19008  172C  2F53               	goto	i1l5275
 19009  172D                     i1l1251:	
 19010                           ;GPports.c: 320: do { TRISCbits.TRISC5 = 1; } while(0);
 19011                           
 19012  172D  0021               	movlb	1	; select bank1
 19013  172E  168E               	bsf	14,5	;volatile
 19014                           
 19015                           ;GPports.c: 321: do { ANSELCbits.ANSC5 = 1; } while(0);
 19016  172F  0023               	movlb	3	; select bank3
 19017  1730  168E               	bsf	14,5	;volatile
 19018                           
 19019                           ;GPports.c: 322: PMD2bits.ADCMD = 0;
 19020  1731  0032               	movlb	18	; select bank18
 19021  1732  1293               	bcf	19,5	;volatile
 19022                           
 19023                           ;GPports.c: 323: break;
 19024  1733  2F53               	goto	i1l5275
 19025  1734                     i1l1256:	
 19026                           ;GPports.c: 326: do { ANSELCbits.ANSC5 = 0; } while(0);
 19027                           
 19028  1734  0023               	movlb	3	; select bank3
 19029  1735  128E               	bcf	14,5	;volatile
 19030                           
 19031                           ;GPports.c: 327: do { TRISCbits.TRISC5 = 1; } while(0);
 19032  1736  0021               	movlb	1	; select bank1
 19033  1737  168E               	bsf	14,5	;volatile
 19034  1738  2F53               	goto	i1l5275
 19035  1739                     i1l5271:	
 19036  1739  0020               	movlb	0	; select bank0
 19037  173A  0845               	movf	_GP3CONF,w	;volatile
 19038  173B  3903               	andlw	3
 19039  173C  00CC               	movwf	??_Config_GP3
 19040  173D  01CD               	clrf	??_Config_GP3+1
 19041                           
 19042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19043                           ; Switch size 1, requested type "speed"
 19044                           ; Number of cases is 1, Range of values is 0 to 0
 19045                           ; switch strategies available:
 19046                           ; Name         Instructions Cycles
 19047                           ; simple_byte            4     3 (average)
 19048                           ; direct_byte            8     6 (fixed)
 19049                           ; jumptable            260     6 (fixed)
 19050                           ;	Chosen strategy is simple_byte
 19051  173E  084D               	movf	??_Config_GP3+1,w
 19052  173F  3A00               	xorlw	0	; case 0
 19053  1740  1903               	skipnz
 19054  1741  2F43               	goto	i1l8553
 19055  1742  2F53               	goto	i1l5275
 19056  1743                     i1l8553:	
 19057                           
 19058                           ; Switch size 1, requested type "speed"
 19059                           ; Number of cases is 4, Range of values is 0 to 3
 19060                           ; switch strategies available:
 19061                           ; Name         Instructions Cycles
 19062                           ; direct_byte           14     6 (fixed)
 19063                           ; simple_byte           13     7 (average)
 19064                           ; jumptable            260     6 (fixed)
 19065                           ;	Chosen strategy is direct_byte
 19066  1743  084C               	movf	??_Config_GP3,w
 19067  1744  0084               	movwf	4
 19068  1745  3004               	movlw	4
 19069  1746  0204               	subwf	4,w
 19070  1747  1803               	skipnc
 19071  1748  2F53               	goto	i1l5275
 19072  1749  3191               	movlp	high i1S8555
 19073  174A  3504               	lslf	4,w
 19074  174B  3E18               	addlw	low i1S8555
 19075  174C  0082               	movwf	2
 19076  174D                     i1l1262:	
 19077                           ;GPports.c: 333: do { WPUCbits.WPUC5 = 0; } while(0);
 19078                           
 19079  174D  0024               	movlb	4	; select bank4
 19080  174E  128E               	bcf	14,5	;volatile
 19081  174F  0008               	return
 19082  1750                     i1l1266:	
 19083                           ;GPports.c: 336: do { WPUCbits.WPUC5 = 1; } while(0);
 19084                           
 19085  1750  0024               	movlb	4	; select bank4
 19086  1751  168E               	bsf	14,5	;volatile
 19087  1752  0008               	return
 19088  1753                     i1l5275:	
 19089  1753  0020               	movlb	0	; select bank0
 19090  1754  0845               	movf	_GP3CONF,w	;volatile
 19091  1755  3904               	andlw	4
 19092  1756  00CC               	movwf	??_Config_GP3
 19093  1757  01CD               	clrf	??_Config_GP3+1
 19094                           
 19095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19096                           ; Switch size 1, requested type "speed"
 19097                           ; Number of cases is 1, Range of values is 0 to 0
 19098                           ; switch strategies available:
 19099                           ; Name         Instructions Cycles
 19100                           ; simple_byte            4     3 (average)
 19101                           ; direct_byte            8     6 (fixed)
 19102                           ; jumptable            260     6 (fixed)
 19103                           ;	Chosen strategy is simple_byte
 19104  1758  084D               	movf	??_Config_GP3+1,w
 19105  1759  3A00               	xorlw	0	; case 0
 19106  175A  1903               	skipnz
 19107  175B  2F5D               	goto	i1l8557
 19108  175C  2F65               	goto	i1l1268
 19109  175D                     i1l8557:	
 19110                           
 19111                           ; Switch size 1, requested type "speed"
 19112                           ; Number of cases is 2, Range of values is 0 to 4
 19113                           ; switch strategies available:
 19114                           ; Name         Instructions Cycles
 19115                           ; simple_byte            7     4 (average)
 19116                           ; direct_byte           16     6 (fixed)
 19117                           ; jumptable            260     6 (fixed)
 19118                           ;	Chosen strategy is simple_byte
 19119  175D  084C               	movf	??_Config_GP3,w
 19120  175E  3A00               	xorlw	0	; case 0
 19121  175F  1903               	skipnz
 19122  1760  2F4D               	goto	i1l1262
 19123  1761  3A04               	xorlw	4	; case 4
 19124  1762  1903               	skipnz
 19125  1763  2F50               	goto	i1l1266
 19126  1764  2F65               	goto	i1l1268
 19127  1765                     i1l1268:	
 19128  1765  0008               	return
 19129  1766                     __end_of_Config_GP3:	
 19130  1766                     __ptext66:	
 19131 ;; *************** function _PWM1_Initialize *****************
 19132 ;; Defined at:
 19133 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      void 
 19140 ;; Registers used:
 19141 ;;		wreg, status,2, status,0
 19142 ;; Tracked objects:
 19143 ;;		On entry : 2/1
 19144 ;;		On exit  : 1F/5
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; This function calls:
 19154 ;;		Nothing
 19155 ;; This function is called by:
 19156 ;;		_RGB_EncoderMode
 19157 ;;		_Config_GP3
 19158 ;; This function uses a non-reentrant model
 19159 ;;
 19160                           
 19161                           
 19162                           ;psect for function _PWM1_Initialize
 19163  1766                     _PWM1_Initialize:	
 19164                           
 19165                           ;pwm1.c: 69: CCP1CON = 0x8F;
 19166                           
 19167                           ;incstack = 0
 19168                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 19169  1766  308F               	movlw	143
 19170  1767  0025               	movlb	5	; select bank5
 19171  1768  0093               	movwf	19	;volatile
 19172                           
 19173                           ;pwm1.c: 72: CCPR1H = 0x03;
 19174  1769  3003               	movlw	3
 19175  176A  0092               	movwf	18	;volatile
 19176                           
 19177                           ;pwm1.c: 75: CCPR1L = 0xFF;
 19178  176B  30FF               	movlw	255
 19179  176C  0091               	movwf	17	;volatile
 19180                           
 19181                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 19182  176D  081F               	movf	31,w	;volatile
 19183  176E  39FC               	andlw	-4
 19184  176F  3801               	iorlw	1
 19185  1770  009F               	movwf	31	;volatile
 19186  1771  0008               	return
 19187  1772                     __end_of_PWM1_Initialize:	
 19188  1772                     __ptext65:	
 19189 ;; *************** function i1_PWM_GP3_RLED *****************
 19190 ;; Defined at:
 19191 ;;		line 95 in file "PWM.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;  duty            1    wreg     unsigned char 
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;  duty            1   12[COMMON] unsigned char 
 19196 ;; Return value:  Size  Location     Type
 19197 ;;                  1    wreg      void 
 19198 ;; Registers used:
 19199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19200 ;; Tracked objects:
 19201 ;;		On entry : 1F/5
 19202 ;;		On exit  : 1F/5
 19203 ;;		Unchanged: 0/0
 19204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19207 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19208 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19209 ;;Total ram usage:        7 bytes
 19210 ;; Hardware stack levels used:    1
 19211 ;; Hardware stack levels required when called:    1
 19212 ;; This function calls:
 19213 ;;		i1___wmul
 19214 ;; This function is called by:
 19215 ;;		_Config_GP3
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219                           
 19220                           ;psect for function i1_PWM_GP3_RLED
 19221  1772                     i1_PWM_GP3_RLED:	
 19222                           
 19223                           ;incstack = 0
 19224                           ; Regs used in i1_PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19225                           ;i1PWM_GP3_RLED@duty stored from wreg
 19226  1772  00FC               	movwf	i1PWM_GP3_RLED@duty
 19227                           
 19228                           ;PWM.c: 97: if (duty == 0) {
 19229  1773  087C               	movf	i1PWM_GP3_RLED@duty,w
 19230  1774  1D03               	btfss	3,2
 19231  1775  2F8A               	goto	i1l4997
 19232                           
 19233                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 19234  1776  0022               	movlb	2	; select bank2
 19235  1777  168E               	bsf	14,5	;volatile
 19236                           
 19237                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19238  1778  3055               	movlw	85
 19239  1779  003C               	movlb	28	; select bank28
 19240  177A  008F               	movwf	15	;volsfr
 19241  177B  30AA               	movlw	170
 19242  177C  008F               	movwf	15	;volsfr
 19243  177D  100F               	bcf	15,0	;volsfr
 19244                           
 19245                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 19246  177E  30E0               	movlw	-32
 19247  177F  003D               	movlb	29	; select bank29
 19248  1780  05A5               	andwf	37,f	;volatile
 19249                           
 19250                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19251  1781  3055               	movlw	85
 19252  1782  003C               	movlb	28	; select bank28
 19253  1783  008F               	movwf	15	;volsfr
 19254  1784  30AA               	movlw	170
 19255  1785  008F               	movwf	15	;volsfr
 19256  1786  140F               	bsf	15,0	;volsfr
 19257                           
 19258                           ;PWM.c: 103: CCP1CON = 0;
 19259  1787  0025               	movlb	5	; select bank5
 19260  1788  0193               	clrf	19	;volatile
 19261  1789  0008               	return
 19262  178A                     i1l4997:	
 19263                           
 19264                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 19265  178A  0813               	movf	19,w	;volatile
 19266  178B  1D03               	btfss	3,2
 19267  178C  2FA4               	goto	i1l1568
 19268                           
 19269                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19270  178D  3055               	movlw	85
 19271  178E  003C               	movlb	28	; select bank28
 19272  178F  008F               	movwf	15	;volsfr
 19273  1790  30AA               	movlw	170
 19274  1791  008F               	movwf	15	;volsfr
 19275  1792  100F               	bcf	15,0	;volsfr
 19276                           
 19277                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 19278  1793  003D               	movlb	29	; select bank29
 19279  1794  0825               	movf	37,w	;volatile
 19280  1795  39E0               	andlw	-32
 19281  1796  380C               	iorlw	12
 19282  1797  00A5               	movwf	37	;volatile
 19283                           
 19284                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19285  1798  3055               	movlw	85
 19286  1799  003C               	movlb	28	; select bank28
 19287  179A  008F               	movwf	15	;volsfr
 19288  179B  30AA               	movlw	170
 19289  179C  008F               	movwf	15	;volsfr
 19290  179D  140F               	bsf	15,0	;volsfr
 19291                           
 19292                           ;PWM.c: 111: CCP1CON = 0x8F;
 19293  179E  308F               	movlw	143
 19294  179F  0025               	movlb	5	; select bank5
 19295  17A0  0093               	movwf	19	;volatile
 19296                           
 19297                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 19298  17A1  30FF               	movlw	255
 19299  17A2  0092               	movwf	18	;volatile
 19300  17A3  0091               	movwf	17	;volatile
 19301  17A4                     i1l1568:	
 19302                           
 19303                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 19304  17A4  0020               	movlb	0	; select bank0
 19305  17A5  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 19306  17A6  1D03               	btfss	3,2
 19307  17A7  2FB5               	goto	i1l5017
 19308                           
 19309                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 19310  17A8  097C               	comf	i1PWM_GP3_RLED@duty,w
 19311  17A9  00F6               	movwf	??i1_PWM_GP3_RLED
 19312  17AA  01F7               	clrf	??i1_PWM_GP3_RLED+1
 19313  17AB  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19314  17AC  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19315  17AD  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19316  17AE  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19317  17AF  0876               	movf	??i1_PWM_GP3_RLED,w
 19318  17B0  0025               	movlb	5	; select bank5
 19319  17B1  0091               	movwf	17	;volatile
 19320  17B2  0877               	movf	??i1_PWM_GP3_RLED+1,w
 19321  17B3  0092               	movwf	18	;volatile
 19322                           
 19323                           ;PWM.c: 119: } else {
 19324  17B4  0008               	return
 19325  17B5                     i1l5017:	
 19326                           
 19327                           ;PWM.c: 120: if (duty > 100)
 19328  17B5  3065               	movlw	101
 19329  17B6  027C               	subwf	i1PWM_GP3_RLED@duty,w
 19330  17B7  1C03               	skipc
 19331  17B8  2FBB               	goto	i1l5021
 19332                           
 19333                           ;PWM.c: 121: duty = 100;
 19334  17B9  3064               	movlw	100
 19335  17BA  00FC               	movwf	i1PWM_GP3_RLED@duty
 19336  17BB                     i1l5021:	
 19337                           
 19338                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 19339  17BB  087C               	movf	i1PWM_GP3_RLED@duty,w
 19340  17BC  00F6               	movwf	??i1_PWM_GP3_RLED
 19341  17BD  01F7               	clrf	??i1_PWM_GP3_RLED+1
 19342  17BE  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19343  17BF  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19344  17C0  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 19345  17C1  00F0               	movwf	i1___wmul@multiplier
 19346  17C2  30C8               	movlw	200
 19347  17C3  01F1               	clrf	i1___wmul@multiplier+1
 19348  17C4  00F2               	movwf	i1___wmul@multiplicand
 19349  17C5  01F3               	clrf	i1___wmul@multiplicand+1
 19350  17C6  2584               	fcall	i1___wmul
 19351  17C7  3015               	movlw	low ((_gamma_table| (0+32768)+65334))
 19352  17C8  00F8               	movwf	??i1_PWM_GP3_RLED+2
 19353  17C9  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 19354  17CA  00F9               	movwf	??i1_PWM_GP3_RLED+3
 19355  17CB  0870               	movf	?i1___wmul,w
 19356  17CC  0778               	addwf	??i1_PWM_GP3_RLED+2,w
 19357  17CD  00FA               	movwf	??i1_PWM_GP3_RLED+4
 19358  17CE  0871               	movf	?i1___wmul+1,w
 19359  17CF  3D79               	addwfc	??i1_PWM_GP3_RLED+3,w
 19360  17D0  00FB               	movwf	??i1_PWM_GP3_RLED+5
 19361  17D1  087A               	movf	??i1_PWM_GP3_RLED+4,w
 19362  17D2  0776               	addwf	??i1_PWM_GP3_RLED,w
 19363  17D3  0084               	movwf	4
 19364  17D4  087B               	movf	??i1_PWM_GP3_RLED+5,w
 19365  17D5  3D77               	addwfc	??i1_PWM_GP3_RLED+1,w
 19366  17D6  0085               	movwf	5
 19367  17D7  3F00               	moviw [0]fsr0
 19368  17D8  0025               	movlb	5	; select bank5
 19369  17D9  0091               	movwf	17	;volatile
 19370  17DA  3F01               	moviw [1]fsr0
 19371  17DB  0092               	movwf	18	;volatile
 19372  17DC  0008               	return
 19373  17DD                     __end_ofi1_PWM_GP3_RLED:	
 19374  17DD                     __ptext55:	
 19375 ;; *************** function _SecondConfig *****************
 19376 ;; Defined at:
 19377 ;;		line 583 in file "i2c_register.c"
 19378 ;; Parameters:    Size  Location     Type
 19379 ;;		None
 19380 ;; Auto vars:     Size  Location     Type
 19381 ;;		None
 19382 ;; Return value:  Size  Location     Type
 19383 ;;                  1    wreg      void 
 19384 ;; Registers used:
 19385 ;;		wreg, status,2, status,0, pclath, cstack
 19386 ;; Tracked objects:
 19387 ;;		On entry : 1F/0
 19388 ;;		On exit  : 1F/1
 19389 ;;		Unchanged: 0/0
 19390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19395 ;;Total ram usage:        0 bytes
 19396 ;; Hardware stack levels used:    1
 19397 ;; Hardware stack levels required when called:    1
 19398 ;; This function calls:
 19399 ;;		_I2C1_Initialize_ClockStreach
 19400 ;;		i1_I2C1_Initialize
 19401 ;; This function is called by:
 19402 ;;		_RegisterWrite
 19403 ;; This function uses a non-reentrant model
 19404 ;;
 19405                           
 19406                           
 19407                           ;psect for function _SecondConfig
 19408  17DD                     _SecondConfig:	
 19409                           
 19410                           ;i2c_register.c: 586: if (S_CKSRC == 1) {
 19411                           
 19412                           ;incstack = 0
 19413                           ; Regs used in _SecondConfig: [wreg+status,2+status,0+pclath+cstack]
 19414  17DD  0021               	movlb	1	; select bank1
 19415  17DE  0B3C               	decfsz	_S_CKSRC^(0+128),w	;volatile
 19416  17DF  2FE2               	goto	i1l5325
 19417                           
 19418                           ;i2c_register.c: 587: I2C1_Initialize_ClockStreach();
 19419  17E0  3191  29CC         	ljmp	i1l4815
 19420  17E2                     i1l5325:	
 19421                           ;i2c_register.c: 588: } else {
 19422                           
 19423                           
 19424                           ;i2c_register.c: 589: I2C1_Initialize();
 19425  17E2  3191  21AA         	fcall	i1_I2C1_Initialize
 19426  17E4  0008               	return
 19427  17E5                     __end_of_SecondConfig:	
 19428  17E5                     __ptext54:	
 19429 ;; *************** function _SecondDataSplit *****************
 19430 ;; Defined at:
 19431 ;;		line 124 in file "DataVariable.c"
 19432 ;; Parameters:    Size  Location     Type
 19433 ;;		None
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;		None
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  1    wreg      void 
 19438 ;; Registers used:
 19439 ;;		wreg, status,2, status,0
 19440 ;; Tracked objects:
 19441 ;;		On entry : 1F/1
 19442 ;;		On exit  : 1F/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19449 ;;Total ram usage:        0 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; This function calls:
 19452 ;;		Nothing
 19453 ;; This function is called by:
 19454 ;;		_RegisterWrite
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           
 19459                           ;psect for function _SecondDataSplit
 19460  17E5                     _SecondDataSplit:	
 19461                           
 19462                           ;DataVariable.c: 126: S_CKSRC = GCONF2 & 0x01U;
 19463                           
 19464                           ;incstack = 0
 19465                           ; Regs used in _SecondDataSplit: [wreg+status,2+status,0]
 19466  17E5  0843               	movf	_GCONF2^(0+128),w	;volatile
 19467  17E6  00BC               	movwf	_S_CKSRC^(0+128)	;volatile
 19468  17E7  3001               	movlw	1
 19469  17E8  05BC               	andwf	_S_CKSRC^(0+128),f	;volatile
 19470                           
 19471                           ;DataVariable.c: 127: S_RELATIVE = (bool) (GCONF2 >> 1) & 0x01U;
 19472  17E9  3643               	lsrf	_GCONF2^(0+128),w	;volatile
 19473  17EA  0020               	movlb	0	; select bank0
 19474  17EB  00B6               	movwf	_S_RELATIVE	;volatile
 19475  17EC  3001               	movlw	1
 19476  17ED  05B6               	andwf	_S_RELATIVE,f	;volatile
 19477  17EE  0008               	return
 19478  17EF                     __end_of_SecondDataSplit:	
 19479  17EF                     __ptext53:	
 19480 ;; *************** function _UpdateOut_GP1 *****************
 19481 ;; Defined at:
 19482 ;;		line 345 in file "GPports.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;		None
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;		None
 19487 ;; Return value:  Size  Location     Type
 19488 ;;                  1    wreg      void 
 19489 ;; Registers used:
 19490 ;;		wreg, status,2, status,0
 19491 ;; Tracked objects:
 19492 ;;		On entry : 1F/0
 19493 ;;		On exit  : 1D/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19500 ;;Total ram usage:        1 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; This function calls:
 19503 ;;		Nothing
 19504 ;; This function is called by:
 19505 ;;		_RegisterWrite
 19506 ;; This function uses a non-reentrant model
 19507 ;;
 19508                           
 19509                           
 19510                           ;psect for function _UpdateOut_GP1
 19511  17EF                     _UpdateOut_GP1:	
 19512                           
 19513                           ;GPports.c: 346: if ((GP1CONF & 0x03) == 0x01) {
 19514                           
 19515                           ;incstack = 0
 19516                           ; Regs used in _UpdateOut_GP1: [wreg+status,2+status,0]
 19517  17EF  3003               	movlw	3
 19518  17F0  0547               	andwf	_GP1CONF,w	;volatile
 19519  17F1  00F0               	movwf	??_UpdateOut_GP1
 19520  17F2  0B70               	decfsz	??_UpdateOut_GP1,w
 19521  17F3  0008               	return
 19522                           
 19523                           ;GPports.c: 347: if (GP1REG == 0) {
 19524  17F4  0841               	movf	_GP1REG,w	;volatile
 19525  17F5  1D03               	btfss	3,2
 19526  17F6  2FFA               	goto	i1l1272
 19527                           
 19528                           ;GPports.c: 348: LATCbits.LATC7 = 0;
 19529  17F7  0022               	movlb	2	; select bank2
 19530  17F8  138E               	bcf	14,7	;volatile
 19531                           
 19532                           ;GPports.c: 349: } else {
 19533  17F9  0008               	return
 19534  17FA                     i1l1272:	
 19535                           
 19536                           ;GPports.c: 350: LATCbits.LATC7 = 1;
 19537  17FA  0022               	movlb	2	; select bank2
 19538  17FB  178E               	bsf	14,7	;volatile
 19539                           
 19540                           ;GPports.c: 351: GP1REG = 1;
 19541  17FC  3001               	movlw	1
 19542  17FD  0020               	movlb	0	; select bank0
 19543  17FE  00C1               	movwf	_GP1REG	;volatile
 19544  17FF  0008               	return
 19545  1800                     __end_of_UpdateOut_GP1:	
 19546                           
 19547                           	psect	swtext10
 19548  1000                     __pswtext10:	
 19549  1000                     i1S8571:	
 19550  1000  3193  2B45         	ljmp	i1l5725
 19551  1002  3193  2B48         	ljmp	i1l5727
 19552  1004  3193  2B4B         	ljmp	i1l5729
 19553  1006  3193  2B4E         	ljmp	i1l5731
 19554  1008  3193  2B56         	ljmp	i1l5737
 19555  100A  3193  2B59         	ljmp	i1l5739
 19556  100C  3193  2B60         	ljmp	i1l5745
 19557  100E  3193  2B64         	ljmp	i1l5749
 19558  1010  3193  2B66         	ljmp	i1l5751
 19559  1012  3193  2B6C         	ljmp	i1l5757
 19560  1014  3193  2B74         	ljmp	i1l5763
 19561  1016  3193  2B7D         	ljmp	i1l5769
 19562  1018  3193  2B87         	ljmp	i1l5775
 19563  101A  3193  2B8A         	ljmp	i1l5777
 19564  101C  3193  2B8D         	ljmp	i1l5779
 19565  101E  3193  2B90         	ljmp	i1l5781
 19566  1020  3193  2B93         	ljmp	i1l5783
 19567  1022  3193  2B96         	ljmp	i1l5785
 19568  1024  3193  2B99         	ljmp	i1l5787
 19569  1026  3193  2B9C         	ljmp	i1l5789
 19570  1028  3193  2B9F         	ljmp	i1l5791
 19571  102A  3193  2BA2         	ljmp	i1l5793
 19572  102C  3193  2BA5         	ljmp	i1l5795
 19573  102E  3193  2BA8         	ljmp	i1l5797
 19574  1030  3193  2BAB         	ljmp	i1l5799
 19575  1032  3193  2BAE         	ljmp	i1l5801
 19576  1034  3193  2BB1         	ljmp	i1l5803
 19577  1036  3193  2BB4         	ljmp	i1l5805
 19578  1038  3193  2BB7         	ljmp	i1l5807
 19579  103A  3193  2BBA         	ljmp	i1l5809
 19580  103C  3193  2BC0         	ljmp	i1l5815
 19581  103E  3193  2BC2         	ljmp	i1l5817
 19582  1040  3193  2BC4         	ljmp	i1l5819
 19583  1042  3193  2BC6         	ljmp	i1l5821
 19584  1044  3193  2B54         	ljmp	i1l5735
 19585  1046  3193  2B54         	ljmp	i1l5735
 19586  1048  3193  2B54         	ljmp	i1l5735
 19587  104A  3193  2B54         	ljmp	i1l5735
 19588  104C  3193  2B54         	ljmp	i1l5735
 19589  104E  3193  2BC9         	ljmp	i1l5823
 19590  1050  3193  2BCC         	ljmp	i1l5825
 19591  1052  3193  2BCF         	ljmp	i1l5827
 19592  1054  3193  2BD2         	ljmp	i1l5829
 19593  1056  3193  2BD5         	ljmp	i1l5831
 19594  1058  3193  2BC9         	ljmp	i1l5823
 19595  105A  3193  2B54         	ljmp	i1l5735
 19596  105C  3193  2B54         	ljmp	i1l5735
 19597  105E  3193  2B54         	ljmp	i1l5735
 19598  1060  3193  2BD8         	ljmp	i1l5835
 19599  1062  3193  2B54         	ljmp	i1l5735
 19600  1064  3193  2B54         	ljmp	i1l5735
 19601  1066  3193  2B54         	ljmp	i1l5735
 19602  1068  3193  2B54         	ljmp	i1l5735
 19603  106A  3193  2B54         	ljmp	i1l5735
 19604  106C  3193  2B54         	ljmp	i1l5735
 19605  106E  3193  2B54         	ljmp	i1l5735
 19606  1070  3193  2B54         	ljmp	i1l5735
 19607  1072  3193  2B54         	ljmp	i1l5735
 19608  1074  3193  2B54         	ljmp	i1l5735
 19609  1076  3193  2B54         	ljmp	i1l5735
 19610  1078  3193  2B54         	ljmp	i1l5735
 19611  107A  3193  2B54         	ljmp	i1l5735
 19612  107C  3193  2B54         	ljmp	i1l5735
 19613  107E  3193  2B54         	ljmp	i1l5735
 19614  1080  3193  2B54         	ljmp	i1l5735
 19615  1082  3193  2B54         	ljmp	i1l5735
 19616  1084  3193  2B54         	ljmp	i1l5735
 19617  1086  3193  2B54         	ljmp	i1l5735
 19618  1088  3193  2B54         	ljmp	i1l5735
 19619  108A  3193  2B54         	ljmp	i1l5735
 19620  108C  3193  2B54         	ljmp	i1l5735
 19621  108E  3193  2B54         	ljmp	i1l5735
 19622  1090  3193  2B54         	ljmp	i1l5735
 19623  1092  3193  2B54         	ljmp	i1l5735
 19624  1094  3193  2B54         	ljmp	i1l5735
 19625  1096  3193  2B54         	ljmp	i1l5735
 19626  1098  3193  2B54         	ljmp	i1l5735
 19627  109A  3193  2B54         	ljmp	i1l5735
 19628  109C  3193  2B54         	ljmp	i1l5735
 19629  109E  3193  2B54         	ljmp	i1l5735
 19630  10A0  3193  2B54         	ljmp	i1l5735
 19631  10A2  3193  2B54         	ljmp	i1l5735
 19632  10A4  3193  2B54         	ljmp	i1l5735
 19633  10A6  3193  2B54         	ljmp	i1l5735
 19634  10A8  3193  2B54         	ljmp	i1l5735
 19635  10AA  3193  2B54         	ljmp	i1l5735
 19636  10AC  3193  2B54         	ljmp	i1l5735
 19637  10AE  3193  2B54         	ljmp	i1l5735
 19638  10B0  3193  2B54         	ljmp	i1l5735
 19639  10B2  3193  2B54         	ljmp	i1l5735
 19640  10B4  3193  2B54         	ljmp	i1l5735
 19641  10B6  3193  2B54         	ljmp	i1l5735
 19642  10B8  3193  2B54         	ljmp	i1l5735
 19643  10BA  3193  2B54         	ljmp	i1l5735
 19644  10BC  3193  2B54         	ljmp	i1l5735
 19645  10BE  3193  2B54         	ljmp	i1l5735
 19646  10C0  3193  2B54         	ljmp	i1l5735
 19647  10C2  3193  2B54         	ljmp	i1l5735
 19648  10C4  3193  2B54         	ljmp	i1l5735
 19649  10C6  3193  2B54         	ljmp	i1l5735
 19650  10C8  3193  2B54         	ljmp	i1l5735
 19651  10CA  3193  2B54         	ljmp	i1l5735
 19652  10CC  3193  2B54         	ljmp	i1l5735
 19653  10CE  3193  2B54         	ljmp	i1l5735
 19654  10D0  3193  2B54         	ljmp	i1l5735
 19655  10D2  3193  2B54         	ljmp	i1l5735
 19656  10D4  3193  2B54         	ljmp	i1l5735
 19657  10D6  3193  2B54         	ljmp	i1l5735
 19658  10D8  3193  2B54         	ljmp	i1l5735
 19659  10DA  3193  2B54         	ljmp	i1l5735
 19660  10DC  3193  2B54         	ljmp	i1l5735
 19661  10DE  3193  2B54         	ljmp	i1l5735
 19662  10E0  3193  2BDA         	ljmp	i1l5837
 19663  10E2  3193  2BDC         	ljmp	i1l5839
 19664                           
 19665                           	psect	text76
 19666  0D15                     __ptext76:	
 19667 ;; *************** function _CLC2_ISR *****************
 19668 ;; Defined at:
 19669 ;;		line 89 in file "mcc_generated_files/clc2.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;		None
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  1    wreg      void 
 19676 ;; Registers used:
 19677 ;;		wreg, status,2, status,0, pclath, cstack
 19678 ;; Tracked objects:
 19679 ;;		On entry : 1F/0
 19680 ;;		On exit  : 1F/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19687 ;;Total ram usage:        0 bytes
 19688 ;; Hardware stack levels used:    1
 19689 ;; Hardware stack levels required when called:    3
 19690 ;; This function calls:
 19691 ;;		_CLC_2_Interrupt
 19692 ;; This function is called by:
 19693 ;;		_INTERRUPT_InterruptManager
 19694 ;; This function uses a non-reentrant model
 19695 ;;
 19696                           
 19697                           
 19698                           ;psect for function _CLC2_ISR
 19699  0D15                     _CLC2_ISR:	
 19700                           
 19701                           ;clc2.c: 91: CLC_2_Interrupt();
 19702                           
 19703                           ;incstack = 0
 19704                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19705  0D15  25A2               	fcall	_CLC_2_Interrupt
 19706                           
 19707                           ;clc2.c: 93: PIR3bits.CLC2IF = 0;
 19708  0D16  0020               	movlb	0	; select bank0
 19709  0D17  1093               	bcf	19,1	;volatile
 19710  0D18  0008               	return
 19711  0D19                     __end_of_CLC2_ISR:	
 19712  0D19                     __ptext79:	
 19713 ;; *************** function _CLC1_ISR *****************
 19714 ;; Defined at:
 19715 ;;		line 89 in file "mcc_generated_files/clc1.c"
 19716 ;; Parameters:    Size  Location     Type
 19717 ;;		None
 19718 ;; Auto vars:     Size  Location     Type
 19719 ;;		None
 19720 ;; Return value:  Size  Location     Type
 19721 ;;                  1    wreg      void 
 19722 ;; Registers used:
 19723 ;;		wreg, status,2, status,0, pclath, cstack
 19724 ;; Tracked objects:
 19725 ;;		On entry : 1F/0
 19726 ;;		On exit  : 1F/0
 19727 ;;		Unchanged: 0/0
 19728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;Total ram usage:        0 bytes
 19734 ;; Hardware stack levels used:    1
 19735 ;; Hardware stack levels required when called:    2
 19736 ;; This function calls:
 19737 ;;		_CLC_1_Interrupt
 19738 ;; This function is called by:
 19739 ;;		_INTERRUPT_InterruptManager
 19740 ;; This function uses a non-reentrant model
 19741 ;;
 19742                           
 19743                           
 19744                           ;psect for function _CLC1_ISR
 19745  0D19                     _CLC1_ISR:	
 19746                           
 19747                           ;clc1.c: 91: CLC_1_Interrupt();
 19748                           
 19749                           ;incstack = 0
 19750                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 19751  0D19  251D               	fcall	_CLC_1_Interrupt
 19752                           
 19753                           ;clc1.c: 93: PIR3bits.CLC1IF = 0;
 19754  0D1A  0020               	movlb	0	; select bank0
 19755  0D1B  1013               	bcf	19,0	;volatile
 19756  0D1C  0008               	return
 19757  0D1D                     __end_of_CLC1_ISR:	
 19758  0D1D                     __ptext80:	
 19759 ;; *************** function _CLC_1_Interrupt *****************
 19760 ;; Defined at:
 19761 ;;		line 63 in file "Encoder.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;		None
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;		None
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  1    wreg      void 
 19768 ;; Registers used:
 19769 ;;		wreg, status,2, status,0, pclath, cstack
 19770 ;; Tracked objects:
 19771 ;;		On entry : 1F/0
 19772 ;;		On exit  : 1C/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19778 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19779 ;;Total ram usage:        4 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:    1
 19782 ;; This function calls:
 19783 ;;		___fladd
 19784 ;;		___flge
 19785 ;;		i1_EncoderStatusUpdate
 19786 ;;		i1_SetInterrupt
 19787 ;; This function is called by:
 19788 ;;		_CLC1_ISR
 19789 ;; This function uses a non-reentrant model
 19790 ;;
 19791                           
 19792                           
 19793                           ;psect for function _CLC_1_Interrupt
 19794  0D1D                     _CLC_1_Interrupt:	
 19795                           
 19796                           ;Encoder.c: 65: if (en_prev == 1)
 19797                           
 19798                           ;incstack = 0
 19799                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 19800  0D1D  0021               	movlb	1	; select bank1
 19801  0D1E  0B2F               	decfsz	_en_prev^(0+128),w
 19802  0D1F  2D28               	goto	i1l6355
 19803                           
 19804                           ;Encoder.c: 66: if (en_deb < DEBOUNCE)
 19805  0D20  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 19806  0D21  0221               	subwf	(_en_deb+1)^(0+128),w
 19807  0D22  1D03               	skipz
 19808  0D23  2D26               	goto	u377_25
 19809  0D24  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 19810  0D25  0220               	subwf	_en_deb^(0+128),w
 19811  0D26                     u377_25:	
 19812  0D26  1C03               	btfss	3,0
 19813  0D27  0008               	return
 19814  0D28                     i1l6355:	
 19815                           
 19816                           ;Encoder.c: 70: en_deb = 0;
 19817  0D28  01A0               	clrf	_en_deb^(0+128)
 19818  0D29  01A1               	clrf	(_en_deb+1)^(0+128)
 19819                           
 19820                           ;Encoder.c: 71: en_prev = 0;
 19821  0D2A  01AF               	clrf	_en_prev^(0+128)
 19822                           
 19823                           ;Encoder.c: 73: if (C_DTYPE == 0) {
 19824  0D2B  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 19825  0D2C  1D03               	btfss	3,2
 19826  0D2D  2D58               	goto	i1l6373
 19827                           
 19828                           ;Encoder.c: 74: CVAL.val = CVAL.val + ISTEP.val;
 19829  0D2E  0020               	movlb	0	; select bank0
 19830  0D2F  082C               	movf	_CVAL,w	;volatile
 19831  0D30  0720               	addwf	_ISTEP,w	;volatile
 19832  0D31  00D4               	movwf	??_CLC_1_Interrupt
 19833  0D32  082D               	movf	_CVAL+1,w	;volatile
 19834  0D33  3D21               	addwfc	_ISTEP+1,w	;volatile
 19835  0D34  00D5               	movwf	??_CLC_1_Interrupt+1
 19836  0D35  082E               	movf	_CVAL+2,w	;volatile
 19837  0D36  3D22               	addwfc	_ISTEP+2,w	;volatile
 19838  0D37  00D6               	movwf	??_CLC_1_Interrupt+2
 19839  0D38  082F               	movf	_CVAL+3,w	;volatile
 19840  0D39  3D23               	addwfc	_ISTEP+3,w	;volatile
 19841  0D3A  00D7               	movwf	??_CLC_1_Interrupt+3
 19842  0D3B  00AF               	movwf	_CVAL+3	;volatile
 19843  0D3C  0856               	movf	??_CLC_1_Interrupt+2,w
 19844  0D3D  00AE               	movwf	_CVAL+2	;volatile
 19845  0D3E  0855               	movf	??_CLC_1_Interrupt+1,w
 19846  0D3F  00AD               	movwf	_CVAL+1	;volatile
 19847  0D40  0854               	movf	??_CLC_1_Interrupt,w
 19848  0D41  00AC               	movwf	_CVAL	;volatile
 19849                           
 19850                           ;Encoder.c: 75: EncoderStatusUpdate(S_RINC);
 19851  0D42  3008               	movlw	8
 19852  0D43  2628  318D         	fcall	i1_EncoderStatusUpdate
 19853                           
 19854                           ;Encoder.c: 76: if (CVAL.val > CMAX.val) {
 19855  0D45  082B               	movf	_CMAX+3,w	;volatile
 19856  0D46  3A80               	xorlw	128
 19857  0D47  00D4               	movwf	??_CLC_1_Interrupt
 19858  0D48  082F               	movf	_CVAL+3,w	;volatile
 19859  0D49  3A80               	xorlw	128
 19860  0D4A  0254               	subwf	??_CLC_1_Interrupt,w
 19861  0D4B  1D03               	skipz
 19862  0D4C  2D89               	goto	L51
 19863  0D4D  082E               	movf	_CVAL+2,w	;volatile
 19864  0D4E  022A               	subwf	_CMAX+2,w	;volatile
 19865  0D4F  1D03               	skipz
 19866  0D50  2D89               	goto	L51
 19867  0D51  082D               	movf	_CVAL+1,w	;volatile
 19868  0D52  0229               	subwf	_CMAX+1,w	;volatile
 19869  0D53  1D03               	skipz
 19870  0D54  2D89               	goto	L51
 19871  0D55  082C               	movf	_CVAL,w	;volatile
 19872  0D56  0228               	subwf	_CMAX,w	;volatile
 19873  0D57  2D89               	goto	L51
 19874  0D58                     i1l6373:	
 19875                           ;Encoder.c: 81: CVAL.val = CMAX.val;
 19876                           
 19877                           ;Encoder.c: 80: } else {
 19878                           
 19879                           ;Encoder.c: 79: CVAL.val = CMIN.val;
 19880                           
 19881                           ;Encoder.c: 78: if (C_WRAPE == 1) {
 19882                           
 19883                           ;Encoder.c: 77: EncoderStatusUpdate(S_RMAX);
 19884                           
 19885                           
 19886                           ;Encoder.c: 85: CVAL.fval = CVAL.fval + ISTEP.fval;
 19887  0D58  0020               	movlb	0	; select bank0
 19888  0D59  0823               	movf	_ISTEP+3,w	;volatile
 19889  0D5A  00F3               	movwf	___fladd@b+3
 19890  0D5B  0822               	movf	_ISTEP+2,w	;volatile
 19891  0D5C  00F2               	movwf	___fladd@b+2
 19892  0D5D  0821               	movf	_ISTEP+1,w	;volatile
 19893  0D5E  00F1               	movwf	___fladd@b+1
 19894  0D5F  0820               	movf	_ISTEP,w	;volatile
 19895  0D60  00F0               	movwf	___fladd@b
 19896  0D61  082F               	movf	_CVAL+3,w	;volatile
 19897  0D62  00F7               	movwf	___fladd@a+3
 19898  0D63  082E               	movf	_CVAL+2,w	;volatile
 19899  0D64  00F6               	movwf	___fladd@a+2
 19900  0D65  082D               	movf	_CVAL+1,w	;volatile
 19901  0D66  00F5               	movwf	___fladd@a+1
 19902  0D67  082C               	movf	_CVAL,w	;volatile
 19903  0D68  00F4               	movwf	___fladd@a
 19904  0D69  268D  318D         	fcall	___fladd
 19905  0D6B  0873               	movf	?___fladd+3,w
 19906  0D6C  0020               	movlb	0	; select bank0
 19907  0D6D  00AF               	movwf	_CVAL+3	;volatile
 19908  0D6E  0872               	movf	?___fladd+2,w
 19909  0D6F  00AE               	movwf	_CVAL+2	;volatile
 19910  0D70  0871               	movf	?___fladd+1,w
 19911  0D71  00AD               	movwf	_CVAL+1	;volatile
 19912  0D72  0870               	movf	?___fladd,w
 19913  0D73  00AC               	movwf	_CVAL	;volatile
 19914                           
 19915                           ;Encoder.c: 86: EncoderStatusUpdate(S_RINC);
 19916  0D74  3008               	movlw	8
 19917  0D75  2628  318D         	fcall	i1_EncoderStatusUpdate
 19918                           
 19919                           ;Encoder.c: 87: if (CVAL.fval > CMAX.fval) {
 19920  0D77  082B               	movf	_CMAX+3,w	;volatile
 19921  0D78  00F3               	movwf	___flge@ff1+3
 19922  0D79  082A               	movf	_CMAX+2,w	;volatile
 19923  0D7A  00F2               	movwf	___flge@ff1+2
 19924  0D7B  0829               	movf	_CMAX+1,w	;volatile
 19925  0D7C  00F1               	movwf	___flge@ff1+1
 19926  0D7D  0828               	movf	_CMAX,w	;volatile
 19927  0D7E  00F0               	movwf	___flge@ff1
 19928  0D7F  082F               	movf	_CVAL+3,w	;volatile
 19929  0D80  00F7               	movwf	___flge@ff2+3
 19930  0D81  082E               	movf	_CVAL+2,w	;volatile
 19931  0D82  00F6               	movwf	___flge@ff2+2
 19932  0D83  082D               	movf	_CVAL+1,w	;volatile
 19933  0D84  00F5               	movwf	___flge@ff2+1
 19934  0D85  082C               	movf	_CVAL,w	;volatile
 19935  0D86  00F4               	movwf	___flge@ff2
 19936  0D87  262B  318D         	fcall	___flge
 19937  0D89                     L51:	
 19938  0D89  1803               	btfsc	3,0
 19939  0D8A  2DA0               	goto	i1l6383
 19940                           
 19941                           ;Encoder.c: 88: EncoderStatusUpdate(S_RMAX);
 19942  0D8B  3020               	movlw	32
 19943  0D8C  2628  318D         	fcall	i1_EncoderStatusUpdate
 19944                           
 19945                           ;Encoder.c: 89: if (C_WRAPE == 1) {
 19946  0D8E  0B37               	decfsz	_C_WRAPE,w	;volatile
 19947  0D8F  2D98               	goto	i1l6381
 19948                           
 19949                           ;Encoder.c: 90: CVAL.fval = CMIN.fval;
 19950  0D90  0827               	movf	_CMIN+3,w	;volatile
 19951  0D91  00AF               	movwf	_CVAL+3	;volatile
 19952  0D92  0826               	movf	_CMIN+2,w	;volatile
 19953  0D93  00AE               	movwf	_CVAL+2	;volatile
 19954  0D94  0825               	movf	_CMIN+1,w	;volatile
 19955  0D95  00AD               	movwf	_CVAL+1	;volatile
 19956  0D96  0824               	movf	_CMIN,w	;volatile
 19957  0D97  2D9F               	goto	L50
 19958  0D98                     i1l6381:	
 19959                           ;Encoder.c: 91: } else {
 19960                           
 19961                           
 19962                           ;Encoder.c: 92: CVAL.fval = CMAX.fval;
 19963  0D98  082B               	movf	_CMAX+3,w	;volatile
 19964  0D99  00AF               	movwf	_CVAL+3	;volatile
 19965  0D9A  082A               	movf	_CMAX+2,w	;volatile
 19966  0D9B  00AE               	movwf	_CVAL+2	;volatile
 19967  0D9C  0829               	movf	_CMAX+1,w	;volatile
 19968  0D9D  00AD               	movwf	_CVAL+1	;volatile
 19969  0D9E  0828               	movf	_CMAX,w	;volatile
 19970  0D9F                     L50:	
 19971  0D9F  00AC               	movwf	_CVAL	;volatile
 19972  0DA0                     i1l6383:	
 19973                           
 19974                           ;Encoder.c: 93: };Encoder.c: 94: };Encoder.c: 95: };Encoder.c: 98: SetInterrupt();
 19975  0DA0  27DC               	fcall	i1_SetInterrupt
 19976  0DA1  0008               	return
 19977  0DA2                     __end_of_CLC_1_Interrupt:	
 19978  0DA2                     __ptext77:	
 19979 ;; *************** function _CLC_2_Interrupt *****************
 19980 ;; Defined at:
 19981 ;;		line 105 in file "Encoder.c"
 19982 ;; Parameters:    Size  Location     Type
 19983 ;;		None
 19984 ;; Auto vars:     Size  Location     Type
 19985 ;;		None
 19986 ;; Return value:  Size  Location     Type
 19987 ;;                  1    wreg      void 
 19988 ;; Registers used:
 19989 ;;		wreg, status,2, status,0, pclath, cstack
 19990 ;; Tracked objects:
 19991 ;;		On entry : 1F/0
 19992 ;;		On exit  : 1C/0
 19993 ;;		Unchanged: 0/0
 19994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19997 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19999 ;;Total ram usage:        4 bytes
 20000 ;; Hardware stack levels used:    1
 20001 ;; Hardware stack levels required when called:    2
 20002 ;; This function calls:
 20003 ;;		___flge
 20004 ;;		___flsub
 20005 ;;		i1_EncoderStatusUpdate
 20006 ;;		i1_SetInterrupt
 20007 ;; This function is called by:
 20008 ;;		_CLC2_ISR
 20009 ;; This function uses a non-reentrant model
 20010 ;;
 20011                           
 20012                           
 20013                           ;psect for function _CLC_2_Interrupt
 20014  0DA2                     _CLC_2_Interrupt:	
 20015                           
 20016                           ;Encoder.c: 107: if (en_prev == 0)
 20017                           
 20018                           ;incstack = 0
 20019                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 20020  0DA2  0021               	movlb	1	; select bank1
 20021  0DA3  082F               	movf	_en_prev^(0+128),w
 20022  0DA4  1D03               	btfss	3,2
 20023  0DA5  2DAE               	goto	i1l6289
 20024                           
 20025                           ;Encoder.c: 108: if (en_deb < DEBOUNCE)
 20026  0DA6  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 20027  0DA7  0221               	subwf	(_en_deb+1)^(0+128),w
 20028  0DA8  1D03               	skipz
 20029  0DA9  2DAC               	goto	u370_25
 20030  0DAA  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 20031  0DAB  0220               	subwf	_en_deb^(0+128),w
 20032  0DAC                     u370_25:	
 20033  0DAC  1C03               	btfss	3,0
 20034  0DAD  0008               	return
 20035  0DAE                     i1l6289:	
 20036                           
 20037                           ;Encoder.c: 111: en_deb = 0;
 20038  0DAE  01A0               	clrf	_en_deb^(0+128)
 20039  0DAF  01A1               	clrf	(_en_deb+1)^(0+128)
 20040                           
 20041                           ;Encoder.c: 112: en_prev = 1;
 20042  0DB0  01AF               	clrf	_en_prev^(0+128)
 20043  0DB1  0AAF               	incf	_en_prev^(0+128),f
 20044                           
 20045                           ;Encoder.c: 114: if (C_DTYPE == 0) {
 20046  0DB2  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 20047  0DB3  1D03               	btfss	3,2
 20048  0DB4  2DDF               	goto	i1l6309
 20049                           
 20050                           ;Encoder.c: 116: CVAL.val = CVAL.val - ISTEP.val;
 20051  0DB5  0020               	movlb	0	; select bank0
 20052  0DB6  0820               	movf	_ISTEP,w	;volatile
 20053  0DB7  022C               	subwf	_CVAL,w	;volatile
 20054  0DB8  00DC               	movwf	??_CLC_2_Interrupt
 20055  0DB9  0821               	movf	_ISTEP+1,w	;volatile
 20056  0DBA  3B2D               	subwfb	_CVAL+1,w	;volatile
 20057  0DBB  00DD               	movwf	??_CLC_2_Interrupt+1
 20058  0DBC  0822               	movf	_ISTEP+2,w	;volatile
 20059  0DBD  3B2E               	subwfb	_CVAL+2,w	;volatile
 20060  0DBE  00DE               	movwf	??_CLC_2_Interrupt+2
 20061  0DBF  0823               	movf	_ISTEP+3,w	;volatile
 20062  0DC0  3B2F               	subwfb	_CVAL+3,w	;volatile
 20063  0DC1  00DF               	movwf	??_CLC_2_Interrupt+3
 20064  0DC2  00AF               	movwf	_CVAL+3	;volatile
 20065  0DC3  085E               	movf	??_CLC_2_Interrupt+2,w
 20066  0DC4  00AE               	movwf	_CVAL+2	;volatile
 20067  0DC5  085D               	movf	??_CLC_2_Interrupt+1,w
 20068  0DC6  00AD               	movwf	_CVAL+1	;volatile
 20069  0DC7  085C               	movf	??_CLC_2_Interrupt,w
 20070  0DC8  00AC               	movwf	_CVAL	;volatile
 20071                           
 20072                           ;Encoder.c: 117: EncoderStatusUpdate(S_RDEC);
 20073  0DC9  3010               	movlw	16
 20074  0DCA  2628  318D         	fcall	i1_EncoderStatusUpdate
 20075                           
 20076                           ;Encoder.c: 118: if (CVAL.val < CMIN.val) {
 20077  0DCC  082F               	movf	_CVAL+3,w	;volatile
 20078  0DCD  3A80               	xorlw	128
 20079  0DCE  00DC               	movwf	??_CLC_2_Interrupt
 20080  0DCF  0827               	movf	_CMIN+3,w	;volatile
 20081  0DD0  3A80               	xorlw	128
 20082  0DD1  025C               	subwf	??_CLC_2_Interrupt,w
 20083  0DD2  1D03               	skipz
 20084  0DD3  2E0F               	goto	L49
 20085  0DD4  0826               	movf	_CMIN+2,w	;volatile
 20086  0DD5  022E               	subwf	_CVAL+2,w	;volatile
 20087  0DD6  1D03               	skipz
 20088  0DD7  2E0F               	goto	L49
 20089  0DD8  0825               	movf	_CMIN+1,w	;volatile
 20090  0DD9  022D               	subwf	_CVAL+1,w	;volatile
 20091  0DDA  1D03               	skipz
 20092  0DDB  2E0F               	goto	L49
 20093  0DDC  0824               	movf	_CMIN,w	;volatile
 20094  0DDD  022C               	subwf	_CVAL,w	;volatile
 20095  0DDE  2E0F               	goto	L49
 20096  0DDF                     i1l6309:	
 20097                           ;Encoder.c: 123: CVAL.val = CMIN.val;
 20098                           
 20099                           ;Encoder.c: 122: } else {
 20100                           
 20101                           ;Encoder.c: 121: CVAL.val = CMAX.val;
 20102                           
 20103                           ;Encoder.c: 120: if (C_WRAPE == 1) {
 20104                           
 20105                           ;Encoder.c: 119: EncoderStatusUpdate(S_RMIN);
 20106                           
 20107                           
 20108                           ;Encoder.c: 127: CVAL.fval = CVAL.fval - ISTEP.fval;
 20109  0DDF  0020               	movlb	0	; select bank0
 20110  0DE0  0823               	movf	_ISTEP+3,w	;volatile
 20111  0DE1  00D7               	movwf	___flsub@a+3
 20112  0DE2  0822               	movf	_ISTEP+2,w	;volatile
 20113  0DE3  00D6               	movwf	___flsub@a+2
 20114  0DE4  0821               	movf	_ISTEP+1,w	;volatile
 20115  0DE5  00D5               	movwf	___flsub@a+1
 20116  0DE6  0820               	movf	_ISTEP,w	;volatile
 20117  0DE7  00D4               	movwf	___flsub@a
 20118  0DE8  082F               	movf	_CVAL+3,w	;volatile
 20119  0DE9  00DB               	movwf	___flsub@b+3
 20120  0DEA  082E               	movf	_CVAL+2,w	;volatile
 20121  0DEB  00DA               	movwf	___flsub@b+2
 20122  0DEC  082D               	movf	_CVAL+1,w	;volatile
 20123  0DED  00D9               	movwf	___flsub@b+1
 20124  0DEE  082C               	movf	_CVAL,w	;volatile
 20125  0DEF  00D8               	movwf	___flsub@b
 20126  0DF0  27E3  318D         	fcall	___flsub
 20127  0DF2  0857               	movf	?___flsub+3,w
 20128  0DF3  00AF               	movwf	_CVAL+3	;volatile
 20129  0DF4  0856               	movf	?___flsub+2,w
 20130  0DF5  00AE               	movwf	_CVAL+2	;volatile
 20131  0DF6  0855               	movf	?___flsub+1,w
 20132  0DF7  00AD               	movwf	_CVAL+1	;volatile
 20133  0DF8  0854               	movf	?___flsub,w
 20134  0DF9  00AC               	movwf	_CVAL	;volatile
 20135                           
 20136                           ;Encoder.c: 128: EncoderStatusUpdate(S_RDEC);
 20137  0DFA  3010               	movlw	16
 20138  0DFB  2628  318D         	fcall	i1_EncoderStatusUpdate
 20139                           
 20140                           ;Encoder.c: 129: if (CVAL.fval < CMIN.fval) {
 20141  0DFD  082F               	movf	_CVAL+3,w	;volatile
 20142  0DFE  00F3               	movwf	___flge@ff1+3
 20143  0DFF  082E               	movf	_CVAL+2,w	;volatile
 20144  0E00  00F2               	movwf	___flge@ff1+2
 20145  0E01  082D               	movf	_CVAL+1,w	;volatile
 20146  0E02  00F1               	movwf	___flge@ff1+1
 20147  0E03  082C               	movf	_CVAL,w	;volatile
 20148  0E04  00F0               	movwf	___flge@ff1
 20149  0E05  0827               	movf	_CMIN+3,w	;volatile
 20150  0E06  00F7               	movwf	___flge@ff2+3
 20151  0E07  0826               	movf	_CMIN+2,w	;volatile
 20152  0E08  00F6               	movwf	___flge@ff2+2
 20153  0E09  0825               	movf	_CMIN+1,w	;volatile
 20154  0E0A  00F5               	movwf	___flge@ff2+1
 20155  0E0B  0824               	movf	_CMIN,w	;volatile
 20156  0E0C  00F4               	movwf	___flge@ff2
 20157  0E0D  262B  318D         	fcall	___flge
 20158  0E0F                     L49:	
 20159  0E0F  1803               	btfsc	3,0
 20160  0E10  2E26               	goto	i1l6319
 20161                           
 20162                           ;Encoder.c: 130: EncoderStatusUpdate(S_RMIN);
 20163  0E11  3040               	movlw	64
 20164  0E12  2628  318D         	fcall	i1_EncoderStatusUpdate
 20165                           
 20166                           ;Encoder.c: 131: if (C_WRAPE == 1) {
 20167  0E14  0B37               	decfsz	_C_WRAPE,w	;volatile
 20168  0E15  2E1E               	goto	i1l6317
 20169                           
 20170                           ;Encoder.c: 132: CVAL.fval = CMAX.fval;
 20171  0E16  082B               	movf	_CMAX+3,w	;volatile
 20172  0E17  00AF               	movwf	_CVAL+3	;volatile
 20173  0E18  082A               	movf	_CMAX+2,w	;volatile
 20174  0E19  00AE               	movwf	_CVAL+2	;volatile
 20175  0E1A  0829               	movf	_CMAX+1,w	;volatile
 20176  0E1B  00AD               	movwf	_CVAL+1	;volatile
 20177  0E1C  0828               	movf	_CMAX,w	;volatile
 20178  0E1D  2E25               	goto	L48
 20179  0E1E                     i1l6317:	
 20180                           ;Encoder.c: 133: } else {
 20181                           
 20182                           
 20183                           ;Encoder.c: 135: CVAL.fval = CMIN.fval;
 20184  0E1E  0827               	movf	_CMIN+3,w	;volatile
 20185  0E1F  00AF               	movwf	_CVAL+3	;volatile
 20186  0E20  0826               	movf	_CMIN+2,w	;volatile
 20187  0E21  00AE               	movwf	_CVAL+2	;volatile
 20188  0E22  0825               	movf	_CMIN+1,w	;volatile
 20189  0E23  00AD               	movwf	_CVAL+1	;volatile
 20190  0E24  0824               	movf	_CMIN,w	;volatile
 20191  0E25                     L48:	
 20192  0E25  00AC               	movwf	_CVAL	;volatile
 20193  0E26                     i1l6319:	
 20194                           
 20195                           ;Encoder.c: 136: };Encoder.c: 137: };Encoder.c: 138: };Encoder.c: 140: SetInterrupt();
 20196  0E26  27DC               	fcall	i1_SetInterrupt
 20197  0E27  0008               	return
 20198  0E28                     __end_of_CLC_2_Interrupt:	
 20199  0E28                     __ptext82:	
 20200 ;; *************** function i1_EncoderStatusUpdate *****************
 20201 ;; Defined at:
 20202 ;;		line 134 in file "DataVariable.c"
 20203 ;; Parameters:    Size  Location     Type
 20204 ;;  stat            1    wreg     enum E77
 20205 ;; Auto vars:     Size  Location     Type
 20206 ;;  stat            1    0[COMMON] enum E77
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  1    wreg      void 
 20209 ;; Registers used:
 20210 ;;		wreg, status,2, status,0
 20211 ;; Tracked objects:
 20212 ;;		On entry : 1F/0
 20213 ;;		On exit  : 1F/0
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20220 ;;Total ram usage:        1 bytes
 20221 ;; Hardware stack levels used:    1
 20222 ;; This function calls:
 20223 ;;		Nothing
 20224 ;; This function is called by:
 20225 ;;		_CLC_1_Interrupt
 20226 ;;		_CLC_2_Interrupt
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           
 20230                           
 20231                           ;psect for function i1_EncoderStatusUpdate
 20232  0E28                     i1_EncoderStatusUpdate:	
 20233                           
 20234                           ;incstack = 0
 20235                           ; Regs used in i1_EncoderStatusUpdate: [wreg+status,2+status,0]
 20236                           ;i1EncoderStatusUpdate@stat stored from wreg
 20237  0E28  00F0               	movwf	i1EncoderStatusUpdate@stat
 20238                           
 20239                           ;DataVariable.c: 135: ESTATUS |= (uint8_t) stat;
 20240  0E29  04CA               	iorwf	_ESTATUS,f	;volatile
 20241  0E2A  0008               	return
 20242  0E2B                     __end_ofi1_EncoderStatusUpdate:	
 20243  0E2B                     __ptext83:	
 20244 ;; *************** function ___flge *****************
 20245 ;; Defined at:
 20246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  ff1             4    0[COMMON] void 
 20249 ;;  ff2             4    4[COMMON] void 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;		None
 20252 ;; Return value:  Size  Location     Type
 20253 ;;		None               void
 20254 ;; Registers used:
 20255 ;;		wreg, status,2, status,0
 20256 ;; Tracked objects:
 20257 ;;		On entry : 1F/0
 20258 ;;		On exit  : 1F/0
 20259 ;;		Unchanged: 1F/0
 20260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20264 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20265 ;;Total ram usage:       12 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; This function calls:
 20268 ;;		Nothing
 20269 ;; This function is called by:
 20270 ;;		_CLC_1_Interrupt
 20271 ;;		_CLC_2_Interrupt
 20272 ;; This function uses a non-reentrant model
 20273 ;;
 20274                           
 20275                           
 20276                           ;psect for function ___flge
 20277  0E2B                     ___flge:	
 20278                           
 20279                           ;incstack = 0
 20280                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20281  0E2B  3080               	movlw	128
 20282  0E2C  01F8               	clrf	??___flge
 20283  0E2D  01F9               	clrf	??___flge+1
 20284  0E2E  0572               	andwf	___flge@ff1+2,w
 20285  0E2F  00FA               	movwf	??___flge+2
 20286  0E30  307F               	movlw	127
 20287  0E31  0573               	andwf	___flge@ff1+3,w
 20288  0E32  00FB               	movwf	??___flge+3
 20289  0E33  047A               	iorwf	??___flge+2,w
 20290  0E34  0479               	iorwf	??___flge+1,w
 20291  0E35  0478               	iorwf	??___flge,w
 20292  0E36  1D03               	skipz
 20293  0E37  2E3C               	goto	i1l6103
 20294  0E38  01F0               	clrf	___flge@ff1
 20295  0E39  01F1               	clrf	___flge@ff1+1
 20296  0E3A  01F2               	clrf	___flge@ff1+2
 20297  0E3B  01F3               	clrf	___flge@ff1+3
 20298  0E3C                     i1l6103:	
 20299  0E3C  3080               	movlw	128
 20300  0E3D  01F8               	clrf	??___flge
 20301  0E3E  01F9               	clrf	??___flge+1
 20302  0E3F  0576               	andwf	___flge@ff2+2,w
 20303  0E40  00FA               	movwf	??___flge+2
 20304  0E41  307F               	movlw	127
 20305  0E42  0577               	andwf	___flge@ff2+3,w
 20306  0E43  00FB               	movwf	??___flge+3
 20307  0E44  047A               	iorwf	??___flge+2,w
 20308  0E45  0479               	iorwf	??___flge+1,w
 20309  0E46  0478               	iorwf	??___flge,w
 20310  0E47  1D03               	skipz
 20311  0E48  2E4D               	goto	i1l1965
 20312  0E49  01F4               	clrf	___flge@ff2
 20313  0E4A  01F5               	clrf	___flge@ff2+1
 20314  0E4B  01F6               	clrf	___flge@ff2+2
 20315  0E4C  01F7               	clrf	___flge@ff2+3
 20316  0E4D                     i1l1965:	
 20317  0E4D  1FF3               	btfss	___flge@ff1+3,7
 20318  0E4E  2E64               	goto	i1l6109
 20319  0E4F  3080               	movlw	128
 20320  0E50  01F8               	clrf	??___flge
 20321  0E51  01F9               	clrf	??___flge+1
 20322  0E52  01FA               	clrf	??___flge+2
 20323  0E53  00FB               	movwf	??___flge+3
 20324  0E54  0870               	movf	___flge@ff1,w
 20325  0E55  02F8               	subwf	??___flge,f
 20326  0E56  0871               	movf	___flge@ff1+1,w
 20327  0E57  3BF9               	subwfb	??___flge+1,f
 20328  0E58  0872               	movf	___flge@ff1+2,w
 20329  0E59  3BFA               	subwfb	??___flge+2,f
 20330  0E5A  0873               	movf	___flge@ff1+3,w
 20331  0E5B  3BFB               	subwfb	??___flge+3,f
 20332  0E5C  087B               	movf	??___flge+3,w
 20333  0E5D  00F3               	movwf	___flge@ff1+3
 20334  0E5E  087A               	movf	??___flge+2,w
 20335  0E5F  00F2               	movwf	___flge@ff1+2
 20336  0E60  0879               	movf	??___flge+1,w
 20337  0E61  00F1               	movwf	___flge@ff1+1
 20338  0E62  0878               	movf	??___flge,w
 20339  0E63  00F0               	movwf	___flge@ff1
 20340  0E64                     i1l6109:	
 20341  0E64  1FF7               	btfss	___flge@ff2+3,7
 20342  0E65  2E7B               	goto	i1l1967
 20343  0E66  3080               	movlw	128
 20344  0E67  01F8               	clrf	??___flge
 20345  0E68  01F9               	clrf	??___flge+1
 20346  0E69  01FA               	clrf	??___flge+2
 20347  0E6A  00FB               	movwf	??___flge+3
 20348  0E6B  0874               	movf	___flge@ff2,w
 20349  0E6C  02F8               	subwf	??___flge,f
 20350  0E6D  0875               	movf	___flge@ff2+1,w
 20351  0E6E  3BF9               	subwfb	??___flge+1,f
 20352  0E6F  0876               	movf	___flge@ff2+2,w
 20353  0E70  3BFA               	subwfb	??___flge+2,f
 20354  0E71  0877               	movf	___flge@ff2+3,w
 20355  0E72  3BFB               	subwfb	??___flge+3,f
 20356  0E73  087B               	movf	??___flge+3,w
 20357  0E74  00F7               	movwf	___flge@ff2+3
 20358  0E75  087A               	movf	??___flge+2,w
 20359  0E76  00F6               	movwf	___flge@ff2+2
 20360  0E77  0879               	movf	??___flge+1,w
 20361  0E78  00F5               	movwf	___flge@ff2+1
 20362  0E79  0878               	movf	??___flge,w
 20363  0E7A  00F4               	movwf	___flge@ff2
 20364  0E7B                     i1l1967:	
 20365  0E7B  3080               	movlw	128
 20366  0E7C  06F3               	xorwf	___flge@ff1+3,f
 20367  0E7D  06F7               	xorwf	___flge@ff2+3,f
 20368  0E7E  0877               	movf	___flge@ff2+3,w
 20369  0E7F  0273               	subwf	___flge@ff1+3,w
 20370  0E80  1D03               	skipz
 20371  0E81  0008               	return
 20372  0E82  0876               	movf	___flge@ff2+2,w
 20373  0E83  0272               	subwf	___flge@ff1+2,w
 20374  0E84  1D03               	skipz
 20375  0E85  0008               	return
 20376  0E86  0875               	movf	___flge@ff2+1,w
 20377  0E87  0271               	subwf	___flge@ff1+1,w
 20378  0E88  1D03               	skipz
 20379  0E89  0008               	return
 20380  0E8A  0874               	movf	___flge@ff2,w
 20381  0E8B  0270               	subwf	___flge@ff1,w
 20382  0E8C  0008               	return
 20383  0E8D                     __end_of___flge:	
 20384  0E8D                     __ptext84:	
 20385 ;; *************** function ___fladd *****************
 20386 ;; Defined at:
 20387 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;  b               4    0[COMMON] void 
 20390 ;;  a               4    4[COMMON] void 
 20391 ;; Auto vars:     Size  Location     Type
 20392 ;;  grs             1   11[COMMON] unsigned char 
 20393 ;;  bexp            1   10[COMMON] unsigned char 
 20394 ;;  aexp            1    9[COMMON] unsigned char 
 20395 ;;  signs           1    8[COMMON] unsigned char 
 20396 ;; Return value:  Size  Location     Type
 20397 ;;                  4    0[COMMON] unsigned char 
 20398 ;; Registers used:
 20399 ;;		wreg, status,2, status,0
 20400 ;; Tracked objects:
 20401 ;;		On entry : 1F/0
 20402 ;;		On exit  : 0/0
 20403 ;;		Unchanged: 0/0
 20404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20407 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20408 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20409 ;;Total ram usage:       20 bytes
 20410 ;; Hardware stack levels used:    1
 20411 ;; This function calls:
 20412 ;;		Nothing
 20413 ;; This function is called by:
 20414 ;;		_CLC_1_Interrupt
 20415 ;;		___flsub
 20416 ;; This function uses a non-reentrant model
 20417 ;;
 20418                           
 20419                           
 20420                           ;psect for function ___fladd
 20421  0E8D                     ___fladd:	
 20422                           
 20423                           ;incstack = 0
 20424                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20425  0E8D  0873               	movf	___fladd@b+3,w
 20426  0E8E  00F8               	movwf	___fladd@signs
 20427  0E8F  3080               	movlw	128
 20428  0E90  05F8               	andwf	___fladd@signs,f
 20429  0E91  3573               	lslf	___fladd@b+3,w
 20430  0E92  00FA               	movwf	___fladd@bexp
 20431  0E93  1BF2               	btfsc	___fladd@b+2,7
 20432  0E94  147A               	bsf	___fladd@bexp,0
 20433  0E95  087A               	movf	___fladd@bexp,w
 20434  0E96  1903               	btfsc	3,2
 20435  0E97  2EA0               	goto	i1l2076
 20436  0E98  0F7A               	incfsz	___fladd@bexp,w
 20437  0E99  2E9E               	goto	i1l2077
 20438  0E9A  01F0               	clrf	___fladd@b
 20439  0E9B  01F1               	clrf	___fladd@b+1
 20440  0E9C  01F2               	clrf	___fladd@b+2
 20441  0E9D  01F3               	clrf	___fladd@b+3
 20442  0E9E                     i1l2077:	
 20443  0E9E  17F2               	bsf	___fladd@b+2,7
 20444  0E9F  2EA3               	goto	L53
 20445  0EA0                     i1l2076:	
 20446  0EA0  01F0               	clrf	___fladd@b
 20447  0EA1  01F1               	clrf	___fladd@b+1
 20448  0EA2  01F2               	clrf	___fladd@b+2
 20449  0EA3                     L53:	
 20450  0EA3  01F3               	clrf	___fladd@b+3
 20451  0EA4  0877               	movf	___fladd@a+3,w
 20452  0EA5  00F9               	movwf	___fladd@aexp
 20453  0EA6  3080               	movlw	128
 20454  0EA7  05F9               	andwf	___fladd@aexp,f
 20455  0EA8  0879               	movf	___fladd@aexp,w
 20456  0EA9  0678               	xorwf	___fladd@signs,w
 20457  0EAA  1D03               	btfss	3,2
 20458  0EAB  1778               	bsf	___fladd@signs,6
 20459  0EAC  3577               	lslf	___fladd@a+3,w
 20460  0EAD  00F9               	movwf	___fladd@aexp
 20461  0EAE  1BF6               	btfsc	___fladd@a+2,7
 20462  0EAF  1479               	bsf	___fladd@aexp,0
 20463  0EB0  0879               	movf	___fladd@aexp,w
 20464  0EB1  1903               	btfsc	3,2
 20465  0EB2  2EBB               	goto	i1l2081
 20466  0EB3  0F79               	incfsz	___fladd@aexp,w
 20467  0EB4  2EB9               	goto	i1l2082
 20468  0EB5  01F4               	clrf	___fladd@a
 20469  0EB6  01F5               	clrf	___fladd@a+1
 20470  0EB7  01F6               	clrf	___fladd@a+2
 20471  0EB8  01F7               	clrf	___fladd@a+3
 20472  0EB9                     i1l2082:	
 20473  0EB9  17F6               	bsf	___fladd@a+2,7
 20474  0EBA  2EBE               	goto	L54
 20475  0EBB                     i1l2081:	
 20476  0EBB  01F4               	clrf	___fladd@a
 20477  0EBC  01F5               	clrf	___fladd@a+1
 20478  0EBD  01F6               	clrf	___fladd@a+2
 20479  0EBE                     L54:	
 20480  0EBE  01F7               	clrf	___fladd@a+3
 20481  0EBF  087A               	movf	___fladd@bexp,w
 20482  0EC0  0279               	subwf	___fladd@aexp,w
 20483  0EC1  1803               	skipnc
 20484  0EC2  2EE5               	goto	i1l5453
 20485  0EC3  1F78               	btfss	___fladd@signs,6
 20486  0EC4  2EC7               	goto	i1l5423
 20487  0EC5  3080               	movlw	128
 20488  0EC6  06F8               	xorwf	___fladd@signs,f
 20489  0EC7                     i1l5423:	
 20490  0EC7  087A               	movf	___fladd@bexp,w
 20491  0EC8  00FB               	movwf	___fladd@grs
 20492  0EC9  0879               	movf	___fladd@aexp,w
 20493  0ECA  00FA               	movwf	___fladd@bexp
 20494  0ECB  087B               	movf	___fladd@grs,w
 20495  0ECC  00F9               	movwf	___fladd@aexp
 20496  0ECD  0870               	movf	___fladd@b,w
 20497  0ECE  00FB               	movwf	___fladd@grs
 20498  0ECF  0874               	movf	___fladd@a,w
 20499  0ED0  00F0               	movwf	___fladd@b
 20500  0ED1  087B               	movf	___fladd@grs,w
 20501  0ED2  00F4               	movwf	___fladd@a
 20502  0ED3  0871               	movf	___fladd@b+1,w
 20503  0ED4  00FB               	movwf	___fladd@grs
 20504  0ED5  0875               	movf	___fladd@a+1,w
 20505  0ED6  00F1               	movwf	___fladd@b+1
 20506  0ED7  087B               	movf	___fladd@grs,w
 20507  0ED8  00F5               	movwf	___fladd@a+1
 20508  0ED9  0872               	movf	___fladd@b+2,w
 20509  0EDA  00FB               	movwf	___fladd@grs
 20510  0EDB  0876               	movf	___fladd@a+2,w
 20511  0EDC  00F2               	movwf	___fladd@b+2
 20512  0EDD  087B               	movf	___fladd@grs,w
 20513  0EDE  00F6               	movwf	___fladd@a+2
 20514  0EDF  0873               	movf	___fladd@b+3,w
 20515  0EE0  00FB               	movwf	___fladd@grs
 20516  0EE1  0877               	movf	___fladd@a+3,w
 20517  0EE2  00F3               	movwf	___fladd@b+3
 20518  0EE3  087B               	movf	___fladd@grs,w
 20519  0EE4  00F7               	movwf	___fladd@a+3
 20520  0EE5                     i1l5453:	
 20521  0EE5  01FB               	clrf	___fladd@grs
 20522  0EE6  0879               	movf	___fladd@aexp,w
 20523  0EE7  00CC               	movwf	??___fladd
 20524  0EE8  01CD               	clrf	??___fladd+1
 20525  0EE9  084D               	movf	??___fladd+1,w
 20526  0EEA  00CF               	movwf	??___fladd+3
 20527  0EEB  087A               	movf	___fladd@bexp,w
 20528  0EEC  024C               	subwf	??___fladd,w
 20529  0EED  00CE               	movwf	??___fladd+2
 20530  0EEE  1C03               	skipc
 20531  0EEF  03CF               	decf	??___fladd+3,f
 20532  0EF0  084F               	movf	??___fladd+3,w
 20533  0EF1  3A80               	xorlw	128
 20534  0EF2  00D0               	movwf	??___fladd+4
 20535  0EF3  3080               	movlw	128
 20536  0EF4  0250               	subwf	??___fladd+4,w
 20537  0EF5  1D03               	skipz
 20538  0EF6  2EF9               	goto	u284_25
 20539  0EF7  301A               	movlw	26
 20540  0EF8  024E               	subwf	??___fladd+2,w
 20541  0EF9                     u284_25:	
 20542  0EF9  1C03               	skipc
 20543  0EFA  2F1A               	goto	i1l5467
 20544  0EFB  0873               	movf	___fladd@b+3,w
 20545  0EFC  0472               	iorwf	___fladd@b+2,w
 20546  0EFD  0471               	iorwf	___fladd@b+1,w
 20547  0EFE  0470               	iorwf	___fladd@b,w
 20548  0EFF  1903               	btfsc	3,2
 20549  0F00  2F03               	goto	u285_20
 20550  0F01  3001               	movlw	1
 20551  0F02  2F04               	goto	u286_20
 20552  0F03                     u285_20:	
 20553  0F03  3000               	movlw	0
 20554  0F04                     u286_20:	
 20555  0F04  00FB               	movwf	___fladd@grs
 20556  0F05  01F0               	clrf	___fladd@b
 20557  0F06  01F1               	clrf	___fladd@b+1
 20558  0F07  01F2               	clrf	___fladd@b+2
 20559  0F08  01F3               	clrf	___fladd@b+3
 20560  0F09  0879               	movf	___fladd@aexp,w
 20561  0F0A  00FA               	movwf	___fladd@bexp
 20562  0F0B  2F1E               	goto	i1l2087
 20563  0F0C                     i1l2089:	
 20564  0F0C  1C7B               	btfss	___fladd@grs,0
 20565  0F0D  2F12               	goto	i1l2090
 20566  0F0E  367B               	lsrf	___fladd@grs,w
 20567  0F0F  3801               	iorlw	1
 20568  0F10  00FB               	movwf	___fladd@grs
 20569  0F11  2F13               	goto	i1l2091
 20570  0F12                     i1l2090:	
 20571  0F12  36FB               	lsrf	___fladd@grs,f
 20572  0F13                     i1l2091:	
 20573  0F13  1870               	btfsc	___fladd@b,0
 20574  0F14  17FB               	bsf	___fladd@grs,7
 20575  0F15  37F3               	asrf	___fladd@b+3,f
 20576  0F16  0CF2               	rrf	___fladd@b+2,f
 20577  0F17  0CF1               	rrf	___fladd@b+1,f
 20578  0F18  0CF0               	rrf	___fladd@b,f
 20579  0F19  0AFA               	incf	___fladd@bexp,f
 20580  0F1A                     i1l5467:	
 20581  0F1A  0879               	movf	___fladd@aexp,w
 20582  0F1B  027A               	subwf	___fladd@bexp,w
 20583  0F1C  1C03               	skipc
 20584  0F1D  2F0C               	goto	i1l2089
 20585  0F1E                     i1l2087:	
 20586  0F1E  1B78               	btfsc	___fladd@signs,6
 20587  0F1F  2F41               	goto	i1l5485
 20588  0F20  087A               	movf	___fladd@bexp,w
 20589  0F21  1D03               	btfss	3,2
 20590  0F22  2F28               	goto	i1l5473
 20591  0F23  01F0               	clrf	?___fladd
 20592  0F24  01F1               	clrf	?___fladd+1
 20593  0F25  01F2               	clrf	?___fladd+2
 20594  0F26  01F3               	clrf	?___fladd+3
 20595  0F27  0008               	return
 20596  0F28                     i1l5473:	
 20597  0F28  0874               	movf	___fladd@a,w
 20598  0F29  07F0               	addwf	___fladd@b,f
 20599  0F2A  0875               	movf	___fladd@a+1,w
 20600  0F2B  3DF1               	addwfc	___fladd@b+1,f
 20601  0F2C  0876               	movf	___fladd@a+2,w
 20602  0F2D  3DF2               	addwfc	___fladd@b+2,f
 20603  0F2E  0877               	movf	___fladd@a+3,w
 20604  0F2F  3DF3               	addwfc	___fladd@b+3,f
 20605  0F30  1C73               	btfss	___fladd@b+3,0
 20606  0F31  2FAA               	goto	i1l5515
 20607  0F32  1C7B               	btfss	___fladd@grs,0
 20608  0F33  2F38               	goto	i1l2098
 20609  0F34  367B               	lsrf	___fladd@grs,w
 20610  0F35  3801               	iorlw	1
 20611  0F36  00FB               	movwf	___fladd@grs
 20612  0F37  2F39               	goto	i1l2099
 20613  0F38                     i1l2098:	
 20614  0F38  36FB               	lsrf	___fladd@grs,f
 20615  0F39                     i1l2099:	
 20616  0F39  1870               	btfsc	___fladd@b,0
 20617  0F3A  17FB               	bsf	___fladd@grs,7
 20618  0F3B  37F3               	asrf	___fladd@b+3,f
 20619  0F3C  0CF2               	rrf	___fladd@b+2,f
 20620  0F3D  0CF1               	rrf	___fladd@b+1,f
 20621  0F3E  0CF0               	rrf	___fladd@b,f
 20622  0F3F  0AFA               	incf	___fladd@bexp,f
 20623  0F40  2FAA               	goto	i1l5515
 20624  0F41                     i1l5485:	
 20625  0F41  0873               	movf	___fladd@b+3,w
 20626  0F42  3A80               	xorlw	128
 20627  0F43  0020               	movlb	0	; select bank0
 20628  0F44  00CC               	movwf	??___fladd
 20629  0F45  0877               	movf	___fladd@a+3,w
 20630  0F46  3A80               	xorlw	128
 20631  0F47  024C               	subwf	??___fladd,w
 20632  0F48  1D03               	skipz
 20633  0F49  2F54               	goto	u295_23
 20634  0F4A  0876               	movf	___fladd@a+2,w
 20635  0F4B  0272               	subwf	___fladd@b+2,w
 20636  0F4C  1D03               	skipz
 20637  0F4D  2F54               	goto	u295_23
 20638  0F4E  0875               	movf	___fladd@a+1,w
 20639  0F4F  0271               	subwf	___fladd@b+1,w
 20640  0F50  1D03               	skipz
 20641  0F51  2F54               	goto	u295_23
 20642  0F52  0874               	movf	___fladd@a,w
 20643  0F53  0270               	subwf	___fladd@b,w
 20644  0F54                     u295_23:	
 20645  0F54  1803               	skipnc
 20646  0F55  2F83               	goto	i1l5495
 20647  0F56  30FF               	movlw	255
 20648  0F57  00CC               	movwf	??___fladd
 20649  0F58  00CD               	movwf	??___fladd+1
 20650  0F59  00CE               	movwf	??___fladd+2
 20651  0F5A  00CF               	movwf	??___fladd+3
 20652  0F5B  0870               	movf	___fladd@b,w
 20653  0F5C  0274               	subwf	___fladd@a,w
 20654  0F5D  00D0               	movwf	??___fladd+4
 20655  0F5E  0871               	movf	___fladd@b+1,w
 20656  0F5F  3B75               	subwfb	___fladd@a+1,w
 20657  0F60  00D1               	movwf	??___fladd+5
 20658  0F61  0872               	movf	___fladd@b+2,w
 20659  0F62  3B76               	subwfb	___fladd@a+2,w
 20660  0F63  00D2               	movwf	??___fladd+6
 20661  0F64  0873               	movf	___fladd@b+3,w
 20662  0F65  3B77               	subwfb	___fladd@a+3,w
 20663  0F66  00D3               	movwf	??___fladd+7
 20664  0F67  0850               	movf	??___fladd+4,w
 20665  0F68  07CC               	addwf	??___fladd,f
 20666  0F69  0851               	movf	??___fladd+5,w
 20667  0F6A  3DCD               	addwfc	??___fladd+1,f
 20668  0F6B  0852               	movf	??___fladd+6,w
 20669  0F6C  3DCE               	addwfc	??___fladd+2,f
 20670  0F6D  0853               	movf	??___fladd+7,w
 20671  0F6E  3DCF               	addwfc	??___fladd+3,f
 20672  0F6F  084F               	movf	??___fladd+3,w
 20673  0F70  00F3               	movwf	___fladd@b+3
 20674  0F71  084E               	movf	??___fladd+2,w
 20675  0F72  00F2               	movwf	___fladd@b+2
 20676  0F73  084D               	movf	??___fladd+1,w
 20677  0F74  00F1               	movwf	___fladd@b+1
 20678  0F75  084C               	movf	??___fladd,w
 20679  0F76  00F0               	movwf	___fladd@b
 20680  0F77  3080               	movlw	128
 20681  0F78  06F8               	xorwf	___fladd@signs,f
 20682  0F79  09FB               	comf	___fladd@grs,f
 20683  0F7A  0FFB               	incfsz	___fladd@grs,f
 20684  0F7B  2F8B               	goto	i1l2104
 20685  0F7C  3001               	movlw	1
 20686  0F7D  07F0               	addwf	___fladd@b,f
 20687  0F7E  3000               	movlw	0
 20688  0F7F  3DF1               	addwfc	___fladd@b+1,f
 20689  0F80  3DF2               	addwfc	___fladd@b+2,f
 20690  0F81  3DF3               	addwfc	___fladd@b+3,f
 20691  0F82  2F8B               	goto	i1l2104
 20692  0F83                     i1l5495:	
 20693  0F83  0874               	movf	___fladd@a,w
 20694  0F84  02F0               	subwf	___fladd@b,f
 20695  0F85  0875               	movf	___fladd@a+1,w
 20696  0F86  3BF1               	subwfb	___fladd@b+1,f
 20697  0F87  0876               	movf	___fladd@a+2,w
 20698  0F88  3BF2               	subwfb	___fladd@b+2,f
 20699  0F89  0877               	movf	___fladd@a+3,w
 20700  0F8A  3BF3               	subwfb	___fladd@b+3,f
 20701  0F8B                     i1l2104:	
 20702  0F8B  0873               	movf	___fladd@b+3,w
 20703  0F8C  0472               	iorwf	___fladd@b+2,w
 20704  0F8D  0471               	iorwf	___fladd@b+1,w
 20705  0F8E  0470               	iorwf	___fladd@b,w
 20706  0F8F  1D03               	skipz
 20707  0F90  2FA8               	goto	i1l5513
 20708  0F91  087B               	movf	___fladd@grs,w
 20709  0F92  1D03               	btfss	3,2
 20710  0F93  2FA8               	goto	i1l5513
 20711  0F94  01F0               	clrf	?___fladd
 20712  0F95  01F1               	clrf	?___fladd+1
 20713  0F96  01F2               	clrf	?___fladd+2
 20714  0F97  01F3               	clrf	?___fladd+3
 20715  0F98  0008               	return
 20716  0F99                     i1l5501:	
 20717  0F99  35F0               	lslf	___fladd@b,f
 20718  0F9A  0DF1               	rlf	___fladd@b+1,f
 20719  0F9B  0DF2               	rlf	___fladd@b+2,f
 20720  0F9C  0DF3               	rlf	___fladd@b+3,f
 20721  0F9D  1BFB               	btfsc	___fladd@grs,7
 20722  0F9E  1470               	bsf	___fladd@b,0
 20723  0F9F  1C7B               	btfss	___fladd@grs,0
 20724  0FA0  2FA4               	goto	i1l2109
 20725  0FA1  1403               	setc
 20726  0FA2  0DFB               	rlf	___fladd@grs,f
 20727  0FA3  2FA5               	goto	i1l5509
 20728  0FA4                     i1l2109:	
 20729  0FA4  35FB               	lslf	___fladd@grs,f
 20730  0FA5                     i1l5509:	
 20731  0FA5  087A               	movf	___fladd@bexp,w
 20732  0FA6  1D03               	btfss	3,2
 20733  0FA7  03FA               	decf	___fladd@bexp,f
 20734  0FA8                     i1l5513:	
 20735  0FA8  1FF2               	btfss	___fladd@b+2,7
 20736  0FA9  2F99               	goto	i1l5501
 20737  0FAA                     i1l5515:	
 20738  0FAA  01F9               	clrf	___fladd@aexp
 20739  0FAB  1FFB               	btfss	___fladd@grs,7
 20740  0FAC  2FB5               	goto	i1l5525
 20741  0FAD  087B               	movf	___fladd@grs,w
 20742  0FAE  397F               	andlw	127
 20743  0FAF  1903               	btfsc	3,2
 20744  0FB0  1870               	btfsc	___fladd@b,0
 20745  0FB1  2FB3               	goto	i1l5521
 20746  0FB2  2FB5               	goto	i1l5525
 20747  0FB3                     i1l5521:	
 20748  0FB3  01F9               	clrf	___fladd@aexp
 20749  0FB4  0AF9               	incf	___fladd@aexp,f
 20750  0FB5                     i1l5525:	
 20751  0FB5  0879               	movf	___fladd@aexp,w
 20752  0FB6  1903               	btfsc	3,2
 20753  0FB7  2FC6               	goto	i1l5537
 20754  0FB8  3001               	movlw	1
 20755  0FB9  07F0               	addwf	___fladd@b,f
 20756  0FBA  3000               	movlw	0
 20757  0FBB  3DF1               	addwfc	___fladd@b+1,f
 20758  0FBC  3DF2               	addwfc	___fladd@b+2,f
 20759  0FBD  3DF3               	addwfc	___fladd@b+3,f
 20760  0FBE  1C73               	btfss	___fladd@b+3,0
 20761  0FBF  2FC6               	goto	i1l5537
 20762  0FC0  37F3               	asrf	___fladd@b+3,f
 20763  0FC1  0CF2               	rrf	___fladd@b+2,f
 20764  0FC2  0CF1               	rrf	___fladd@b+1,f
 20765  0FC3  0CF0               	rrf	___fladd@b,f
 20766  0FC4  0F7A               	incfsz	___fladd@bexp,w
 20767  0FC5  0AFA               	incf	___fladd@bexp,f
 20768  0FC6                     i1l5537:	
 20769  0FC6  0A7A               	incf	___fladd@bexp,w
 20770  0FC7  1D03               	btfss	3,2
 20771  0FC8  087A               	movf	___fladd@bexp,w
 20772  0FC9  1D03               	btfss	3,2
 20773  0FCA  2FD2               	goto	i1l5545
 20774  0FCB  01F0               	clrf	___fladd@b
 20775  0FCC  01F1               	clrf	___fladd@b+1
 20776  0FCD  01F2               	clrf	___fladd@b+2
 20777  0FCE  01F3               	clrf	___fladd@b+3
 20778  0FCF  087A               	movf	___fladd@bexp,w
 20779  0FD0  1903               	btfsc	3,2
 20780  0FD1  01F8               	clrf	___fladd@signs
 20781  0FD2                     i1l5545:	
 20782  0FD2  1C7A               	btfss	___fladd@bexp,0
 20783  0FD3  2FD6               	goto	i1l2124
 20784  0FD4  17F2               	bsf	___fladd@b+2,7
 20785  0FD5  2FD7               	goto	i1l5549
 20786  0FD6                     i1l2124:	
 20787  0FD6  13F2               	bcf	___fladd@b+2,7
 20788  0FD7                     i1l5549:	
 20789  0FD7  367A               	lsrf	___fladd@bexp,w
 20790  0FD8  00F3               	movwf	___fladd@b+3
 20791  0FD9  1BF8               	btfsc	___fladd@signs,7
 20792  0FDA  17F3               	bsf	___fladd@b+3,7
 20793  0FDB  0008               	return
 20794  0FDC                     __end_of___fladd:	
 20795  007E                     btemp	set	126	;btemp
 20796  007E                     int$flags	set	126
 20797  007E                     wtemp0	set	126
 20798  0FDC                     __ptext81:	
 20799 ;; *************** function i1_SetInterrupt *****************
 20800 ;; Defined at:
 20801 ;;		line 56 in file "main.c"
 20802 ;; Parameters:    Size  Location     Type
 20803 ;;		None
 20804 ;; Auto vars:     Size  Location     Type
 20805 ;;		None
 20806 ;; Return value:  Size  Location     Type
 20807 ;;                  1    wreg      void 
 20808 ;; Registers used:
 20809 ;;		wreg, status,2, status,0
 20810 ;; Tracked objects:
 20811 ;;		On entry : 1F/0
 20812 ;;		On exit  : 1D/0
 20813 ;;		Unchanged: 0/0
 20814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20819 ;;Total ram usage:        0 bytes
 20820 ;; Hardware stack levels used:    1
 20821 ;; This function calls:
 20822 ;;		Nothing
 20823 ;; This function is called by:
 20824 ;;		_CLC_1_Interrupt
 20825 ;;		_CLC_2_Interrupt
 20826 ;; This function uses a non-reentrant model
 20827 ;;
 20828                           
 20829                           
 20830                           ;psect for function i1_SetInterrupt
 20831  0FDC                     i1_SetInterrupt:	
 20832                           
 20833                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 20834                           
 20835                           ;incstack = 0
 20836                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 20837  0FDC  084A               	movf	_ESTATUS,w	;volatile
 20838  0FDD  0549               	andwf	_INTCONF,w	;volatile
 20839  0FDE  1903               	btfsc	3,2
 20840  0FDF  0008               	return
 20841                           
 20842                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 20843  0FE0  0022               	movlb	2	; select bank2
 20844  0FE1  128D               	bcf	13,5	;volatile
 20845  0FE2  0008               	return
 20846  0FE3                     __end_ofi1_SetInterrupt:	
 20847  0FE3                     __ptext78:	
 20848 ;; *************** function ___flsub *****************
 20849 ;; Defined at:
 20850 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 20851 ;; Parameters:    Size  Location     Type
 20852 ;;  a               4    8[BANK0 ] void 
 20853 ;;  b               4   12[BANK0 ] void 
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  4    8[BANK0 ] void 
 20858 ;; Registers used:
 20859 ;;		wreg, status,2, status,0, pclath, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 1F/0
 20862 ;;		On exit  : 1F/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20868 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20869 ;;Total ram usage:        8 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    1
 20872 ;; This function calls:
 20873 ;;		___fladd
 20874 ;; This function is called by:
 20875 ;;		_CLC_2_Interrupt
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           
 20880                           ;psect for function ___flsub
 20881  0FE3                     ___flsub:	
 20882                           
 20883                           ;incstack = 0
 20884                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 20885  0FE3  3080               	movlw	128
 20886  0FE4  06D7               	xorwf	___flsub@a+3,f
 20887  0FE5  085B               	movf	___flsub@b+3,w
 20888  0FE6  00F3               	movwf	___fladd@b+3
 20889  0FE7  085A               	movf	___flsub@b+2,w
 20890  0FE8  00F2               	movwf	___fladd@b+2
 20891  0FE9  0859               	movf	___flsub@b+1,w
 20892  0FEA  00F1               	movwf	___fladd@b+1
 20893  0FEB  0858               	movf	___flsub@b,w
 20894  0FEC  00F0               	movwf	___fladd@b
 20895  0FED  0857               	movf	___flsub@a+3,w
 20896  0FEE  00F7               	movwf	___fladd@a+3
 20897  0FEF  0856               	movf	___flsub@a+2,w
 20898  0FF0  00F6               	movwf	___fladd@a+2
 20899  0FF1  0855               	movf	___flsub@a+1,w
 20900  0FF2  00F5               	movwf	___fladd@a+1
 20901  0FF3  0854               	movf	___flsub@a,w
 20902  0FF4  00F4               	movwf	___fladd@a
 20903  0FF5  268D               	fcall	___fladd
 20904  0FF6  0873               	movf	?___fladd+3,w
 20905  0FF7  0020               	movlb	0	; select bank0
 20906  0FF8  00D7               	movwf	?___flsub+3
 20907  0FF9  0872               	movf	?___fladd+2,w
 20908  0FFA  00D6               	movwf	?___flsub+2
 20909  0FFB  0871               	movf	?___fladd+1,w
 20910  0FFC  00D5               	movwf	?___flsub+1
 20911  0FFD  0870               	movf	?___fladd,w
 20912  0FFE  00D4               	movwf	?___flsub
 20913  0FFF  0008               	return
 20914  1000                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         86
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _Config_GP3->i1_PWM_GP3_RLED
    i1_PWM_GP3_RLED->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC1_ISR->_CLC_1_Interrupt
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3_RLED
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FADE_LEDS->_PWM_BLED
    _FADE_LEDS->_PWM_GLED
    _FADE_LEDS->_PWM_GP3_RLED
    _PWM_GP3_RLED->___wmul
    _PWM_GLED->___wmul
    _PWM_BLED->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_EncoderStatusUpdate
    _Encoder_PushButton_FSM->_EncoderStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10637
                     _ClearInterrupt
                        _DataInitSet
                        _Encoder_FSM
                       _GP_Ports_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0    5371
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    1687
                   _FadeProcessClear
                     _FadeProcessSet
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    1687
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    1718
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1594
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Encoder_FSM                                          0     0      0    4844
             _Encoder_PushButton_FSM
                          _FADE_LEDS
 ---------------------------------------------------------------------------------
 (2) _FADE_LEDS                                            0     0      0    4813
                   _FadeProcessClear
                     _FadeProcessSet
                           _PWM_BLED
                           _PWM_GLED
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3_RLED                                         7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_GLED                                             7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_BLED                                             7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1436
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0      93
                                              2 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0      62
                                              1 BANK1      1     1      0
                _EncoderStatusUpdate
 ---------------------------------------------------------------------------------
 (2) _Encoder_PushButton_FSM                               0     0      0      31
                _EncoderStatusUpdate
     _EncoderSwitch_GetValueFiltered
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EncoderSwitch_GetValueFiltered                       0     0      0       0
             _EncoderSwitch_GetValue
 ---------------------------------------------------------------------------------
 (4) _EncoderSwitch_GetValue                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EncoderStatusUpdate                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    9350
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    3372
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    3348
                                              5 BANK0      1     1      0
                       _RegisterRead
                      _RegisterWrite
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    3145
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                        _FirstConfig
                     _FirstDataSplit
                       _SecondConfig
                    _SecondDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _SecondDataSplit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _SecondConfig                                        0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _FirstDataSplit                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _FirstConfig                                         0     0      0       0
                    _RGB_EncoderMode
                    _STD_EncoderMode
 ---------------------------------------------------------------------------------
 (11) _STD_EncoderMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RGB_EncoderMode                                     0     0      0       0
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
 ---------------------------------------------------------------------------------
 (12) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     493
                                              0 BANK0      2     2      0
                    _PWM1_Initialize
                     i1_PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3_RLED                                      7     7      0     493
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     493
                                              0 BANK0      2     2      0
                    _PWM4_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           7     7      0     493
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM4_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     515
                                              1 BANK0      2     2      0
                    _PWM5_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     515
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     404
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM5_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     181
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    2973
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    2973
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    2776
                    _CLC_1_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2776
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_EncoderStatusUpdate                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _Encoder_FSM
     _Encoder_PushButton_FSM
       _EncoderStatusUpdate
       _EncoderSwitch_GetValueFiltered
         _EncoderSwitch_GetValue
       _SetInterrupt
     _FADE_LEDS
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_BLED
         ___wmul
       _PWM_GLED
         ___wmul
       _PWM_GP3_RLED
         ___wmul
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3_RLED
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM5_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM4_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM1_Initialize
           i1_PWM_GP3_RLED
             i1___wmul
         _FirstConfig
           _RGB_EncoderMode
             _PWM1_Initialize
             _PWM2_Initialize
             _PWM3_Initialize
           _STD_EncoderMode
         _FirstDataSplit
         _SecondConfig
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _SecondDataSplit
         _UpdateOut_GP1
         _UpdateOut_GP2
         _UpdateOut_GP3
         _eeprom_write
         i1___wmul
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 21 21:20:15 2019

                                       pc 0002                        __size_of_FADE_LEDS 0078  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 00CC  
                        i1___wmul@product 0074                           ??_UpdateOut_GP1 0070  
                         ??_UpdateOut_GP2 0070                           ??_UpdateOut_GP3 0070  
                                     l376 0256                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                   __size_of_PMD_Initialize 000E  
                           ??_FirstConfig 0070                           _PWM4_Initialize 1681  
                         _TMR2_Initialize 06A0                         ??_CLC2_Initialize 00CA  
                                     wreg 0009                           __end_of_GP1_FSM 019B  
                         __end_of_GP2_FSM 01E8                           __end_of_GP3_FSM 0238  
                RegisterRead@return_value 0072                                      S8541 10F2  
                                    S8543 1100                                      S8545 1108  
                                    S8547 10E4                                _S_RELATIVE 0036  
                            __CFG_LVP$OFF 0000                          __end_of_I2C1_ISR 1310  
                                    l1300 0184                                      l1312 01C1  
                                    l1315 01D0                                      l1331 0220  
                                    l1328 0211                           _timer3ReloadVal 00AC  
                                    l1297 0176                                      l1548 03AD  
                                    l1558 02C5                                      l1568 0568  
                                    l1578 04F5                                      l1588 05DB  
                                    l8005 046F                                      l8023 048B  
                                    l8105 0102                                      l8017 0481  
                                    l7305 0260                                      l8035 049D  
                                    l8109 0109                                      l8117 010C  
                                    l8053 00AD                                      l7501 04DA  
                                    l7421 02E0                                      l7271 023D  
                                    l8151 0320                                      l8081 00E4  
                                    l8073 00D7                                      l8065 00C7  
                                    l8057 00B9                                      l7521 0509  
                                    l7441 054D                                      l7353 0395  
                                    l7417 02D9                                      l8091 00F5  
                                    l8083 00E5                                      l8059 00BD  
                                    l7291 061C                                      l8171 0048  
                                    l7285 030F                                      l8069 00CF  
                                    l7525 0510                                      l7461 057C  
                                    l7373 03B7                                      l7295 0622  
                                    l8089 00F1                                      l7545 05C0  
                                    l7465 0583                                      l7377 03BE  
                                    l7475 0128                                      l7707 06C4  
                                    l8195 0061                                      l7565 05EF  
                                    l7479 0131                                      l7399 02AD  
                                    l7807 0420                                      l7569 05F6  
                                    l7913 01DC                                      l7739 035F  
                                    l7843 0168                                      l7931 01F7  
                                    l7923 01EC                                      l7773 0277  
                                    l7853 0180                                      l7837 015C  
                                    l7829 0151                                      l7933 01FF  
                                    l7839 0164                                      l7919 01E8  
                                    l7937 0203                                      l7961 022C  
                                    l7867 0190                                      l7883 01A7  
                                    l7875 019C                                      l7947 021C  
                                    l7885 01AF                                      _BLED 0042  
                                    l7985 0457                                      l7993 045F  
                                    l7889 01B3                                      l7979 044E  
                                    l7899 01CC                                      _CMAX 0028  
                                    _CMIN 0024                   __end_of_PWM1_Initialize 1772  
                                    _GLED 0043                                      _CVAL 002C  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      _PMD4 0915  
                                    _PMD5 0916                                      i1l80 0012  
                                    i1l82 001C                                      i1l84 0026  
                                    u5725 00ED                                      i1l89 002E  
                                    u5675 00B4                                      u5755 031B  
                                    u5797 0251                                      _RLED 0044  
                         ?_ClearInterrupt 0070                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                            ??_eeprom_write 0071  
                          i1_PWM_GP3_RLED 1772                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                   __end_of_RGB_EncoderMode 12C5  
                                    _main 0048   EncoderSwitch_GetValueFiltered@pb_status 00AE  
                         __end_of_PWM_GP1 0411                           __end_of_PWM_GP2 0304  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                        __end_of_FADE_GP1 037C                          __end_of_FADE_GP2 0294  
                        __end_of_FADE_GP3 043D                          __end_of_CLC1_ISR 0D1D  
                        __end_of_CLC2_ISR 0D19                             __CFG_BOREN$ON 0000  
                           __CFG_BORV$LOW 0000                                      start 0030  
                         _CLC_1_Interrupt 0D1D                           _PWM5_Initialize 1608  
                         _TMR3_Initialize 06C4                       __end_of_Encoder_FSM 0323  
                            PWM_BLED@duty 00D6                             __CFG_CSWEN$ON 0000  
                     _I2C1_StatusCallback 1310                               _DataInitSet 0070  
                           i1PWM_GP1@duty 004C                   __end_of_PWM2_Initialize 12E7  
                           i1PWM_GP2@duty 007C                           _CLC_2_Interrupt 0DA2  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 065C  
                            PWM_GLED@duty 00D6                                     _ADACT 009F  
                         __end_of___fladd 0FDC                                     ?_main 0070  
                                   _CCPR1 0291                                     _CCPR2 0295  
                                   _CCPR3 0311                                     _CCPR4 0315  
                           __CFG_WDTE$OFF 0000                           __end_of___flsub 1000  
                                   _GCONF 0048                                     _T2CON 001F  
                                   _T3CON 0413                        __size_ofi1_PWM_GP1 008F  
                      __size_ofi1_PWM_GP2 0069                            __CFG_DEBUG$OFF 0000  
                                   i1l165 1303                                     i1l830 1342  
                                   i1l819 1313                                _Config_GP1 1599  
                              _Config_GP2 1612                                _Config_GP3 16F7  
                                   i1l961 125A                                     i1l963 1265  
                                   i1l959 1258                                _EncoderReg 00BB  
                                   _ISTEP 0020                                     _OSCEN 091D  
                                   _TMR3H 0412                                     _TMR3L 0411  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        FadeProcessSet@stat 00CA  
       __size_of_TMR3_SetInterruptHandler 0005                 ?_TMR3_SetInterruptHandler 00CA  
                       ??_I2C1_Initialize 00CA                      ?_I2C1_StatusCallback 0070  
                        __end_of_TMR3_ISR 1205                           _STD_EncoderMode 12C5  
          ??_TMR3_DefaultInterruptHandler 0070                            _WDT_Initialize 06A8  
                  __end_ofi1_PWM_GP3_RLED 17DD                          __end_of_PWM_BLED 061A  
                        __end_of_PWM_GLED 0534                  __size_of_SecondDataSplit 000A  
         __size_of_Encoder_PushButton_FSM 006A                         __end_of_FADE_LEDS 04B5  
                 __end_of_PWM3_Initialize 12F4                                     pclath 000A  
                     __end_of_FirstConfig 128C                                _DoublePush 00A6  
                        __end_ofi1___wmul 1599                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
                     _EncoderStatusUpdate 0304                __size_ofi1_I2C1_Initialize 0011  
                          __CFG_MCLRE$OFF 0000                           __initialization 0032  
                            __end_of_main 006D                  __end_of_Int2StatusUpdate 023D  
                 __end_of_PWM4_Initialize 168E                   __end_of_TMR2_Initialize 06A8  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00DA  
                               ??_GP1_FSM 00CE                                 ??_GP2_FSM 00CE  
                               ??_GP3_FSM 00CE                      ?_EncoderStatusUpdate 0070  
                         _TMR3_StartTimer 06AC                     _TMR3_InterruptHandler 00AA  
                __end_of_FadeProcessClear 04BD                          __end_of_TimerInt 1139  
                        ??i1_SetInterrupt 0070                    __end_of_WDT_Initialize 06AC  
                   ??_I2C1_StatusCallback 007E                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _FADEGP 003E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  i1S8551 0C57                                    i1S8561 1120  
                                  _CCPR1H 0292                                    i1S8571 1000  
                                  i1S8555 1118                                    _CCPR2H 0296  
                                  i1S8549 1110                                    _CCPR3H 0312  
                                  _CCPR1L 0291                                    i1S8567 1128  
                               ??_PWM_GP1 00D0                                    _CCPR4H 0316  
                                  _CCPR2L 0295                                 ??_PWM_GP2 00D0  
                                  _CCPR3L 0311                                    _CCPR4L 0315  
                         ?i1_PWM_GP3_RLED 0070                                    _GCONF2 00C3  
                                  _GP1REG 0041                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _GP2REG 0040                                    _GP3REG 003F  
                                  _T3GCON 0414           ?_EncoderSwitch_GetValueFiltered 0070  
        ??_EncoderSwitch_GetValueFiltered 00CA                                    i1l1214 1648  
                        ?_PWM1_Initialize 0070                                    i1l1231 1680  
                                  i1l1207 1641                                    i1l2104 0F8B  
                                  i1l1225 1668                                    i1l1170 15C8  
                                  i1l1162 15AB                                    i1l1219 164F  
                                  i1l1251 172D                                    i1l2124 0FD6  
                                  i1l1244 1726                                    i1l1236 1709  
                                  i1l2109 0FA4                                    i1l1229 166B  
                                  i1l1182 15D6                                    i1l1262 174D  
                 __end_of_CLC_1_Interrupt 0DA2                                    i1l1192 15F2  
                                  i1l1256 1734                                    i1l1272 17FA  
                                  i1l2081 0EBB                                    i1l1177 15CF  
                                  _ODCONA 028C                                    i1l2090 0F12  
                                  i1l2082 0EB9                                    i1l1194 1607  
                                  i1l1266 1750                                    _ODCONB 028D  
                                  i1l2091 0F13                                    _ODCONC 028E  
                                  i1l2076 0EA0                                    i1l1188 15EF  
                                  i1l1268 1765                                    i1l2077 0E9E  
                                  i1l1278 11C6                                    i1l1286 0CC7  
                                  i1l2087 0F1E                                    i1l1199 1624  
                                  i1l2089 0F0C                                    i1l2098 0F38  
                                  i1l2099 0F39                                    i1l1548 1439  
                                  i1l5021 17BB                                    i1l1750 13FC  
                                  i1l1558 16BE                                    i1l1568 17A4  
                                  i1l5017 17B5                   __end_of_PWM5_Initialize 1612  
                                  i1l1772 11E1                   __end_of_TMR3_Initialize 06DF  
                                  i1l6103 0E3C                                    i1l5223 166E  
                                  i1l5127 1280                                    i1l1776 11F6  
                                  i1l5129 1287                                    i1l5073 1226  
                                  i1l5313 0CBC                                    i1l5171 15F5  
                                  i1l5219 1654                                    i1l5075 1228  
                                  i1l5501 0F99                                    i1l6109 0E64  
                                  i1l1965 0E4D                                    i1l5325 17E2  
                                  i1l5423 0EC7                                    i1l1967 0E7B  
                                  i1l5167 15DB                                    i1l5271 1739  
                                  i1l5087 123F                                    i1l5521 0FB3  
                                  i1l5513 0FA8                                    i1l4801 1586  
                                  i1l5097 1252                                    i1l5515 0FAA  
                                  i1l5275 1753                                    i1l5611 14B8  
                                  i1l5603 14AD                                    i1l6331 1325  
                                  i1l6323 1317                                    i1l5525 0FB5  
                                  i1l5509 0FA5                                    i1l5453 0EE5  
                                  i1l6317 0E1E                                    i1l6309 0DDF  
                                  i1l4805 158C                                    i1l5621 14C7  
                                  i1l5613 14BB                                    i1l6325 131A  
                                  i1l6333 132E                                    i1l6341 1338  
                                  i1l6319 0E26                                    i1l4815 11CC  
                                  i1l5631 14D6                                    i1l5623 14CA  
                                  i1l5615 14BE                                    i1l6335 1330  
                                  i1l5545 0FD2                                    i1l5537 0FC6  
                                  i1l5473 0F28                                    i1l5801 13AE  
                                  i1l5641 14E5                                    i1l5633 14D9  
                                  i1l5625 14CD                                    i1l5617 14C1  
                                  i1l5609 14B5                                    i1l5467 0F1A  
                                  i1l6355 0D28                                    i1l5803 13B1  
                                  i1l5731 134E                                    i1l5715 157E  
                                  i1l5643 14E8                                    i1l5635 14DC  
                                  i1l5627 14D0                                    i1l5619 14C4  
                                  i1l5707 1564                                    i1l5549 0FD7  
                                  i1l5485 0F41                                    i1l6381 0D98  
                                  i1l6373 0D58                                    i1l5821 13C6  
                                  i1l5805 13B4                                    i1l5725 1345  
                                  i1l4933 1448                                    i1l4909 1421  
                                  i1l5653 14F6                                    i1l5645 14EB  
                                  i1l5637 14DF                                    i1l5629 14D3  
                                  i1l5709 156E                                    _C_DIRE 00BE  
                                  i1l5495 0F83                                    i1l6383 0DA0  
                                  i1l5831 13D5                                    i1l5823 13C9  
                                  i1l5815 13C0                                    i1l5807 13B7  
                                  i1l5751 1366                                    i1l5735 1354  
                                  i1l5727 1348                                    i1l5671 1527  
                                  i1l5663 1505                                    i1l5647 14EE  
                                  i1l5639 14E2                                    i1l6289 0DAE  
                                  i1l5825 13CC                                    i1l5817 13C2  
                                  i1l5809 13BA                                    i1l5745 1360  
                                  i1l5737 1356                                    i1l5729 134B  
                                  i1l4929 1442                                    i1l5673 152B  
                                  i1l5657 14FC                                    i1l5649 14F1  
                                  i1l6393 121A                                    i1l5835 13D8  
                                  i1l5827 13CF                                    i1l5819 13C4  
                                  i1l5763 1374                                    i1l5739 1359  
                                  i1l4955 16A6                                    i1l4787 12E7  
                                  i1l5691 1552                                    i1l5683 1540  
                                  i1l5675 152E                                    i1l5667 1516  
                                  i1l5595 14A3                                    i1l6395 1205  
                                  i1l5853 13F4                                    i1l5837 13DA  
                                  i1l5829 13D2                                    i1l5781 1390  
                                  i1l5757 136C                                    i1l5749 1364  
                                  i1l5845 13DF                                    i1l4973 16CF  
                                  i1l5589 149A                                    i1l5855 13F7  
                                  i1l5839 13DC                                    i1l5791 139F  
                                  i1l5783 1393                                    i1l5775 1387  
                                  i1l5847 13E9                                    i1l5695 155B  
                                  i1l5687 1549                                    i1l5679 1537  
                                  i1l5599 14A8                                    i1l6823 1307  
                                  i1l5793 13A2                                    i1l5785 1396  
                                  i1l5777 138A                                    i1l5769 137D  
                                  i1l4977 16D5                                    i1l5795 13A5  
                                  i1l5787 1399                                    i1l5779 138D  
                                  i1l5699 155C                                    i1l6819 1301  
                                  i1l5797 13A8                                    i1l5789 139C  
                                  i1l4997 178A                                    i1l5799 13AB  
                                  i1l8553 1743                                    i1l8563 1678  
                                  i1l8565 15E5                                    i1l8557 175D  
                                  i1l8559 165E                                    i1l8569 15FF  
                                  u250_25 0CF6                                    u251_25 0D00  
                                  u252_25 0D0C                               _Encoder_FSM 0315  
                                  _C_IPUD 00BF                                    u271_21 13FB  
                                  u370_25 0DAC                                    u284_25 0EF9  
                                  _C_RMOD 00C0                                    u285_20 0F03  
                                  u286_20 0F04                                    u295_23 0F54  
                                  u377_25 0D26                                    _OSCFRQ 091F  
                                  _WDTCON 0097                          ?_RGB_EncoderMode 0070  
                       __end_ofi1_PWM_GP1 1497                         __end_ofi1_PWM_GP2 16F7  
                         _TMR3_WriteTimer 1210                            __CFG_PWRTE$OFF 0000  
                 __end_of_CLC_2_Interrupt 0E28                      __size_of_eeprom_read 000F  
                        ??_FirstDataSplit 0070                                    ___flge 0E2B  
                               ??___fladd 004C                                    ___wmul 061A  
                          __CFG_STVREN$ON 0000                                 ??___flsub 007C  
                  _Encoder_PushButton_FSM 00AD                                    _en_deb 00A0  
                                  _pb_cnt 00B1                                    _pb_fsm 00B2  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                    __end_of_eeprom_write 11FC                     ??_EncoderStatusUpdate 00CA  
                 __end_of_STD_EncoderMode 12DC                             ?_SecondConfig 0070  
                         _I2C1_AddressSet 062F                               ?_Config_GP1 0070  
                             ?_Config_GP2 0070                               ?_Config_GP3 0070  
                          _PMD_Initialize 0692                                 ?_FADE_GP1 0070  
                               ?_FADE_GP2 0070                                 ?_FADE_GP3 0070  
                               ?_CLC1_ISR 0070                                 ?_CLC2_ISR 0070  
                             _FirstConfig 121F                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00CD  TMR3_SetInterruptHandler@InterruptHandler 00CA  
                           ?_RegisterRead 0070                           _CLC1_Initialize 06AF  
    __end_of_I2C1_Initialize_ClockStreach 11E0     __size_of_I2C1_Initialize_ClockStreach 0014  
            _I2C1_Initialize_ClockStreach 11CC                             ?_SetInterrupt 0070  
          __size_ofi1_EncoderStatusUpdate 0003             __end_ofi1_EncoderStatusUpdate 0E2B  
                              ___flge@ff1 0070                                ___flge@ff2 0074  
                        ?_PWM3_Initialize 0070                               _i2c_address 004B  
                       _SYSTEM_Initialize 0328                   __end_of__initialization 0045  
                         eeprom_read@addr 0070                        ?_SYSTEM_Initialize 0070  
                ??_EncoderSwitch_GetValue 00CA                         ??_SecondDataSplit 0070  
                   __end_of_TMR3_CallBack 1210                      FadeProcessClear@stat 00CC  
                          __pcstackCOMMON 0070                              __pidataBANK1 0000  
                     ??_SYSTEM_Initialize 00CC                   __end_of_TMR3_StartTimer 06AF  
                         _CLC2_Initialize 033B                                 ?_TMR3_ISR 0070  
                              ??_I2C1_ISR 007E                          ?_PWM4_Initialize 0070  
                        ?_TMR2_Initialize 0070                                 ?_PWM_BLED 0070  
                               ?_PWM_GLED 0070                    __end_of_PMD_Initialize 06A0  
                 __size_of_FadeProcessSet 0004                            ??_SecondConfig 0070  
                               ?i1___wmul 0070                                ??_FADE_GP1 00D9  
                              ??_FADE_GP2 00D7                                ??_FADE_GP3 00D7  
                              ??_CLC1_ISR 007C                                ??_CLC2_ISR 007C  
                        ??_ClearInterrupt 00CA                         eeprom_write@value 0070  
                          ??_RegisterRead 0071                            ??_SetInterrupt 00CA  
               __end_of_SYSTEM_Initialize 033B                   __end_of_TMR3_WriteTimer 121F  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                        ?_CLC_1_Interrupt 0070                          ?_PWM5_Initialize 0070  
                        ?_TMR3_Initialize 0070                    __size_of_RegisterWrite 00ED  
                     __size_of_Config_GP1 006F                       __size_of_Config_GP2 006F  
                     __size_of_Config_GP3 006F                          ?_CLC_2_Interrupt 0070  
                          _SSP1DATPPSbits 0E21                                __pmaintext 0048  
                           _CLCIN0PPSbits 0E28                             ?_GP_Ports_FSM 0070  
                               ?_TimerInt 0070                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 0328  
                                 ?___wmul 00CA                   __end_of_I2C1_AddressSet 0642  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 0642  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CCP4CON 0317  
                                 _CLC1CON 0F10                                   _CLC2CON 0F1A  
                                 _FADERGB 00C4                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                ??_PWM_BLED 00D0  
                              ??_PWM_GLED 00D0                                   _GP1CONF 0047  
                                 _GP2CONF 0046                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 0045                           ?_PMD_Initialize 0070  
                     __CFG_RSTOSC$HFINT32 0000                   __size_of_ADC_Initialize 0008  
                              ??i1___wmul 0074                          ?_STD_EncoderMode 0070  
                                 _GP1_FSM 0150                                   _GP2_FSM 019B  
                                 _GP3_FSM 01E8                   __end_of_CLC1_Initialize 06C4  
                   __end_of_UpdateOut_GP1 1800                     __end_of_UpdateOut_GP2 11CC  
                   __end_of_UpdateOut_GP3 0CCD                                   _ESTATUS 004A  
                        PWM_GP3_RLED@duty 00D6                                   _C_MBANK 00C1  
                                 _FSTATUS 00C7                                   _INTCONF 0049  
       I2C1_StatusCallback@slaveWriteType 00B8                                   _C_DTYPE 00BD  
                                 _C_ETYPE 0038                                   _C_RESET 00C2  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 0037                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _PWM5DCH 0618  
                                 _PWM5DCL 0617                                   _PWM5CON 0619  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 1000  
                                 _SSP1MSK 0213                                   _PWM_GP1 037C  
                                 _PWM_GP2 0294                           _double_push_cnt 00A4  
                                 _S_CKSRC 00BC                   __end_of_CLC2_Initialize 0350  
                               _FADE_LEDS 043D           __size_of_EncoderSwitch_GetValue 000D  
                          ??_GP_Ports_FSM 00D9                                 _GAMMABLED 0039  
                               _GAMMAGLED 003A                                ??_TimerInt 0070  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 0E8D  
                        ?_TMR3_StartTimer 0070                                   ___flsub 0FE3  
                         __size_of___wmul 0015                                   _gp1_fsm 00B6  
                                 _gp2_fsm 00B5                                   _gp3_fsm 00B4  
                       ?_Int2StatusUpdate 0070                             _GAMMAGP3_RLED 003B  
                      ??_Int2StatusUpdate 00CB                                   __ptext1 06AC  
                                 __ptext2 0328                                   __ptext3 06A8  
                                 __ptext4 06C4                                   __ptext5 0323  
                                 __ptext6 06A0                                   __ptext7 0692  
                                 __ptext8 065C                                   __ptext9 0653  
                           _RegisterWrite 1497                                   _en_prev 00AF  
                   _OSCILLATOR_Initialize 0653                                   _fsm_tmr 00C9  
                        ??i1_PWM_GP3_RLED 0076                                 _T3CONbits 0413  
                ??_PIN_MANAGER_Initialize 00CA                         ?_FadeProcessClear 0070  
                      ??_FadeProcessClear 00CC                __size_of_SYSTEM_Initialize 0013  
                                 clrloop0 1131                      end_of_initialization 0045  
                        ?_TMR3_WriteTimer 0070                              ?_Encoder_FSM 0070  
                            _eeprom_write 11E0                      __end_of_SecondConfig 17E5  
                              ?_FADE_LEDS 0070                   __end_of_I2C1_Initialize 0653  
                 ?_Encoder_PushButton_FSM 0070                                 i1_PWM_GP1 1408  
                               i1_PWM_GP2 168E                                _temp_green 0031  
                    __end_of_RegisterRead 13F9                          ?_I2C1_AddressSet 0070  
                    __end_of_SetInterrupt 0245                     i1___wmul@multiplicand 0072  
                          _FadeProcessSet 04BD                            ?_RegisterWrite 004F  
             __end_of_I2C1_StatusCallback 1343                          ??_WDT_Initialize 00CA  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                  _TMR3_SetInterruptHandler 0323  
                            ??_Config_GP1 004D                              ??_Config_GP2 004C  
                            ??_Config_GP3 004C                         __size_of_I2C1_ISR 001C  
                        ?_CLC1_Initialize 0070                               ___fladd@grs 007B  
                 EncoderStatusUpdate@stat 00CA                    _EncoderSwitch_GetValue 0308  
                            ?_FirstConfig 0070                                 _TRISCbits 008E  
                       _double_push_delay 00A2                           _SecondDataSplit 17E5  
                       __size_of_FADE_GP1 002C                         __size_of_FADE_GP2 002C  
                       __size_of_FADE_GP3 002C                         __size_of_CLC1_ISR 0004  
                       __size_of_CLC2_ISR 0004                             ?_PWM_GP3_RLED 0070  
                        __CFG_FEXTOSC$OFF 0000                 i1EncoderStatusUpdate@stat 0070  
                           ??_eeprom_read 0070            __end_of_Encoder_PushButton_FSM 0117  
                        ?_CLC2_Initialize 0070                        __end_of_Config_GP1 1608  
                      __end_of_Config_GP2 1681                        __end_of_Config_GP3 1766  
                __size_of_PWM1_Initialize 000C                                ?i1_PWM_GP1 0070  
                              ?i1_PWM_GP2 0070               __end_of_EncoderStatusUpdate 0308  
                    Int2StatusUpdate@stat 00CB                  __size_of_RGB_EncoderMode 0039  
                             PWM_GP1@duty 00D8                               PWM_GP2@duty 00D6  
                  __end_of_FadeProcessSet 04C1                            __end_of___flge 0E8D  
                      i1PWM_GP3_RLED@duty 007C                            __end_of___wmul 062F  
                       __size_of_TMR3_ISR 0009                      __size_of_DataInitSet 003D  
                          _ADC_Initialize 0260                    ?_OSCILLATOR_Initialize 0070  
                       __size_of_PWM_BLED 0073                         __size_of_PWM_GLED 0073  
                     start_initialization 0032                         __size_ofi1___wmul 0015  
                     __end_of_gamma_table 0C57                  __size_of_PWM2_Initialize 000B  
         __size_of_PIN_MANAGER_Initialize 0036                      __end_of_GP_Ports_FSM 0150  
                          ??_PWM_GP3_RLED 00D0                     i1_EncoderStatusUpdate 0E28  
                 __size_ofi1_SetInterrupt 0007                               ??_FADE_LEDS 00D7  
                        ?_I2C1_Initialize 0070                          __CFG_LPBOREN$OFF 0000  
                __size_of_PWM3_Initialize 000D                                  ??___flge 0078  
                        ??_PMD_Initialize 00CA                          I2C1_ISR@i2c_data 0052  
                                ??___wmul 00CE                       __end_of_eeprom_read 1408  
                             _CCPTMRSbits 029F                           ?_FadeProcessSet 0070  
                         ??_RegisterWrite 007E                    __end_of_ADC_Initialize 0268  
                             __pdataBANK1 00DA                         __size_of_TimerInt 0003  
                                ?_GP1_FSM 0070                                  ?_GP2_FSM 0070  
                                ?_GP3_FSM 0070                   __end_of_SecondDataSplit 17EF  
                               ___fladd@a 0074                                 ___fladd@b 0070  
                 __size_of_FirstDataSplit 0048                                 ___flsub@a 0054  
                               ___flsub@b 0058                                 ___latbits 0002  
                           __pcstackBANK0 004C                             __pcstackBANK1 00CA  
        I2C1_StatusCallback@i2c_bus_state 0051                  __size_of_PWM4_Initialize 000D  
                __size_of_TMR2_Initialize 0008                    __size_of_TMR3_CallBack 000B  
                                ?_PWM_GP1 0070                                  ?_PWM_GP2 0070  
                   __size_of_SecondConfig 0008                          eeprom_write@addr 0071  
                    __size_of_Encoder_FSM 000E                     __size_of_RegisterRead 00B6  
                   __size_of_SetInterrupt 0008                    _PIN_MANAGER_Initialize 065C  
                __size_of_CLC_1_Interrupt 0085                  __size_of_PWM5_Initialize 000A  
                __size_of_TMR3_Initialize 001B                               ??i1_PWM_GP1 0076  
                             ??i1_PWM_GP2 0076                                  ?___fladd 0070  
                                ?___flsub 0054                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 12F4  
                             _gamma_table 06DF                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007E                                 _int2clear 00B9  
                __size_of_CLC_2_Interrupt 0086                                 __pswtext1 10F2  
                               __pswtext2 1100                                 __pswtext3 1108  
                               __pswtext4 10E4                                 __pswtext5 1110  
                               __pswtext6 0C57                                 __pswtext7 1118  
                               __pswtext8 1120                                 __pswtext9 1128  
                       ??_RGB_EncoderMode 0070                              _SecondConfig 17DD  
                                _CLC1GLS0 0F16                                  _CLC1GLS1 0F17  
                                _CLC1GLS2 0F18                                  _CLC1GLS3 0F19  
                                _CLC2GLS0 0F20                                  _CLC2GLS1 0F21  
                                _CLC2GLS2 0F22                                  _CLC2GLS3 0F23  
                                _CLC1SEL0 0F12                                  _CLC1SEL1 0F13  
                                _CLC1SEL2 0F14                                  _CLC1SEL3 0F15  
                                _CLC2SEL0 0F1C                                  _CLC2SEL1 0F1D  
                                _CLC2SEL2 0F1E                                  _CLC2SEL3 0F1F  
                                _I2STATUS 00C8                                  _FADE_GP1 0350  
                                _FADE_GP2 0268                                  _FADE_GP3 0411  
                                _CLC1_ISR 0D19                                  _CLC2_ISR 0D15  
                                _DEBOUNCE 00A8                                  _GAMMAGP1 003D  
                                _GAMMAGP2 003C                                  _ANTBOUNC 00C6  
               __size_of_Int2StatusUpdate 0005                      __size_of_FirstConfig 006D  
                __size_of_STD_EncoderMode 0017                               _CPUDOZEbits 0918  
                            _RegisterRead 1343                              _SetInterrupt 023D  
                                _DPPERIOD 00C5                    ?i1_EncoderStatusUpdate 0070  
                       ??_PWM2_Initialize 0070                            ___wmul@product 00CE  
                                _LATBbits 010D                                  _LATCbits 010E  
                 __size_of_ClearInterrupt 0003                                 clear_ram0 1130  
                             _eeprom_read 13F9             ?_I2C1_Initialize_ClockStreach 0070  
                                _PIE1bits 0091                                  _PIE3bits 0093  
               __size_of_FadeProcessClear 0008                                  _PMD2bits 0913  
                  __size_of_UpdateOut_GP1 0011                    __size_of_UpdateOut_GP2 0011  
                  __size_of_UpdateOut_GP3 0014       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00CC                             _TMR3_CallBack 1205  
                             _gp_fade_cnt 00B3                      __end_of_PWM_GP3_RLED 05A7  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _TMR3_ISR 11FC  
                                _SSP1STAT 0214                       _I2C1_slaveWriteData 00DA  
                                _PWM_BLED 05A7                                  _PWM_GLED 04C1  
                 ?_EncoderSwitch_GetValue 0070                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                     __size_of_GP_Ports_FSM 001D  
                       ___wmul@multiplier 00CA                                  i1___wmul 1584  
                        ?_SecondDataSplit 0070                          __size_of_GP1_FSM 004B  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 0050  
                                _WPUBbits 020D                                  _WPUCbits 020E  
                __size_of_TMR3_StartTimer 0003                         RegisterWrite@data 004F  
                        __size_of_PWM_GP1 0095                          __size_of_PWM_GP2 0070  
                       ??_PWM4_Initialize 0070                         ??_TMR2_Initialize 00CA  
                          i1_SetInterrupt 0FDC                            ?_TMR3_CallBack 0070  
                __size_of_TMR3_WriteTimer 000F                         _ADC_GetConversion 0245  
                                _TimerInt 1136                              _GP_Ports_FSM 0133  
                 ??_OSCILLATOR_Initialize 00CA            __end_of_EncoderSwitch_GetValue 0315  
                      ?_ADC_GetConversion 00CA                          __size_of___fladd 014F  
                        __size_of___flsub 001D                         ??_CLC_1_Interrupt 0054  
                       ??_PWM5_Initialize 0070                         ??_TMR3_Initialize 00CC  
                              _ANSELCbits 018E                            _FirstDataSplit 0CCD  
                     ??_ADC_GetConversion 00CC                                  _fade_cnt 00B0  
                __size_of_I2C1_AddressSet 0013                             _UpdateOut_GP1 17EF  
                           _UpdateOut_GP2 11BB                             _UpdateOut_GP3 0CB9  
                       ??_CLC_2_Interrupt 005C              __size_of_I2C1_StatusCallback 0033  
                                __ptext10 0642                                  __ptext11 062F  
                                __ptext20 0411                                  __ptext12 033B  
                                __ptext21 0268                                  __ptext13 06AF  
                                __ptext30 061A                                  __ptext22 0294  
                                __ptext14 0133                                  __ptext31 04BD  
                                __ptext23 0350                                  __ptext15 01E8  
                                __ptext40 006D                                  __ptext32 04B5  
                                __ptext24 037C                                  __ptext16 019B  
                                __ptext33 0238                                  __ptext25 0315  
                                __ptext17 0150                                  __ptext50 11E0  
                                __ptext42 11FC                                  __ptext34 00AD  
                                __ptext26 043D                                  __ptext18 0260  
                                __ptext51 0CB9                                  __ptext43 1210  
                                __ptext35 023D                                  __ptext27 0534  
                                __ptext19 0245                                  __ptext60 12C5  
                                __ptext52 11BB                                  __ptext44 1205  
                                __ptext36 0117                                  __ptext28 04C1  
                                __ptext61 128C                                  __ptext53 17EF  
                                __ptext45 0003                                  __ptext37 0308  
                                __ptext29 05A7                                  __ptext70 1599  
                                __ptext62 12E7                                  __ptext54 17E5  
                                __ptext46 1136                                  __ptext38 0304  
                                __ptext71 1408                                  __ptext63 12DC  
                                __ptext55 17DD                                  __ptext47 12F4  
                                __ptext39 0070                                  __ptext80 0D1D  
                                __ptext72 1584                                  __ptext64 16F7  
                                __ptext56 11AA                                  __ptext48 1310  
                                __ptext81 0FDC                                  __ptext73 1608  
                                __ptext65 1772                                  __ptext57 11CC  
                                __ptext49 1497                                  __ptext82 0E28  
                                __ptext74 1343                                  __ptext66 1766  
                                __ptext58 0CCD                                  __ptext83 0E2B  
                                __ptext75 13F9                                  __ptext67 1612  
                                __ptext59 121F                                  __ptext84 0E8D  
                                __ptext76 0D15                                  __ptext68 168E  
                                __ptext77 0DA2                                  __ptext69 1681  
                                __ptext78 0FE3                                  __ptext79 0D19  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                  __end_ofi1_SetInterrupt 0FE3                  __size_of_CLC1_Initialize 0015  
                 TMR3_WriteTimer@timerVal 0070                                  _gp_timer 00B7  
                 __size_ofi1_PWM_GP3_RLED 006B                             __size_of_main 0025  
                                _intclear 00BA                         ??_STD_EncoderMode 0070  
               __end_of_ADC_GetConversion 0260                          ??_FadeProcessSet 00CA  
                                _temp_gp1 0035                                  _temp_gp2 0034  
                                _temp_gp3 0033                                  _temp_blu 0030  
                                _temp_red 0032                                _RC3PPSbits 0EA3  
                              _RB6PPSbits 0E9E                                _RC4PPSbits 0EA4  
          ??_I2C1_Initialize_ClockStreach 0070                             ??_DataInitSet 00CA  
                                int$flags 007E                                _RB7PPSbits 0E9F  
                              _RC5PPSbits 0EA5                                _RC6PPSbits 0EA6  
                              _ODCONCbits 028E                                _RC7PPSbits 0EA7  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                __size_of_CLC2_Initialize 0015                          RegisterWrite@add 0050  
                            _SSP1STATbits 0214      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                  __end_of_FirstDataSplit 0D15    __end_of_EncoderSwitch_GetValueFiltered 0133  
 __size_of_EncoderSwitch_GetValueFiltered 001C            _EncoderSwitch_GetValueFiltered 0117  
            __size_of_EncoderStatusUpdate 0004                            ?_UpdateOut_GP1 0070  
                          ?_UpdateOut_GP2 0070                            ?_UpdateOut_GP3 0070  
                              _INTCONbits 000B                               _NVMCON1bits 0895  
                        _Int2StatusUpdate 0238                   __size_of_WDT_Initialize 0004  
                       ??_TMR3_StartTimer 00CA                           ?i1_SetInterrupt 0070  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                          _ClearInterrupt 006D                           ??_TMR3_CallBack 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E0F  
                   __size_of_PWM_GP3_RLED 0073                           _PWM1_Initialize 1766  
                        _FadeProcessClear 04B5                          ??_ADC_Initialize 00CA  
                         _RGB_EncoderMode 128C                         i1_I2C1_Initialize 11AA  
                      ?i1_I2C1_Initialize 0070                         ??_TMR3_WriteTimer 0072  
                __size_of_I2C1_Initialize 0011                     __end_of_RegisterWrite 1584  
                         ?_FirstDataSplit 0070                             __pstringtext1 06DF  
           ?_TMR3_DefaultInterruptHandler 0070                       __end_of_DataInitSet 00AD  
                     ??i1_I2C1_Initialize 0070                           _PWM2_Initialize 12DC  
                 ??i1_EncoderStatusUpdate 0070                  ??_Encoder_PushButton_FSM 00CB  
                           ___fladd@signs 0078                              _PWM_GP3_RLED 0534  
                           ??_Encoder_FSM 00D7                    __end_of_ClearInterrupt 0070  
                       ??_I2C1_AddressSet 00CA            __end_of_PIN_MANAGER_Initialize 0692  
                             _PWMTMRSbits 061F                             ?_eeprom_write 0070  
                            ___fladd@aexp 0079                              ___fladd@bexp 007A  
                              _STATUSbits 0003                              ?_eeprom_read 0070  
              __size_of_ADC_GetConversion 001B                 __end_ofi1_I2C1_Initialize 11BB  
                         _PWM3_Initialize 12E7                         ??_CLC1_Initialize 00CA  
